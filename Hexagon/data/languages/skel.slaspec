# sleigh specification file for Qualcomm Hexagon Processor (QDSP 6)

# List of nice-to-haves in SELIGH
# arbitrary bit-count sext, not just bytes
# allow (a+b, a) in tokens, keep getting imm64s wrong 
# Allow setting size of local in constructor
# Fix decompiler for PTRUE
# Allow setting [a=b;] in imm ctor, have to use [a = b<<0;]

#Status:
# Disas everything up to v73, most common ops have pcode impl
# Switches don't work yet
 
# ALU32:  Decode up to v73, pcode up to v73 (no vec)
# CR:     Decode up to v73, pcode almost up to v73
# JR:     Decode up to v73, pcode up to v73
# J:      Decode up to v73, pcode up to v73
# LD:     Decode up to v51, pcode unfinished
# MEMOP:  Decode up to v73, pcode up to v73
# NV:     Decode up to v73, pcode unfinished
# ST:     Decode up to v73, pcode unfinished
# SYSTEM: Decode up to v73, pcode unfinished
# XTYPE:  Decode up to v73, pcode unfinished
# XTYPE/ALU:      Decode up to v73, pcode unfinished
# XTYPE/BIT:      Decode up to v73, pcode unfinished
# XTYPE/COMPLEX:  Decode up to v73, pcode unfinished
# XTYPE/FP:       Decode up to v73, pcode unfinished
# XTYPE/MPY:      Decode up to v73, pcode unfinished
# XTYPE/PERM:     Decode up to v73, pcode unfinished
# XTYPE/PRED:     Decode up to v73, pcode unfinished
# XTYPE/SHIFT:    Decode up to v73, pcode unfinished

# Slices explained:
# Hexagon has strange semantics where an instructions effect might not take place immidiately
# e.g. branches are grouped to the end of a packet, and ops with new-value inputs take place after 
# all new-value producing ops so that they can consume their output
#  
# In order to handle this, we break each instruction up into "slices" and generate all ops in a slice before moving to the next slice
# like this:
# +--------+--------+
# | normal + normal | # normal slice, mode=0
# +--------+--------+
# | branch + branch | # branch slice, mode=1100
# +--------+--------+
# 


# ordering plans:
# 0000 -> normal int/fp/ld/st
# 1000 -> NV inputs
# 1100 -> branches
# TODO: NV branches

define endian=little;
define alignment=4;

define space ram     type=ram_space      size=4 wordsize=1 default;
define space register type=register_space size=4;

define token instr (32)
   iclass     = (28,31)

   imm_29_31 = (29, 31)


   imm_27 = (27, 27)
      imm_26 = (26, 26)
 

   imm_25_27 = (25, 27)
   imm_25_26 = (25, 26) signed
   imm_25_26u = (25, 26)

   imm_24_27 = (24, 27)

   imm_23_27 = (23, 27)
   imm_23_24 = (23, 24)
   imm_23 = (23, 23)
   imm_23u = (23, 23)

imm_22_26 = (22, 26)
   imm_22_27 = (22, 27)
   imm_22_23 = (22, 23) signed
   imm_22_23u = (22, 23)
   imm_22 = (22, 22)

   imm_21_27 = (21, 27) signed
   imm_21_24 = (21, 24)
   imm_21_23 = (21, 23)
   imm_21_23u = (21, 23) 
   imm_21_22 = (21, 22) signed
   imm_21_22u = (21, 22)
   imm_21 = (21, 21) signed
   imm_21u = (21, 21)

   imm_20_27 = (20, 27)
   imm_20_21 = (20, 21)
   imm_20 = (20, 20) signed

   imm_19 = (19, 19) signed

   imm_18_21 = (18, 21)
   imm_18_20 = (18, 20)
   imm_18_19 = (18, 19)
   
      imm_17_27 = (17,27)
   

   imm_16_27 = (16, 27) signed
   imm_16_25 = (16, 25) signed
   imm_16_24 = (16, 24) signed
   imm_16_24u = (16, 24)
   imm_16_23 = (16, 23)
   imm_16_22 = (16, 22)
   imm_16_21 = (16, 21)
   imm_16_20 = (16, 20)
   imm_16_20u = (16, 20)
   imm_16_19 = (16, 19)
   imm_16_18 = (16, 18)
   imm_16_17 = (16, 17)
   imm_16_17u = (16, 17)

   imm_13 = (13, 13) signed
   imm_13u = (13, 13)

   imm_12_13 = (12, 13)
   imm_12 = (12, 12)

   imm_11_13 = (11, 13) signed
   imm_11_12 = (11, 12)
   imm_11 = (11, 11)

   imm_10_13 = (10, 13)
   imm_10_12 = (10, 12)
      imm_10_11 = (10, 11)
   imm_10 = (10, 10)
   
   imm_9_13 = (9, 13)
   imm_9_11 = (9, 11)
   imm_9_10 = (9, 10)
      imm_9 = (9, 9)

   imm_8_13 = (8, 13)
   imm_8_13u = (8, 13)
   imm_8_12 = (8, 12)
   imm_8_12u = (8, 12)
      imm_8_11 = (8, 11)
      imm_8_11u = (8, 11)
      imm_8_10 = (8, 10)
      imm_8_9 = (8, 9)
   
   imm_8 = (8, 8)
   imm_8u = (8, 8)

   imm_7_13 = (7, 13)
   imm_7_12 = (7, 12)
   imm_7_12u = (7, 12)
   imm_7 = (7, 7)
   imm_7u = (7, 7)

   imm_6_7 = (6, 7)
   imm_6_13 = (6, 13)
   imm_6 = (6, 6)
   imm_6u = (6, 6)

   imm_5_13 = (5, 13) signed
   imm_5_13u = (5, 13)
   imm_5_12 = (5, 12) signed
   imm_5_12u = (5, 12)
      imm_5_11 = (5, 11)
      imm_5_11u = (5, 11)
   imm_5_10 = (5, 10)
   imm_5_10u = (5, 10)
   imm_5_9 = (5, 9)
   imm_5_8 = (5, 8) signed
   imm_5_7 = (5, 7) signed
   imm_5_7u = (5, 7)
   imm_5_6 = (5, 6)
   imm_5_6u = (5, 6)
   imm_5 = (5, 5)
   imm_5u = (5, 5)

   imm_4 = (4, 4)

   imm_3_12 = (3, 12)
   imm_3_7 = (3, 7)
   imm_3_7u = (3, 7)
   imm_3_6 = (3, 6)
   imm_3_6u = (3, 6)
   imm_3_4 = (3, 4)
   imm_3_4u = (3, 4)
   imm_3 = (3, 3)
   imm_3u = (3, 3)

   imm_2_13 = (2, 13)
   imm_2_12 = (2, 12)
   imm_2_7 = (2, 7)
   imm_2_6 = (2, 6)
   imm_2_5 = (2, 5)
   imm_2_4 = (2, 4)
   imm_2_3 = (2, 3)
   imm_2 = (2, 2)

   imm_1_13 = (1, 13) signed
   imm_1_13u = (1, 13)
   imm_1_11 = (1, 11) signed
   imm_1_7 = (1, 7)
   imm_1_7u = (1, 7)
   imm_1_6u = (1, 6)
   imm_1_2 = (1, 2)
   imm_1 = (1, 1)

   imm_0_13 = (0, 13)
   imm_0_13u = (0, 13)
  imm_0_12 = (0, 12)
   imm_0_10 = (0, 10)
   imm_0_9 = (0, 9)
   imm_0_7 = (0, 7) signed
   imm_0_7u = (0, 7)
   imm_0_6 = (0, 6)
   imm_0_6u = (0, 6)
   imm_0_5 = (0, 5)
   imm_0_5u = (0, 5)
   imm_0_4 = (0, 4)
   imm_0_4u = (0, 4)
   imm_0_2 = (0, 2)
   imm_0_1 = (0, 1)
   imm_0 = (0, 0)
   

   D4_16_19 = (16,19)
   D4_8_11 = (8,11)
   S4 = (16,19)
   S2 = (16,17)
   T2 = (8,9)
   D2 = (0,1)

   S2_pred = (16,17)
   T2_pred = (8,9)
   D2_pred = (0,1)
   D2_pred_new = (0,1)
   U2_pred_21_22 = (21,22)
   U2_pred_new_21_22 = (21,22)
   U2_pred = (8,9)
   U1_23_24_pred = (23,24)
   U2_5_6 = (5,6)
   U2_5_6_pred_new = (5,6)
   T2_11_12_pred = (11,12)
   T2_11_12_pred_new = (11,12)
   T2_9_10_pred = (9,10)
   T2_9_10_pred_new = (9,10)

   T5 = (8,12)
   T5_dup = (8,12)
   T5_pair = (9,12)
   T4_8_11 = (8,11)
   
   
   Rs = (27, 27)
   MajOp = (24,26)
   MinOp = (21,23)
   D7 = (0,7)
   D6_svctrl = (0,5)

   D5_pair = (1,4)
   D5 = (0,4)
   D5_dup = (0,4)
   D5_ctrl = (0,4)
   D5_ctrl_pair = (0,4)
   S3_new_16_18 = (16,18)

   S6_svctrl = (16,21)
   S6_svctrl_pair = (17,21)

   S5 = (16,20)
   S5_dup = (16,20)
   S5_pair = (17,20)
   S5_ctrl = (16,20)
   S5_ctrl_pair = (16,20)
   alu_X5 = (16,20)
   alu_X5_dup = (16,20)
   alu_X5_pair = (17,20)

   U2 = (8,9)
   U2_pred_new = (8,9)

   T3_0_2 = (0,2)
   T3_0_2_new = (0,2)
   T3_new_8_10 = (8,10)

   
   parse = (14, 15)
  	imm32 = (0, 31)
  	
  	
	immdup0_12=(12,12)
	immdup0_11_12=(11,12)
	immdup0_10_12=(10,12)
	immdup0_9=(9,9)
	immdup0_8=(8,8)
	immdup0_9_12=(9,12)
	immdup0_8_11=(8,11)
	immdup0_8_12=(8,12)
	immdup0_8_10=(8,10)
	immdup0_7_8=(7,8)
	immdup0_7=(7,7)
	immdup0_6_12=(6,12)
	immdup0_6=(6,6)
	immdup0_5_8=(5,8)
	immdup0_5_6=(5,6)
	immdup0_4_10=(4,10) signed
	immdup0_4_9=(4,9)
	immdup0_4_8=(4,8)
	immdup0_4_7=(4,7)
	immdup0_4_6=(4,6)
	immdup0_4_5=(4,5)
	immdup0_3_8=(3,8) signed
	immdup0_3_7=(3,7)
	immdup0_3_5=(3,5)
	immdup0_3_4=(3,4)
	immdup0_3=(3,3)

	immdup0_2_3=(2,3)
	immdup0_2=(2,2)
	immdup0_1_2=(1,2)
	immdup0_0_9=(0,9)
	immdup0_0_4=(0,4)
	immdup0_0_3=(0,3)
	immdup0_0_2=(0,2)
	immdup0_0_1=(0,1)

	immdup0_S4=(4,7)
	immdup0_D4=(0,3)
	immdup0_D4_pair=(0,3)
	immdup0_D3_pair=(0,2)
	
	immdup1_12=(28,28)
	immdup1_11_12=(27,28)
	immdup1_10_12=(26,28)
	immdup1_9_12=(25,28)
	immdup1_8_12=(24,28)
	immdup1_6_12=(22,28)
	immdup1_8_11=(24,27)
	immdup1_13=(29,29)
	immdup1_8_10=(24,26)
	immdup1_4_10=(20,26) signed
	immdup1_7_8=(23,24)
	immdup1_5_8=(21,24)
	immdup1_5_6=(21,22)
	immdup1_4_6=(20,22)
	immdup1_4_5=(20,21)
	immdup1_4_7=(20,23)
	immdup1_4_9=(20,25)
	immdup1_4_8=(20,24)
	immdup1_3_8=(19,24) signed
	immdup1_3_7=(19,23)
	immdup1_3_4=(19,20)
	immdup1_7=(23,23)
	immdup1_3_5=(19,21)
	immdup1_3=(19,19)
	immdup1_2=(18,18)
	immdup1_9=(25,25)
	immdup1_8=(24,24)
	immdup1_0_9=(16,25)
	immdup1_0_4=(16,20)
	immdup1_0_3=(16,19)
	immdup1_2_3=(18,19)
	immdup1_0_2=(16,18)
	immdup1_1_2=(17,18)
	immdup1_6=(22,22)
	immdup1_0_1=(16,17)

	immdup1_S4=(20,23)
	immdup1_D4=(16,19)
	immdup1_D4_pair=(16,19)
	immdup1_D3_pair=(16,18)
;

#define register offset=0x200 size=4 [ 
#];

define register offset=0x300 size=64 [ 
testctx
];

define context testctx
	immext0 = (0, 31) noflow signed
	immext1 = (32, 63) noflow signed
	hasext0 = (64,64) noflow
	hasext1 = (65,65) noflow
    immext0used = (66,66) noflow
    immext1used = (67,67) noflow
	# opaque pred for false
	disabled = (80, 80) noflow
	
	
	mode = (128, 159) noflow
;

# high dword: Left
# lo   dword: Right
define register offset=0x00 size=8 [ 
X1X0 
X3X2 
X5X4 
X7X6 
X9X8 
X11X10 
X13X12 
X15X14 
X17X16 
X19X18 
X21X20 
X23X22 
X25X24 
X27X26 
SPX28
LRFP
];

attach variables [ D5_pair T5_pair S5_pair alu_X5_pair immdup0_D4_pair immdup1_D4_pair] [
X1X0 
X3X2 
X5X4 
X7X6 
X9X8 
X11X10 
X13X12 
X15X14 
X17X16 
X19X18 
X21X20 
X23X22 
X25X24 
X27X26 
SPX28
LRFP
];

#TODO: might be wrong
attach variables [ immdup0_D3_pair immdup1_D3_pair] [
X1X0 
X3X2 
X5X4 
X7X6 
X17X16 # correct 
X11X10 
X13X12 
X15X14 
];


define register offset=0x00 size=4 [ 
X0 
X1 
X2 
X3 
X4 
X5 
X6 
X7 
X8 
X9 
X10 
X11 
X12 
X13 
X14 
X15 
X16 
X17 
X18 
X19 
X20 
X21 
X22 
X23 
X24 
X25 
X26 
X27 
X28 
SP
FP
LR
 ];

attach variables [ D5 D5_dup S5 S5_dup alu_X5 alu_X5_dup T5 T5_dup ] [
X0 
X1 
X2 
X3 
X4 
X5 
X6 
X7 
X8 
X9 
X10 
X11 
X12 
X13 
X14 
X15 
X16 
X17 
X18 
X19 
X20 
X21 
X22 
X23 
X24 
X25 
X26 
X27 
X28 
SP
FP
LR
];

attach variables [ S4 T4_8_11 D4_16_19 D4_8_11] [
X0 
X1 
X2 
X3 
X4 
X5 
X6 
X7 
X16 
X17 
X18 
X19 
X20 
X21 
X22 
X23 
];

# TODO: add _new semantics
# TODO: what is this list, this is wrong, x4 is right
attach variables [ S3_new_16_18 ] [
X0 
X1 
X2 
X5 
X6 
X7 
X8
X9
];
# TODO: what is this list, this is wrong, x5 is right
attach variables [ T3_new_8_10 T3_0_2_new ] [
X0 
X1 
X2 
X5 
X7 
X8 
X9
X10
];

attach variables [ immdup0_D4 immdup1_D4 immdup0_S4 immdup1_S4 ] [
X0
X1
X2
X3
X4
X5
X6
X7
X16
X17
X18
X19
X20
X21
X22
X23
];

 define register offset=0x80 size=4 [ 
SA0
LC0
SA1
LC1
P30
Reserve_5
M0
M1
USR
PC
UGP
GP
CS0
CS1
UPCYCLELO
UPCYCLEHI

Reserved_16
Reserved_17
Reserved_18
Reserved_19
Reserved_20
Reserved_21
Reserved_22
Reserved_23
Reserved_24
Reserved_25
Reserved_26
Reserved_27
Reserved_28
Reserved_29
Reserved_30
Reserved_31
 ];

 
 attach variables [ D5_ctrl S5_ctrl ] [
 SA0
LC0
SA1
LC1
P30
Reserve_5
M0
M1
USR
PC
UGP
GP
CS0
CS1
UPCYCLELO
UPCYCLEHI

Reserved_16
Reserved_17
Reserved_18
Reserved_19
Reserved_20
Reserved_21
Reserved_22
Reserved_23
Reserved_24
Reserved_25
Reserved_26
Reserved_27
Reserved_28
Reserved_29
Reserved_30
Reserved_31
];

define register offset=0x100 size=1 [ 
P0
P1
P2
P3
P0.new
P1.new
P2.new
P3.new
PTRUE
];

attach variables [ U2 D2_pred U2_pred_21_22  T2_pred S2_pred U2_pred U2_5_6 U1_23_24_pred T2_11_12_pred T2_9_10_pred ] [
P0
P1
P2
P3
];



attach variables [ D2_pred_new U2_pred_new U2_pred_new_21_22 T2_9_10_pred_new T2_11_12_pred_new U2_5_6_pred_new ] [
P0.new
P1.new
P2.new
P3.new
];

define register offset=0x400 size=4 [ 
	SGP0
	SGP1
	STID
	ELR
	BADVA0
	BADVA1
	SSR
	CCR
	HTID
	BADVA
	IMASK
	RESERVED_11
	RESERVED_12
	RESERVED_13
	RESERVED_14
	RESERVED_15
	EVB
	MODECTL
	SYSCFG
	NULL_19
	IPEND
	VID
	IAD
	NULL_23
	IEL
	NULL_25
	IAHL
	CFGBASE
	DIAG
	REV
	PCYCLELO
	PCYCLEHI
	ISDBST
	ISDBCFG0
	ISDBCFG1
	NULL_35
	BRKPTPC0
	BRKPTCFG0
	BRKPTPC1
	BRKPTCFG1
	ISDBMBXIN
	ISDBMBXOUT
	ISDBEN
	ISDBGPR
	RESERVED_44
	RESERVED_45
	RESERVED_46
	RESERVED_47
	PMUCNT0
	PMUCNT1
	PMUCNT2
	PMUCNT3
	PMUEVTCFG
	PMUCFG
	RESERVED_54
	RESERVED_55
	RESERVED_56
	RESERVED_57
	RESERVED_58
	RESERVED_59
	RESERVED_60
	RESERVED_61
	RESERVED_62
	RESERVED_63
];

# TODO: might be wrong way around
define register offset=0x400 size=8 [
    SGP0_SGP1
	ELR_STID
	BADVA0_BADVA1
	SSR_CCR
	HTID_BADVA
	IMASK_RESERVED_11
	RESERVED_12_RESERVED_13
	RESERVED_14_RESERVED_15
	EVB_MODECTL
	SYSCFG_NULL_19
	IPEND_VID
	IAD_NULL_23
	IEL_NULL_25
	IAHL_CFGBASE
	DIAG_REV
	PCYCLELO_PCYCLEHI
	ISDBST_ISDBCFG0
	ISDBCFG1_NULL_35
	BRKPTPC0_BRKPTCFG0
	BRKPTPC1_BRKPTCFG1
	ISDBMBXIN_ISDBMBXOUT
	ISDBEN_ISDBGPR
	RESERVED_44_RESERVED_45
	RESERVED_46_RESERVED_47
	PMUCNT0_PMUCNT1
	PMUCNT2_PMUCNT3
	PMUEVTCFG_PMUCFG
	RESERVED_54_RESERVED_55
	RESERVED_56_RESERVED_57
	RESERVED_58_RESERVED_59
	RESERVED_60_RESERVED_61
	RESERVED_62_RESERVED_63
];

attach variables [ S6_svctrl_pair ] [
    SGP0_SGP1
	ELR_STID
	BADVA0_BADVA1
	SSR_CCR
	HTID_BADVA
	IMASK_RESERVED_11
	RESERVED_12_RESERVED_13
	RESERVED_14_RESERVED_15
	EVB_MODECTL
	SYSCFG_NULL_19
	IPEND_VID
	IAD_NULL_23
	IEL_NULL_25
	IAHL_CFGBASE
	DIAG_REV
	PCYCLELO_PCYCLEHI
	ISDBST_ISDBCFG0
	ISDBCFG1_NULL_35
	BRKPTPC0_BRKPTCFG0
	BRKPTPC1_BRKPTCFG1
	ISDBMBXIN_ISDBMBXOUT
	ISDBEN_ISDBGPR
	RESERVED_44_RESERVED_45
	RESERVED_46_RESERVED_47
	PMUCNT0_PMUCNT1
	PMUCNT2_PMUCNT3
	PMUEVTCFG_PMUCFG
	RESERVED_54_RESERVED_55
	RESERVED_56_RESERVED_57
	RESERVED_58_RESERVED_59
	RESERVED_60_RESERVED_61
	RESERVED_62_RESERVED_63
];

attach variables [ S6_svctrl D6_svctrl ] [
	SGP0
	SGP1
	STID
	ELR
	BADVA0
	BADVA1
	SSR
	CCR
	HTID
	BADVA
	IMASK
	RESERVED_11
	RESERVED_12
	RESERVED_13
	RESERVED_14
	RESERVED_15
	EVB
	MODECTL
	SYSCFG
	NULL_19
	IPEND
	VID
	IAD
	NULL_23
	IEL
	NULL_25
	IAHL
	CFGBASE
	DIAG
	REV
	PCYCLELO
	PCYCLEHI
	ISDBST
	ISDBCFG0
	ISDBCFG1
	NULL_35
	BRKPTPC0
	BRKPTCFG0
	BRKPTPC1
	BRKPTCFG1
	ISDBMBXIN
	ISDBMBXOUT
	ISDBEN
	ISDBGPR
	RESERVED_44
	RESERVED_45
	RESERVED_46
	RESERVED_47
	PMUCNT0
	PMUCNT1
	PMUCNT2
	PMUCNT3
	PMUEVTCFG
	PMUCFG
	RESERVED_54
	RESERVED_55
	RESERVED_56
	RESERVED_57
	RESERVED_58
	RESERVED_59
	RESERVED_60
	RESERVED_61
	RESERVED_62
	RESERVED_63
];

 define pcodeop _stub;

define pcodeop testCallOther;
define pcodeop testCallOther1;




macro rotl32(out, a, b) {
    	local d:4 = b;
	local n:4 = a;
    	local out1:4 = (n << d) | ( n >> (32 - d));
	out = out1;
}
macro rotl64(out, a, b) {
    	local d:8 = b;
	local n:8 = a;
    	local out1:8 = (n << d) | ( n >> (64 - d));
	out = out1;
}

# Constant extender helpers
EXT_imm_5_12u:imm_5_12u is imm_5_12u & (hasext0=0 | immext0used=1) {
	export *[const]:4 imm_5_12u;
}
EXT_imm_5_12u:val is imm_5_12u & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [ val = immext0 | imm_5_10u; immext0used=1;] {
	export *[const]:4 val;
}
EXT_imm_5_12u:val is imm_5_12u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_5_10u [ val = immext1 | imm_5_10u; immext1used=1;] {
	export *[const]:4 val;
}

EXT_imm_5_12:imm_5_12 is imm_5_12 & (hasext0=0 | immext0used=1) {
	export *[const]:4 imm_5_12;
}
EXT_imm_5_12:val is imm_5_12u & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [ val = immext0 | imm_5_10u; immext0used=1;] {
	export *[const]:4 val;
}
EXT_imm_5_12:val is imm_5_12u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_5_10u [ val = immext1 | imm_5_10u; immext1used=1;] {
	export *[const]:4 val;
}

EXT_imm_5_11u:imm_5_11u is imm_5_11u & (hasext0=0 | immext0used=1) {
	export *[const]:4 imm_5_11u;
}
EXT_imm_5_11u:val is imm_5_11u & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [ val = immext0 | imm_5_10u; immext0used=1;] {
	export *[const]:4 val;
}
EXT_imm_5_11u:val is imm_5_11u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_5_10u [ val = immext1 | imm_5_10u; immext1used=1;] {
	export *[const]:4 val;
}

EXT_imm_5_10u:imm_5_10u is imm_5_10u & (hasext0=0 | immext0used=1) {
	export *[const]:4 imm_5_10u;
}
EXT_imm_5_10u:val is imm_5_10u & hasext0=1 & immext0used=0 & immext0  [ val = immext0 | imm_5_10u; immext0used=1;] {
	export *[const]:4 val;
}
EXT_imm_5_10u:val is imm_5_10u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 [ val = immext1 | imm_5_10u; immext1used=1;] {
	export *[const]:4 val;
}

EXT_imm_0_5u:imm_0_5u is imm_0_5u & (hasext0=0 | immext0used=1) {
	export *[const]:4 imm_0_5u;
}
EXT_imm_0_5u:val is imm_0_5u & hasext0=1 & immext0used=0 & immext0 [ val = immext0 | imm_0_5u; immext0used=1;] {
	export *[const]:4 val;
}

 
@include "alu32_alu.sinc"
@include "alu32_perm.sinc"
@include "alu32_pred.sinc"



@include "cr.sinc"
@include "jr.sinc"
@include "j.sinc"






#LD:Load dword
with slot: iclass=0b0011 & mode=0 {
    :D5_pair"=memd("S5"+"T5"<<"u2")" is imm_21_27=0b1010110  & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & D5_pair [u2 = imm_7u | (imm_13u<<1); ]{
        local EA:4 = S5 + (T5 << u2);
        D5_pair = *[ram]:8 EA;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :D5_pair "=memd(GP+" u16 ")" is imm_27=1 & imm_25_26u & imm_21_24=0b1110 & imm_16_20u & imm_5_13u & D5_pair & (hasext0=0 | immext0used=1) [u16 = (imm_5_13u | (imm_16_20u << 9) | (imm_25_26u << 14)) << 3; ]{
        local tmp2:4 = GP + u16;
        D5_pair = *[ram]:8 tmp2;
    }
    :D5_pair "=memd(" u16 ")" is imm_27=1 & imm_25_26u & imm_21_24=0b1110 & imm_16_20u & imm_5_13u & D5_pair & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [u16 = immext0 | imm_5_10u; immext0used=1; ]{
        local tmp2:4 = u16;
        D5_pair = *[ram]:8 tmp2;
    }
    :D5_pair "=memd(" u16 ")" is imm_27=1 & imm_25_26u & imm_21_24=0b1110 & imm_16_20u & imm_5_13u & D5_pair & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_5_10u [u16 = immext1 | imm_5_10u; immext1used=1; ]{
        local tmp2:4 = u16;
        D5_pair = *[ram]:8 tmp2;
    }
}
with slot: iclass=0b1001 & mode=0 {
    :D5_pair"=memd("S5","s11")" is imm_27=0 & imm_25_26 & S5 & D5_pair & imm_5_13u & (hasext0=0 | immext0used=1) [ s11 = ((imm_5_13u | (imm_25_26 << 9))<<3);] {
        local EA:4 = S5 + s11;
        D5_pair = *[ram]:8 EA;
    }
    :D5_pair"=memd("S5","s11")" is imm_27=0 & imm_25_26 & S5 & D5_pair & imm_5_13u & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [ s11 = immext0 | imm_5_10u; immext0used=1; ] {
        local EA:4 = S5 + s11;
        D5_pair = *[ram]:8 EA;
    }
    :"=dword3" is imm_21_27=0b1001110 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=0 & imm_5_8 & D5 {
    	_stub();
    }
    :"=dword4" is imm_21_27=0b1001110 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=1 & imm_8=0 & imm_7=0 & imm_5_6=0 & D5 {
    	_stub();
    }
    
    :"=dword5" is imm_21_27=0b1011110 & S5 & imm_12_13=0b01 & imm_8_11 & imm_7=0 & imm_5_6 & D5 {
    	_stub();
    }
    :D5_pair "=memd(" S5 "=" val ")" is imm_21_27=0b1011110 & S5 & imm_12_13=0b01 & imm_8_11u & imm_7=0 & imm_5_6u & D5_pair & (hasext0=0 | immext0used=1) [val = imm_5_6u | (imm_8_11u << 2);]{
        local EA:4 = S5;
        D5_pair = *[ram]:8 EA;
        S5 = S5 + val;
    }
    :D5_pair "=memd(" S5 "=" val ")" is imm_21_27=0b1011110 & S5 & imm_12_13=0b01 & imm_8_11u & imm_7=0 & imm_5_6u & D5_pair & hasext0=1 & immext0used=0 & immext0 [val = (imm_5_6u | (imm_8_11u << 2)) | immext0; immext0used=1;]{
        local EA:4 = S5;
        D5_pair = *[ram]:8 EA;
        S5 = S5 + val;
    }
    
    :D5_pair"=memd("S5"++#"v")" is imm_21_27=0b1011110 & S5 & imm_12_13=0b00 & imm_9_11 & imm_5_8 & D5_pair [v = imm_5_8 << 3;] {
        local EA:4 = S5;
        S5 = S5+v;
        D5_pair = *[ram]:8 EA;
    }
    
    :"=dword7" is imm_21_27=0b1011110 & S5 & imm_13 & imm_12=1 & imm_5_11 & D5 {
    	_stub();
    }
    
    :"=dword8" is imm_21_27=0b1101110 & S5 & imm_13 & imm_12=0 & imm_8_12=0 & imm_7=0 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"=dword9" is imm_21_27=0b1111110 & S5 & imm_13 & imm_12=0 & imm_8_12=0 & imm_7=0 & imm_5_6=0 & D5 {
    	_stub();
    }
}

#LD:Load ac dword
with slot: iclass=0b1001 & mode=0 {
    :"memd_aq" is imm_21_27=0b0010000 & S5 & imm_11_13=0b011 & imm_8_10=0 & imm_5_7=0b000 & D5 {
    	_stub();
    }
}

#LD:Load dword cond
with slot: iclass=0b0011 & mode=0 {
    :"if(" U2_5_6 ")" D5_pair "=memd(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0000110 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5_pair [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5_pair = *[ram]:8 EA;
	<end>
    }
    :"if(!" U2_5_6 ")" D5_pair "=memd(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0001110 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5_pair [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5_pair = *[ram]:8 EA;
	<end>
    }
    :"if(" U2_5_6_pred_new ")" D5_pair "=memd(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0010110 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5_pair [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5_pair = *[ram]:8 EA;
	<end>
    }
    :"if(!" U2_5_6_pred_new ")" D5_pair "=memd(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0011110 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5_pair [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5_pair = *[ram]:8 EA;
	<end>
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"if("T2_11_12_pred") "D5_pair"=memd("S5"+#"u6")" is imm_21_27=0b0001110 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10 & D5_pair [ u6 = imm_5_10 << 3;]{
        if(T2_11_12_pred == 0) goto <end>;
        local EA:4 = S5 + u6;
        D5_pair = *[ram]:8 EA;
        <end>
    }
    :"if("T2_11_12_pred_new") "D5_pair"=memd("S5"+#"u6")" is imm_21_27=0b0011110 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10 & D5_pair [ u6 = imm_5_10 << 3;]{
        if(T2_11_12_pred_new == 0) goto <end>;
        local EA:4 = S5 + u6;
        D5_pair = *[ram]:8 EA;
        <end>
    }
    :"if(!"T2_11_12_pred") "D5_pair"=memd("S5"+#"u6")" is imm_21_27=0b0101110 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10 & D5_pair [ u6 = imm_5_10 << 3;]{
        if(T2_11_12_pred != 0) goto <end>;
        local EA:4 = S5 + u6;
        D5_pair = *[ram]:8 EA;
        <end>
    }
    :"if(!"T2_11_12_pred_new") "D5_pair"=memd("S5"+#"u6")" is imm_21_27=0b0111110 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10 & D5_pair [ u6 = imm_5_10 << 3;]{
        if(T2_11_12_pred_new != 0) goto <end>;
        local EA:4 = S5 + u6;
        D5_pair = *[ram]:8 EA;
        <end>
    }
}

with slot: iclass=0b1001 & mode=0 {
    :"if("T2_9_10_pred") "D5_pair"=memd("S5"++#"s4")" is imm_21_27=0b1011110 & S5 & imm_11_13=0b100 &   T2_9_10_pred & imm_5_8 & D5_pair [s4 = imm_5_8 << 3;] {
        if(T2_9_10_pred == 0) goto <end>;
        local EA:4 = S5;
        S5 = S5 + s4;
        D5_pair = *[ram]:8 EA;
        <end>
    }
    :"if(!"T2_9_10_pred") "D5_pair"=memd("S5"++#"s4")" is imm_21_27=0b1011110 & S5 & imm_11_13=0b101 &   T2_9_10_pred & imm_5_8 & D5_pair [s4 = imm_5_8 << 3;] {
        if(T2_9_10_pred != 0) goto <end>;
        local EA:4 = S5;
        S5 = S5 + s4;
        D5_pair = *[ram]:8 EA;
        <end>
    }
    #TODO: check all dotnew, they will need change later
    :"if("T2_9_10_pred".new) "D5_pair"=memd("S5"++#"s4")" is imm_21_27=0b1011110 & S5 & imm_11_13=0b110 &   T2_9_10_pred & imm_5_8 & D5_pair [s4 = imm_5_8 << 3;] {
        if(T2_9_10_pred == 0) goto <end>;
        local EA:4 = S5;
        S5 = S5 + s4;
        D5_pair = *[ram]:8 EA;
        <end>
    }
    :"ldcondd11" is imm_21_27=0b1011110 & S5 & imm_11_13=0b111 & imm_9_10 & imm_5_8 & D5 {
    	_stub();
    }

    :"ldcondd12" is imm_21_27=0b1111110 & imm_16_20 & imm_11_13=0b100 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondd13" is imm_21_27=0b1111110 & imm_16_20 & imm_11_13=0b101 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondd14" is imm_21_27=0b1111110 & imm_16_20 & imm_11_13=0b110 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondd15" is imm_21_27=0b1111110 & imm_16_20 & imm_11_13=0b111 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
}

#LD:Load by
with slot: iclass=0b0011 & mode=0 {
    :D5 "=memb(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b1010000 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & D5 [ u2 = imm_7u | (imm_13u << 1);] {
        local EA:4 = S5 + (T5 << u2);
        D5 = *[ram]:1 EA;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :D5"=memb(GP+"v")" is imm_27=1 & imm_25_26 & imm_21_24=0b1000 & imm_16_20u & imm_5_13u & D5 & (hasext0=0 | immext0used=1) [v = (imm_5_13u | (imm_16_20u << 9) | (imm_25_26 << 14)) << 2; ]  {
        local EA:4 = GP + v;
        D5 = *[ram]:1 EA;
    }
    :D5"=memb("v")" is imm_27=1 & imm_25_26 & imm_21_24=0b1000 & imm_16_20u & imm_5_13u & D5 & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [v = (imm_5_10u | immext0); immext0used=1; ]  {
        local EA:4 = GP + v;
        D5 = *[ram]:1 EA;
    }
}
with slot: iclass=0b1001 & mode=0 {
    :D5"=memb("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1000 & S5 & imm_5_13u & D5 & (hasext0=0 | immext0used=1) [ s11 = ((imm_5_13u | (imm_25_26 << 9)));]{
        local EA:4 = S5 + s11;
        D5 = *[ram]:1 EA;
    }
    :D5"=memb("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1000 & S5 & imm_5_13u & D5 & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [ s11 = ((imm_5_13u | immext0 )); immext0used=1;]{
        local EA:4 = S5 + s11;
        D5 = *[ram]:1 EA;
    }
    :D5"=memb("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1000 & S5 & imm_5_13u & D5 & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_5_10u [ s11 = ((imm_5_13u | immext1 )); immext1used=1;]{
        local EA:4 = S5 + s11;
        D5 = *[ram]:1 EA;
    }
    :"rd=memb4" is imm_21_27=0b1001000 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=0 & imm_5_8 & D5 {
        _stub();
    }
    :"rd=memb5" is imm_21_27=0b1001000 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=1 & imm_8=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }

    :"rd=memb6" is imm_21_27=0b1011000 & S5 & imm_12_13=0b01 & imm_8_11 & imm_7=0 & imm_5_6 & D5 {
        _stub();
    }
    :D5"=memb(" S5 "++" imm_5_8 ")" is imm_21_27=0b1011000 & S5 & imm_12_13=0b00 & imm_9_11=0 & imm_5_8 & D5 {
        local EA:4 = S5;
        S5 = S5+imm_5_8;
        D5 = *[ram]:1 EA;
    }
    :D5"=memb(" T5 "<<" u2 "+" U6 ")" is imm_21_27=0b1101000 & T5 & imm_13u & imm_12=1 & imm_8_11u & imm_7u & imm_5_6u & D5 [ u2 = imm_7u | (imm_13u << 1); U6 = imm_5_6u | (imm_8_11u << 2);] {
        local EA:4 = (T5 << u2) + U6;
        D5 = *[ram]:1 EA;
    }
    :"rd=memb9" is imm_21_27=0b1101000 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }
    :"rd=memb10" is imm_21_27=0b1111000 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }
}

#LD:Load by cond
with slot: iclass=0b0011 & mode=0 {
    :"if(" U2_5_6 ")" D5 "=memb(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0000000 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:1 EA;
	<end>
    }
    :"if(!" U2_5_6 ")" D5 "=memb(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0001000 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:1 EA;
	<end>
    }
    :"if(" U2_5_6_pred_new ")" D5 "=memb(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0010000 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:1 EA;
	<end>
    }
    :"if(!" U2_5_6_pred_new ")" D5 "=memb(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0011000 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:1 EA;
	<end>
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"if("T2_11_12_pred") "D5"=memb("S5"+"EXT_imm_5_10u")" is imm_21_27=0b0001000 & S5 & imm_13=0 & T2_11_12_pred & EXT_imm_5_10u & D5 {
    	if(T2_11_12_pred == 0) goto <end>;
	local EA:4 = S5 + EXT_imm_5_10u;
	D5 = *[ram]:1 EA;
	<end>
    }
    :"if("T2_11_12_pred_new") "D5"=memb("S5"+"EXT_imm_5_10u")" is imm_21_27=0b0011000 & S5 & imm_13=0 & T2_11_12_pred_new & EXT_imm_5_10u & D5 {
    	if(T2_11_12_pred_new == 0) goto <end>;
	local EA:4 = S5 + EXT_imm_5_10u;
	D5 = *[ram]:1 EA;
	<end>
    }
    :"if(!"T2_11_12_pred") "D5"=memb("S5"+"EXT_imm_5_10u")" is imm_21_27=0b0101000 & S5 & imm_13=0 & T2_11_12_pred & EXT_imm_5_10u & D5 {
    	if(T2_11_12_pred != 0) goto <end>;
	local EA:4 = S5 + EXT_imm_5_10u;
	D5 = *[ram]:1 EA;
	<end>
    }
    :"if(!"T2_11_12_pred_new") "D5"=memb("S5"+"EXT_imm_5_10u")" is imm_21_27=0b0111000 & S5 & imm_13=0 & T2_11_12_pred_new & EXT_imm_5_10u & D5 {
    	if(T2_11_12_pred_new != 0) goto <end>;
	local EA:4 = S5 + EXT_imm_5_10u;
	D5 = *[ram]:1 EA;
	<end>
    }
}
with slot: iclass=0b1001 & mode=0 {
    :"if("T2_9_10_pred") "D5_pair"=memb("S5"++#"s4")" is imm_21_27=0b1011000 & S5 & imm_11_13=0b100 &   T2_9_10_pred & imm_5_8 & D5_pair [s4 = imm_5_8 << 3;] {
    _stub();
    }
    :"if(!"T2_9_10_pred") "D5_pair"=memb("S5"++#"s4")" is imm_21_27=0b1011000 & S5 & imm_11_13=0b101 &   T2_9_10_pred & imm_5_8 & D5_pair [s4 = imm_5_8 << 3;] {
    _stub();
    }
    #TODO: check all dotnew, they will need change later
    :"if("T2_9_10_pred".new) "D5_pair"=memb("S5"++#"s4")" is imm_21_27=0b1011000 & S5 & imm_11_13=0b110 &   T2_9_10_pred & imm_5_8 & D5_pair [s4 = imm_5_8 << 3;] {
    _stub();
    }
    :"ldcondb11" is imm_21_27=0b1011000 & S5 & imm_11_13=0b111 & imm_9_10 & imm_5_8 & D5 {
    	_stub();
    }

    :"ldcondb12" is imm_21_27=0b1111000 & imm_16_20 & imm_11_13=0b100 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondb13" is imm_21_27=0b1111000 & imm_16_20 & imm_11_13=0b101 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondb14" is imm_21_27=0b1111000 & imm_16_20 & imm_11_13=0b110 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondb15" is imm_21_27=0b1111000 & imm_16_20 & imm_11_13=0b111 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
}

#LD:Load by shift TODO
#LD:Load by h shift TODO

#ld:load hw
with slot: iclass=0b0011 & mode=0 {
    :D5"=memh("S5"+"T5"<<"u2")" is imm_21_27=0b1010010 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & D5 [u2 = imm_7u | (imm_13u<<1); ]{
        local EA:4 = S5 + (T5 << u2);
        D5 = *[ram]:2 EA;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :D5"=memh(GP + "v")" is imm_27=1 & imm_25_26 & imm_21_24=0b1010 & imm_16_20u & imm_5_13u & D5 & (hasext0=0 | immext0used=1) [v = (imm_5_13u | (imm_16_20u << 9) | (imm_25_26 << 14)) << 1; ]  {
        local EA:4 = GP + v;
        D5 = *[ram]:2 EA;
    }
}
with slot: iclass=0b1001 & mode=0 {
    :D5 "=memh(" S5 "+" s11 ")" is imm_27=0 & imm_25_26 & imm_21_24=0b1010 & S5 & imm_5_13u & D5 [ s11 = imm_5_13u | (imm_25_26 << 9);] {
        local EA:4 = S5 + 11;
        D5 = *[ram]:2 EA;
    }
    :"rd=memh4" is imm_21_27=0b1001010 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=0 & imm_5_8 & D5 {
        _stub();
    }
    :"rd=memh5" is imm_21_27=0b1001010 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=1 & imm_8=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }

    :"rd=memh6" is imm_21_27=0b1011010 & S5 & imm_12_13=0b01 & imm_8_11 & imm_7=0 & imm_5_6 & D5 {
        _stub();
    }
    :D5"=memh("S5"++"v")" is imm_21_27=0b1011010 & S5 & imm_12_13=0b00 & imm_9_11 & imm_5_8 & D5 [v = imm_5_8 << 1;] {
        local EA:4 = S5;
        S5 = S5+v;
        D5 = *[ram]:2 EA;
    }
    :D5"=memh(" S5 "<<" u2 "+" U6 ")" is imm_21_27=0b1101010 & S5 & imm_13u & imm_12=1 & imm_8_11u & imm_7u & imm_5_6u & D5 [ u2 = imm_7u | (imm_13u << 1); U6 = imm_5_6u | (imm_8_11u << 2);] {
        local EA:4 = (S5 << u2) + U6;
        D5 = *[ram]:2 EA;
    }
    :D5 "=memh(" S5 "<<" u2 "+" u6 ")" is imm_21_27=0b1101010 & S5 & imm_13u & imm_12=1 & imm_8_11 & imm_7u & imm_5_6 & D5 & hasext0=1 & immext0used=0 & immext0 [u2 = imm_7u | (imm_13u << 1); u6 = (imm_5_6  | (imm_8_11 << 2)) | immext0; immext0used=1;] {
        local EA:4 = (S5 << u2) + u6;
        D5 = *[ram]:1 EA;
    }
    :"rd=memh9" is imm_21_27=0b1101010 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }
    :"rd=memh10" is imm_21_27=0b1111010 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }
}

#ld:load hw cond
with slot: iclass=0b0011 & mode=0 {
    :"rd=memhc1" is imm_21_27=0b0000010 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5  {
        _stub();
    }
    :"rd=memhc1_1" is imm_21_27=0b0001010 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5  {
        _stub();
    }
    :"rd=memhc1_2" is imm_21_27=0b0010010 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5  {
        _stub();
    }
    :"if(!" U2_5_6_pred_new ")" D5 "=memh(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0011010 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:2 EA;
	<end>
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"if(" T2_11_12_pred ")" D5 "=memh(" S5 "+" u6 ")" is imm_21_27=0b0001010 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10u & D5 [ u6 = imm_5_10u << 1;] {
    	if(T2_11_12_pred == 0) goto <end>;
		local EA:4 = S5 + u6;
		D5 = *[ram]:2 EA;
	<end>
    }
    :"if(" T2_11_12_pred_new ")" D5 "=memh(" S5 "+" u6 ")" is imm_21_27=0b0011010 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10u & D5 [ u6 = imm_5_10u << 1;] {
    	if(T2_11_12_pred_new == 0) goto <end>;
		local EA:4 = S5 + u6;
		D5 = *[ram]:2 EA;
	<end>
    }
    :"if(!" T2_11_12_pred ")" D5 "=memh(" S5 "+" u6 ")" is imm_21_27=0b0101010 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10u & D5 [ u6 = imm_5_10u << 1;] {
    	if(T2_11_12_pred != 0) goto <end>;
		local EA:4 = S5 + u6;
		D5 = *[ram]:2 EA;
	<end>
    }
    :"if(!" T2_11_12_pred_new ")" D5 "=memh(" S5 "+" u6 ")" is imm_21_27=0b0111010 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10u & D5 [ u6 = imm_5_10u << 1;] {
    	if(T2_11_12_pred_new != 0) goto <end>;
		local EA:4 = S5 + u6;
		D5 = *[ram]:2 EA;
	<end>
    }
}
with slot: iclass=0b1001 & mode=0 {
    :"if("T2_9_10_pred") "D5_pair"=memh("S5"++#"s4")" is imm_21_27=0b1011010 & S5 & imm_11_13=0b100 &   T2_9_10_pred & imm_5_8 & D5_pair [s4 = imm_5_8 << 3;] {
        _stub();
    }
    :"if(!"T2_9_10_pred") "D5_pair"=memh("S5"++#"s4")" is imm_21_27=0b1011010 & S5 & imm_11_13=0b101 &   T2_9_10_pred & imm_5_8 & D5_pair [s4 = imm_5_8 << 3;] {
        _stub();
    }
    #TODO: check all dotnew, they will need change later
    :"if("T2_9_10_pred".new) "D5_pair"=memh("S5"++#"s4")" is imm_21_27=0b1011010 & S5 & imm_11_13=0b110 &   T2_9_10_pred & imm_5_8 & D5_pair [s4 = imm_5_8 << 3;] {
        _stub();
    }
    :"ldcondh11" is imm_21_27=0b1011010 & S5 & imm_11_13=0b111 & imm_9_10 & imm_5_8 & D5 {
    	_stub();
    }

    :"ldcondh12" is imm_21_27=0b1111010 & imm_16_20 & imm_11_13=0b100 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondh13" is imm_21_27=0b1111010 & imm_16_20 & imm_11_13=0b101 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondh14" is imm_21_27=0b1111010 & imm_16_20 & imm_11_13=0b110 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondh15" is imm_21_27=0b1111010 & imm_16_20 & imm_11_13=0b111 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
}

#LD:memory copy
with slot: iclass=0b1001 & mode=0 {
    :D5"=pmemcp" is imm_21_27=0b1001111 & S5 & imm_13=0 & T5 & imm_5_7=0b000 & D5 {
    	_stub();
    }
}

#LD:piecemeal memory copy
with slot: iclass=0b0110 & mode=0 {
    :"=movlen" is imm_21_27=0b1111111 & S5 & imm_13=0 & T5 & imm_5_7=0b010 & D5 {
    	_stub();
    }
}
with slot: iclass=0b1001 & mode=0 {
    :"=linecpy" is imm_21_27=0b1001111 & S5 & imm_13=0 & T5 & imm_5_7=0b001 & D5 {
    	_stub();
    }
    # pmemcpy see above
}

#ld:load ub
with slot: iclass=0b0011 & mode=0 {
    :D5"=memub("S5"+"T5"#"u2")" is imm_21_27=0b1010001 & S5 & imm_13 & T5 & imm_7 & imm_5_6=0 & D5 [ u2 = (imm_7) | (imm_13 << 1);]  {
        local tmp2:4 = S5 + (T5 << u2);
        local tmp3:1 = *[ram]:1 tmp2;
	D5=zext(tmp3);
    }
}
with slot: iclass=0b0100 & mode=0 {
    :D5"=memub(GP+"u16")" is imm_27=1 & imm_25_26u & imm_21_24=0b1001 & imm_16_20u & imm_5_13u & D5 & (hasext0=0 | immext0used=1) [u16 = imm_5_13u | (imm_16_20u << 9) | (imm_25_26u << 14); ] {
        local tmp:4 = u16;
        local tmp2:4 = GP + tmp;
        local tmp3:1 = *[ram]:1 tmp2;
	D5=zext(tmp3);
    }
    :D5"=memub("v")" is imm_27=1 & imm_25_26u & imm_21_24=0b1001 & imm_16_20u & imm_5_13u & D5 & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [v = imm_5_10u | immext0; immext0used=1; ] {
        local tmp2:4 = v;
        local tmp3:1 = *[ram]:1 tmp2;
	D5=zext(tmp3);
    }
    :D5"=memub("v")" is imm_27=1 & imm_25_26u & imm_21_24=0b1001 & imm_16_20u & imm_5_13u & D5 & hasext0=1 & hasext1=1  & immext0used=1 & immext1 & imm_5_10u [v = imm_5_10u | immext1; immext1used=1; ] {
        local tmp2:4 = v;
        local tmp3:1 = *[ram]:1 tmp2;
	D5=zext(tmp3);
    }
}
with slot: iclass=0b1001 & mode=0 {
    :D5"=memub("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1001 & S5 & imm_5_13u & D5 & (hasext0=0 | immext0used=1)[ s11 = imm_5_13u | (imm_25_26 << 9); ]  {
        local tmp:4 = s11;
        local tmp2:4 = S5 + tmp;
        local tmp3:1 = *[ram]:1 tmp2;
	D5=zext(tmp3);
    }
    :D5"=memub("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1001 & S5 & imm_5_13u & D5 & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [ s11 = imm_5_10u | immext0; immext0used=1; ]  {
        local tmp:4 = s11;
        local tmp2:4 = S5 + tmp;
        local tmp3:1 = *[ram]:1 tmp2;
	D5=zext(tmp3);
    }
    :D5"=memub("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1001 & S5 & imm_5_13u & D5 & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_5_10u [ s11 = imm_5_10u | immext1; immext1used=1; ]  {
        local tmp:4 = s11;
        local tmp2:4 = S5 + tmp;
        local tmp3:1 = *[ram]:1 tmp2;
	D5=zext(tmp3);
    }
    :"rd=memub4" is imm_21_27=0b1001001 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=0 & imm_5_8 & D5 {
        _stub();
    }
    :"rd=memub5" is imm_21_27=0b1001001 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=1 & imm_8=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }

    :D5 "=memub(" S5 "=" val ")" is imm_21_27=0b1011001 & S5 & imm_12_13=0b01 & imm_8_11u & imm_7=0 & imm_5_6u & D5 & (hasext0=0 | immext0used=1) [val = imm_5_6u | (imm_8_11u << 2);]{
        local EA:4 = S5;
        D5 = *[ram]:4 EA;
        S5 = S5 + val;
    }
    :D5 "=memub(" S5 "=" val ")" is imm_21_27=0b1011001 & S5 & imm_12_13=0b01 & imm_8_11u & imm_7=0 & imm_5_6u & D5 & hasext0=1 & immext0used=0 & immext0 [val = (imm_5_6u | (imm_8_11u << 2)) | immext0; immext0used=1;]{
        local EA:4 = S5;
        D5 = *[ram]:4 EA;
        S5 = S5 + val;
    }
    :D5 "=memub(" S5 "++" imm_5_8 ")" is imm_21_27=0b1011001 & S5 & imm_12_13=0b00 & imm_9_11=0 & imm_5_8 & D5 {
        local EA:4 = S5;
        S5 = S5+imm_5_8;
        D5 = *[ram]:1 EA;
    }
    :D5 "=memub(" S5 "<<" u2 "+" u6 ")" is imm_21_27=0b1101001 & S5 & imm_13u & imm_12=1 & imm_8_11 & imm_7u & imm_5_6 & D5 & (hasext0=0 | immext0used=1) [u2 = imm_7u | (imm_13u << 1); u6 = imm_5_6  | (imm_8_11 << 2);] {
        local EA:4 = (S5 << u2) + u6;
        D5 = *[ram]:1 EA;
    }
    :D5 "=memub(" S5 "<<" u2 "+" u6 ")" is imm_21_27=0b1101001 & S5 & imm_13u & imm_12=1 & imm_8_11 & imm_7u & imm_5_6 & D5 & hasext0=1 & immext0used=0 & immext0 [u2 = imm_7u | (imm_13u << 1); u6 = (imm_5_6  | (imm_8_11 << 2)) | immext0; immext0used=1;] {
        local EA:4 = (S5 << u2) + u6;
        D5 = *[ram]:1 EA;
    }

    :"rd=memub9" is imm_21_27=0b1101001 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }
    :"rd=memub10" is imm_21_27=0b1111001 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }
}


#ld:load ub cond
with slot: iclass=0b0011 & mode=0 {
    :"if(" U2_5_6 ")" D5 "=memub(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0000001 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:1 EA;
	<end>
    }
    :"if(!" U2_5_6 ")" D5 "=memub(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0001001 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:1 EA;
	<end>
    }
    :"if(" U2_5_6_pred_new ")" D5 "=memub(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0010001 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:1 EA;
	<end>
    }
    :"if(!" U2_5_6_pred_new ")" D5 "=memub(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0011001 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:1 EA;
	<end>
    }
}
ld_uby_cond_u6_1: val is imm_5_10u & (hasext0=0 | immext0used=1) [val = imm_5_10u << 0;] {
	export *[const]:4 val;
}
ld_uby_cond_u6_1: val is imm_5_10u & hasext0=1 & immext0used=0 & immext0 [val = imm_5_10u | immext0; immext0used=1;] {
	export *[const]:4 val;
}
ld_uby_cond_u6_1: val is imm_5_10u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 [val = imm_5_10u | immext1; immext1used=1;] {
	export *[const]:4 val;
}
with slot: iclass=0b0100 & mode=0 {
    :"if (" T2_11_12_pred ") " D5 "=memub(" S5 "+" ld_uby_cond_u6_1 ")" is imm_21_27=0b0001001 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10u & D5 & ld_uby_cond_u6_1 {
    	if(T2_11_12_pred == 0) goto <end>;
		local EA:4 = S5 + ld_uby_cond_u6_1;
		D5 = *[ram]:1 EA;
	<end>
    }
    :"if (" T2_11_12_pred_new ") " D5 "=memub(" S5 "+" ld_uby_cond_u6_1 ")" is imm_21_27=0b0011001 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10u & D5 & ld_uby_cond_u6_1 {
    	if(T2_11_12_pred_new == 0) goto <end>;
		local EA:4 = S5 + ld_uby_cond_u6_1;
		D5 = *[ram]:1 EA;
	<end>
    }
    :"if (!" T2_11_12_pred ") " D5 "=memub(" S5 "+" ld_uby_cond_u6_1 ")" is imm_21_27=0b0101001 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10u & D5 & ld_uby_cond_u6_1 {
    	if(T2_11_12_pred != 0) goto <end>;
		local EA:4 = S5 + imm_5_10u;
		D5 = *[ram]:1 EA;
	<end>
    }
    :"if (!" T2_11_12_pred_new ") " D5 "=memub(" S5 "+" ld_uby_cond_u6_1 ")" is imm_21_27=0b0111001 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10u & D5 & ld_uby_cond_u6_1 {
    	if(T2_11_12_pred_new != 0) goto <end>;
		local EA:4 = S5 + ld_uby_cond_u6_1;
		D5 = *[ram]:1 EA;
	<end>
    }
}
with slot: iclass=0b1001 & mode=0 {
    :"rd=membuc9" is imm_21_27=0b1011001 & S5 & imm_11_13=0b100 & imm_9_10 & imm_5_8 & D5  {
        _stub();
    }
    :"if(!" T2_9_10_pred ")" D5 "=memub("S5 "++" imm_5_8 ")" is imm_21_27=0b1011001 & S5 & imm_11_13=0b101 & T2_9_10_pred & imm_5_8 & D5  {
    	if(T2_9_10_pred != 0) goto <end>;
	D5 = *[ram]:1 S5;
	S5 = S5 + imm_5_8;
	<end>
    }
    :"rd=membuc11" is imm_21_27=0b1011001 & S5 & imm_11_13=0b110 & imm_9_10 & imm_5_8 & D5  {
        _stub();
    }
    :"if(!" T2_9_10_pred_new ")" D5 "=memub("S5 "++" imm_5_8 ")" is imm_21_27=0b1011001 & S5 & imm_11_13=0b111 & T2_9_10_pred_new & imm_5_8 & D5  {
    	if(T2_9_10_pred_new != 0) goto <end>;
	D5 = *[ram]:1 S5;
	S5 = S5 + imm_5_8;
	<end>
    }

    :"ldcondub13" is imm_21_27=0b1111001 & imm_16_20 & imm_11_13=0b100 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondub14" is imm_21_27=0b1111001 & imm_16_20 & imm_11_13=0b101 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondub15" is imm_21_27=0b1111001 & imm_16_20 & imm_11_13=0b110 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldcondub16" is imm_21_27=0b1111001 & imm_16_20 & imm_11_13=0b111 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
}

#ld:load uhw
with slot: iclass=0b0011 & mode=0 {
    :D5"=memuh(" S5 "+" T5 "<<" u2")" is imm_21_27=0b1010011 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & D5 [ u2 = (imm_7u) | (imm_13u << 1);]  {
        local EA:4 = S5 + (T5  << u2);
        D5 = *[ram]:2 EA;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :D5"=memuh(GP+"u16")" is imm_27=1 & imm_25_26u & imm_21_24=0b1011 & imm_16_20u & imm_5_13u & D5  [u16 = (imm_5_13u) | (imm_16_20u << 9) | (imm_25_26u << 14);]{
        local EA:4 = GP + u16;
        D5 = *[ram]:2 EA;
    }
    :D5"=memuh("v")" is imm_27=1 & imm_25_26 & imm_21_24=0b1011 & imm_16_20u & imm_5_13u & D5 & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [v = (immext0) | imm_5_10u; immext0used=1; ]  {
        local EA:4 = v;
        D5 = *[ram]:2 EA;
    }
}

with slot: iclass=0b1001 & mode=0 {
    :D5"=memuh("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1011 & S5 & imm_5_13u & D5 [s11 = (imm_5_13u) | (imm_25_26 << 9);] {
    local EA:4 = S5 + s11;
    D5 = *[ram]:2 EA;
    }
    :"D5=memuh(S5++imm_5_8:circ(imm_13))" is imm_21_27=0b1001011 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=0 & imm_5_8 & D5 {
        _stub();
    }
    :"D5=memuh(S5++I:circ(imm_13))" is imm_21_27=0b1001011 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=1 & imm_8=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }

    :"D5=memuh(S5=U6)" is imm_21_27=0b1011011 & S5 & imm_12_13=0b01 & imm_8_11u & imm_7=0 & imm_5_6u & D5  { #[U6 = (imm_5_6u) | (imm_8_11u << 2);] {
        _stub();
    }
    :D5 "=memuh(" S5 "++" s4 ")" is imm_21_27=0b1011011 & S5 & imm_12_13=0b00 & imm_9_11=0 & imm_5_8 & D5 [s4 = imm_5_8 << 1;] {
        local EA:4 = S5;
        S5 = S5+s4;
        D5 = *[ram]:2 EA;
    }
    :D5 "=memuh(" S5 "<<" u2 "+" u6 ")" is imm_21_27=0b1101011 & S5 & imm_13u & imm_12=1 & imm_8_11 & imm_7u & imm_5_6 & D5 & (hasext0=0 | immext0used=1) [u2 = imm_7u | (imm_13u << 1); u6 = imm_5_6  | (imm_8_11 << 2);] {
        local EA:4 = (S5 << u2) + u6;
        D5 = *[ram]:2 EA;
    }
    :D5 "=memuh(" S5 "<<" u2 "+" u6 ")" is imm_21_27=0b1101011 & S5 & imm_13u & imm_12=1 & imm_8_11 & imm_7u & imm_5_6 & D5 & hasext0=1 & immext0used=0 & immext0 [u2 = imm_7u | (imm_13u << 1); u6 = (imm_5_6  | (imm_8_11 << 2)) | immext0; immext0used=1;] {
        local EA:4 = (S5 << u2) + u6;
        D5 = *[ram]:2 EA;
    }
    :"rd=memuh9" is imm_21_27=0b1101011 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }
    :"rd=memuh10" is imm_21_27=0b1111011 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5 {
        _stub();
    }
}

# imm ext

#ld:load uhw cond
with slot: iclass=0b0011 & mode=0 {

    :"if(" U2_5_6 ")" D5 "=memuh(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0000011 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:2 EA;
	<end>
    }
    :"if(!" U2_5_6 ")" D5 "=memuh(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0001011 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:2 EA;
	<end>
    }
    :"if(" U2_5_6_pred_new ")" D5 "=memuh(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0010011 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:2 EA;
	<end>
    }
    :"if(!" U2_5_6_pred_new ")" D5 "=memuh(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0011011 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:2 EA;
	<end>
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"if(" T2_11_12_pred ")" D5 "=memuh(" S5 "+" u6 ")" is imm_21_27=0b0001011 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10u & D5 [u6 = imm_5_10u << 1;] {
    	if( T2_11_12_pred == 0) goto <end>;
	local EA:4 = S5 + u6;
	D5 = *[ram]:2 EA;
	<end>
    }
    :"if(" T2_11_12_pred_new ")" D5 "=memuh(" S5 "+" u6 ")" is imm_21_27=0b0011011 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10u & D5 [u6 = imm_5_10u << 1;] {
    	if( T2_11_12_pred_new == 0) goto <end>;
	local EA:4 = S5 + u6;
	D5 = *[ram]:2 EA;
	<end>
    }
    :"if(!" T2_11_12_pred ")" D5 "=memuh(" S5 "+" u6 ")" is imm_21_27=0b0101011 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10u & D5 [u6 = imm_5_10u << 1;] {
    	if( T2_11_12_pred != 0) goto <end>;
	local EA:4 = S5 + u6;
	D5 = *[ram]:2 EA;
	<end>
    }
    :"if(!" T2_11_12_pred_new ")" D5 "=memuh(" S5 "+" u6 ")"  is imm_21_27=0b0111011 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10u & D5 [u6 = imm_5_10u << 1;] {
    	if( T2_11_12_pred_new != 0) goto <end>;
	local EA:4 = S5 + u6;
	D5 = *[ram]:2 EA;
	<end>
    }
}
with slot: iclass=0b1001 & mode=0 {
    :"rd=memhuc9" is imm_21_27=0b1011011 & S5 & imm_11_13=0b100 & imm_11_12 & imm_5_8 & D5  {
        _stub();
    }
    :"rd=memhuc10" is imm_21_27=0b1011011 & S5 & imm_11_13=0b101 & imm_11_12 & imm_5_8 & D5  {
        _stub();
    }
    :"rd=memhuc11" is imm_21_27=0b1011011 & S5 & imm_11_13=0b110 & imm_11_12 & imm_5_8 & D5  {
        _stub();
    }
    :"rd=memhuc12" is imm_21_27=0b1011011 & S5 & imm_11_13=0b111 & imm_11_12 & imm_5_8 & D5  {
        _stub();
    }

    :"ldconduh13" is imm_21_27=0b1111011 & imm_16_20 & imm_11_13=0b100 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldconduh14" is imm_21_27=0b1111011 & imm_16_20 & imm_11_13=0b101 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"ldconduh15" is imm_21_27=0b1111011 & imm_16_20 & imm_11_13=0b110 & imm_9_10 & imm_8 & imm_7=1 & imm_5_6=0 & D5 {
    	_stub();
    }
    :"if(!"T2_9_10_pred_new") "D5"=memuh("u6")" is imm_21_27=0b1111011 & imm_16_20u & imm_11_13=0b111 & T2_9_10_pred_new & imm_8u & imm_7=1 & imm_5_6=0 & D5 [u6 = imm_8u | (imm_16_20u << 1);] {
        if(T2_9_10_pred_new != 0) goto <end>;
        local EA:4 = u6;
        local tmp:2 = *[ram]:2 EA;
        D5 = zext(tmp);
        <end>
    }
}

#LD:Load word
with slot: iclass=0b0011 & mode=0 {
    :D5"=memw("S5"+"T5"<<"u2")" is imm_21_27=0b1010100 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & D5 [ u2 = (imm_7u) | (imm_13u << 1);]  {
        local EA:4 = S5 + (T5 << u2);
        D5 = *[ram]:4 EA;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :D5"=memw(GP+"v")" is imm_27=1 & imm_25_26 & imm_21_24=0b1100 & imm_16_20u & imm_5_13u & D5 & (hasext0=0 | immext0used=1) [v = (imm_5_13u | (imm_16_20u << 9) | (imm_25_26 << 14)) << 2; ]  {
        local EA:4 = GP + v;
        D5 = *[ram]:4 EA;
    }
    :D5"=memw("v")" is imm_27=1 & imm_25_26 & imm_21_24=0b1100 & imm_16_20u & imm_5_13u & D5 & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [v = (immext0) | imm_5_10u; immext0used=1; ]  {
        local EA:4 = v;
        D5 = *[ram]:4 EA;
    }
    :D5"=memw("v")" is imm_27=1 & imm_25_26 & imm_21_24=0b1100 & imm_16_20u & imm_5_13u & D5 & hasext0=1 & immext0used=1 & hasext1=1 & immext1 & imm_5_10u [v = (immext1) | imm_5_10u; immext1used=1; ]  {
        local EA:4 = v;
        D5 = *[ram]:4 EA;
    }
}
with slot: iclass=0b1001 & mode=0 {
    :D5"=memw("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1100 & S5 & imm_5_13u & D5 & (hasext0=0 | immext0used=1) [s11 = (imm_5_13u | (imm_25_26 << 9))<<2;] {
        local EA:4 = S5 + s11;
        D5 = *[ram]:4 EA;
    }
    :D5"=memw("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1100 & S5 & imm_5_13u & D5 & hasext0=1 & immext0used=0 & immext0 & imm_5_10u [s11 = (immext0) | imm_5_10u; immext0used=1;] {
        local EA:4 = S5 + s11;
        D5 = *[ram]:4 EA;
    }
    :D5"=memw("S5"+"s11")" is imm_27=0 & imm_25_26 & imm_21_24=0b1100 & S5 & imm_5_13u & D5 & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_5_10u [s11 = (immext1) | imm_5_10u; immext1used=1;] {
        local EA:4 = S5 + s11;
        D5 = *[ram]:4 EA;
    }

    :"rd=memw3" is imm_21_27=0b1001100 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=0 & imm_5_8 & D5  {
        _stub();
    }
    :"rd=memw4" is imm_21_27=0b1001100 & S5 & imm_13 & imm_12=0 & imm_10_11=0 & imm_9=1 & imm_5_8 & D5  {
        _stub();
    }
    :D5 "=memw(" S5 "=" u6")" is imm_21_27=0b1011100 & S5 & imm_12_13=0b01 & imm_8_11u & imm_7=0 & imm_5_6u & D5 & (hasext0=0 | immext0used=1) [u6 = imm_5_6u | (imm_8_11u<<2);] {
    	local EA:4 = u6;
	D5 = *[ram]:4 EA;
	S5 = EA;
    }
    :D5 "=memw(" S5 "=" u6")" is imm_21_27=0b1011100 & S5 & imm_12_13=0b01 & imm_8_11u & imm_7=0 & imm_5_6u & D5 & hasext0=1 & immext0used=0 & immext0 [u6 = immext0 | (imm_5_6u | (imm_8_11u<<2)); immext0used=1;] {
    	local EA:4 = u6;
	D5 = *[ram]:4 EA;
	S5 = EA;
    }
    :D5 "=memw(" S5 "=" u6")" is imm_21_27=0b1011100 & S5 & imm_12_13=0b01 & imm_8_11u & imm_7=0 & imm_5_6u & D5 & hasext0=1 & hasext1=1 & immext0used=1 & immext1 [u6 = immext1 | (imm_5_6u | (imm_8_11u<<2)); immext1used=1;] {
    	local EA:4 = u6;
	D5 = *[ram]:4 EA;
	S5 = EA;
    }

    :D5 "=memw(" S5 "++" s4 ")" is imm_21_27=0b1011100 & S5 & imm_12_13=0b00 & imm_9_11=0 & imm_5_8 & D5  [s4 = imm_5_8 << 2;] {
        local EA:4 = S5;
        S5 = S5+s4;
        D5 = *[ram]:4 EA;
    }
    :D5 "=memw(" S5 "<<" u2 "+" u6 ")" is imm_21_27=0b1101100 & S5 & imm_13u & imm_12=1 & imm_8_11 & imm_7u & imm_5_6 & D5 & (hasext0=0 | immext0used=1) [u2 = imm_7u | (imm_13u << 1); u6 = imm_5_6  | (imm_8_11 << 2);] {
        local EA:4 = (S5 << u2) + u6;
        D5 = *[ram]:4 EA;
    }
    :D5 "=memw(" S5 "<<" u2 "+" u6 ")" is imm_21_27=0b1101100 & S5 & imm_13u & imm_12=1 & imm_8_11u & imm_7u & imm_5_6u & D5 & hasext0=1 & immext0used=0 [u2 = imm_7u | (imm_13u << 1); u6 = immext0 | (imm_5_6u  | (imm_8_11u << 2)); immext0used=1;] {
        local EA:4 = (S5 << u2) + u6;
        D5 = *[ram]:4 EA;
    }
    :D5 "=memw(" S5 "<<" u2 "+" u6 ")" is imm_21_27=0b1101100 & S5 & imm_13u & imm_12=1 & imm_8_11u & imm_7u & imm_5_6u & D5 & hasext0=1 & hasext1=1 & immext0used=1 [u2 = imm_7u | (imm_13u << 1); u6 = immext1 | (imm_5_6u  | (imm_8_11u << 2)); immext1used=1;] {
        local EA:4 = (S5 << u2) + u6;
        D5 = *[ram]:4 EA;
    }

    :"rd=memw8" is imm_21_27=0b1101100 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5  {
        _stub();
    }
    :"rd=memw9" is imm_21_27=0b1111100 & S5 & imm_13 & imm_12=0 & imm_8_11=0 & imm_7=0 & imm_5_6=0 & D5  {
        _stub();
    }
}

#LD:Load ac word
with slot: iclass=0b1001 & mode=0 {
    :"memw_aq" is imm_21_27=0b0010000 & S5 & imm_11_13=0b001 & imm_8_10=0 & imm_5_7=0b000 & D5 {
    	_stub();
    }
}


#LD:Load word cond
ld_w_cond_u6_1: val is imm_5_10u & (hasext0=0 | immext0used=1) [val = imm_5_10u << 2;] {
	export *[const]:4 val;
}
ld_w_cond_u6_1: val is imm_5_10u & hasext0=1 & immext0used=0 & immext0 [val = imm_5_10u | immext0; immext0used=1;] {
	export *[const]:4 val;
}
ld_w_cond_u6_2: val is imm_16_20u & imm_8u & (hasext0=0 | immext0used=1) [val = imm_8u | (imm_16_20u << 1);] {
	export *[const]:4 val;
}
ld_w_cond_u6_2: val is imm_16_20u & imm_8u & hasext0=1 & immext0used=0 & immext0 [val = imm_8u | (imm_16_20u << 1) | immext0; immext0used=1;] {
	export *[const]:4 val;
}
ld_w_cond_u6_2: val is imm_16_20u & imm_8u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 [val = imm_8u | (imm_16_20u << 1) | immext1; immext1used=1;] {
	export *[const]:4 val;
}
with slot: iclass=0b0011 & mode=0 {
    :"if(" U2_5_6 ")" D5 "=memw(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0000100 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:4 EA;
	<end>
    }
    :"if(!" U2_5_6 ")" D5 "=memw(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0001100 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6 != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:4 EA;
	<end>
    }
    :"if(" U2_5_6_pred_new ")" D5 "=memw(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0010100 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:4 EA;
	<end>
    }
    :"if(!" U2_5_6_pred_new ")" D5 "=memw(" S5 "+" T5 "<<" u2 ")" is imm_21_27=0b0011100 & S5 & imm_13u & T5 & imm_8_12 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if(U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		D5 = *[ram]:4 EA;
	<end>
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"if(" T2_11_12_pred ")" D5 "=memw(" S5 "+" ld_w_cond_u6_1 ")" is imm_21_27=0b0001100 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10u & D5 & ld_w_cond_u6_1 {
        local cond:1 = T2_11_12_pred != 0;
    	if(!cond) goto <end>;
	local EA:4 = S5 + ld_w_cond_u6_1;
	D5 = *[ram]:4 EA;
	<end>
    }
    :"if(" T2_11_12_pred_new ")" D5 "=memw(" S5 "+" ld_w_cond_u6_1 ")" is imm_21_27=0b0011100 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10u & D5 & ld_w_cond_u6_1 {
        local cond:1 = T2_11_12_pred_new != 0;
    	if(!cond) goto <end>;
	local EA:4 = S5 + ld_w_cond_u6_1;
	D5 = *[ram]:4 EA;
	<end>
    }
    :"if(!" T2_11_12_pred ")" D5 "=memw(" S5 "+" ld_w_cond_u6_1 ")" is imm_21_27=0b0101100 & S5 & imm_13=0 & T2_11_12_pred & imm_5_10u & D5 & ld_w_cond_u6_1 {
        local cond:1 = T2_11_12_pred != 0;
    	if(cond) goto <end>;
	local EA:4 = S5 + ld_w_cond_u6_1;
	D5 = *[ram]:4 EA;
	<end>
    }
    :"if(!" T2_11_12_pred_new ")" D5 "=memw(" S5 "+" ld_w_cond_u6_1 ")" is imm_21_27=0b0111100 & S5 & imm_13=0 & T2_11_12_pred_new & imm_5_10u & D5 & ld_w_cond_u6_1 {
        local cond:1 = T2_11_12_pred_new != 0;
    	if(cond) goto <end>;
	local EA:4 = S5 + ld_w_cond_u6_1;
	D5 = *[ram]:4 EA;
	<end>
    }
}
with slot: iclass=0b1001 & mode=0 {
    :"lwcond9()" is imm_21_27=0b1011100 & S5 & imm_11_13=0b100 & imm_9_10 & imm_5_8 & D5  {
        _stub();
    }
    :"lwcond10()" is imm_21_27=0b1011100 & S5 & imm_11_13=0b101 & imm_9_10 & imm_5_8 & D5  {
        _stub();
    }
    :"lwcond11()" is imm_21_27=0b1011100 & S5 & imm_11_13=0b110 & imm_9_10 & imm_5_8 & D5  {
        _stub();
    }
    :"lwcond11()" is imm_21_27=0b1011100 & S5 & imm_11_13=0b111 & imm_9_10 & imm_5_8 & D5  {
        _stub();
    }

    :"if(" T2_9_10_pred ")" D5 "=memw(" ld_w_cond_u6_2 ")" is imm_21_27=0b1111100 & imm_16_20u & imm_11_13=0b100 & T2_9_10_pred & imm_8u & imm_7=1 & imm_5_6=0 & D5 & ld_w_cond_u6_2 {
    	if(T2_9_10_pred == 0) goto <end>;
		local EA:4 = ld_w_cond_u6_2;
		D5 = *[ram]:4 EA;
	<end>
    }
    :"if(!" T2_9_10_pred ")" D5 "=memw(" ld_w_cond_u6_2 ")" is imm_21_27=0b1111100 & imm_16_20u & imm_11_13=0b101 & T2_9_10_pred & imm_8u & imm_7=1 & imm_5_6=0 & D5 & ld_w_cond_u6_2 {
    	if(T2_9_10_pred != 0) goto <end>;
		local EA:4 = ld_w_cond_u6_2;
		D5 = *[ram]:4 EA;
	<end>
    }
    :"if(" T2_9_10_pred_new ")" D5 "=memw(" ld_w_cond_u6_2 ")" is imm_21_27=0b1111100 & imm_16_20u & imm_11_13=0b110 & T2_9_10_pred_new & imm_8u & imm_7=1 & imm_5_6=0 & D5 & ld_w_cond_u6_2 {
    	if(T2_9_10_pred_new == 0) goto <end>;
		local EA:4 = ld_w_cond_u6_2;
		D5 = *[ram]:4 EA;
	<end>
    }
    :"if(!" T2_9_10_pred_new ")" D5 "=memw(" ld_w_cond_u6_2 ")" is imm_21_27=0b1111100 & imm_16_20u & imm_11_13=0b111 & T2_9_10_pred_new & imm_8u & imm_7=1 & imm_5_6=0 & D5 & ld_w_cond_u6_2 {
    	if(T2_9_10_pred_new != 0) goto <end>;
		local EA:4 = ld_w_cond_u6_2;
		D5 = *[ram]:4 EA;
	<end>
    }
}

#LD:Dealloc
with slot: iclass=0b1001 & mode=0 {
    :D5_pair"=deallocframe("S5"):raw" is imm_21_27=0b0000000 & S5 & imm_13=0 & imm_5_12=0 & D5_pair & imm_0=0 {
        local EA:4 = S5;
        local tmp:8 = *[ram]:8 EA;
        D5_pair = tmp;
        SP=EA+8;
    }
}

#LD:Dealloc return
with slot: iclass=0b1001 {
    :D5_pair"=dealloc_return("S5"):raw" is imm_21_27=0b0110000 & S5 & imm_10_13=0 & imm_5_9=0 & D5_pair & imm_0=0 & mode=0 {
        local EA:4 = S5;
        local tmp:8 = *[ram]:8 EA;
        D5_pair = tmp;

        local tmp2:8 = tmp>>32;
        local tmp3:4 = tmp2:4;

        SP = EA+8;
    }
    :D5_pair"=dealloc_return("S5"):raw" is imm_21_27=0b0110000 & S5 & imm_10_13=0 & imm_5_9=0 & D5_pair & imm_0=0 & mode=1100 {
        local EA:4 = S5;
        local tmp:8 = *[ram]:8 EA;
        
        local tmp2:8 = tmp>>32;
        local tmp3:4 = tmp2:4;
        
        return [tmp3];
    }
}

#TODO
#LD:Ld and unpack by to hw TODO

# MEMOP/byte
with slot: iclass=0b0011 & mode=0 {
    :"memb("S5"+"imm_7_12u")+="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b00 & D5 {
        local EA:4 = S5 + imm_7_12u;
        local tmp:1 = *[ram]:1 EA;
        tmp = tmp + D5:1;
        *[ram]:1 EA = tmp;
    }
    :"memb("S5"+"imm_7_12u")-="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b01 & D5 {
        local EA:4 = S5 + imm_7_12u;
        local tmp:1 = *[ram]:1 EA;
        tmp = tmp - D5:1;
        *[ram]:1 EA = tmp;
    }
    :"memb("S5"+"imm_7_12u")&="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b10 & D5 {
        local EA:4 = S5 + imm_7_12u;
        local tmp:1 = *[ram]:1 EA;
        tmp = tmp & D5:1;
        *[ram]:1 EA = tmp;
    }
    :"memb("S5"+"imm_7_12u")|="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b11 & D5 {
        local EA:4 = S5 + imm_7_12u;
        local tmp:1 = *[ram]:1 EA;
        tmp = tmp | D5:1;
        *[ram]:1 EA = tmp;
    }


    with : hasext0=0 | immext0used=1 {
	    :"memb("S5"+"imm_7_12u")+="imm_0_4u is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b00 & imm_0_4u {
		local EA:4 = S5 + imm_7_12u;
		local tmp:1 = *[ram]:1 EA;
		tmp = tmp + imm_0_4u;
		*[ram]:1 EA = tmp;
	    }
	    :"memb("S5"+"imm_7_12u")-="imm_0_4u is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b01 & imm_0_4u {
		local EA:4 = S5 + imm_7_12u;
		local tmp:1 = *[ram]:1 EA;
		tmp = tmp - imm_0_4u;
		*[ram]:1 EA = tmp;
	    }
	    :"memb("S5"+"imm_7_12u")=clrbit("imm_0_4u")" is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b10 & imm_0_4u {
		local EA:4 = S5 + imm_7_12u;
		local tmp:1 = *[ram]:1 EA;
		tmp = tmp & (~(1 << imm_0_4u));
		*[ram]:1 EA = tmp;
	    }
	    :"memb("S5"+"imm_7_12u")=setbit("imm_0_4u")" is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b11 & imm_0_4u {
		local EA:4 = S5 + imm_7_12u;
		local tmp:1 = *[ram]:1 EA;
		tmp = tmp & (1 << imm_0_4u);
		*[ram]:1 EA = tmp;
	    }
    }
    with : hasext0=1 & immext0used=0 {
	    :"memb("S5"+"val")+="imm_0_4u is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b00 & imm_0_4u & immext0 [ val = imm_7_12u | immext0; immext0used=1;] {
		local EA:4 = S5 + val;
		local tmp:1 = *[ram]:1 EA;
		tmp = tmp + imm_0_4u;
		*[ram]:1 EA = tmp;
	    }
	    :"memb("S5"+"val")-="imm_0_4u is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b01 & imm_0_4u & immext0 [ val = imm_7_12u | immext0; immext0used=1;]{
		local EA:4 = S5 + val;
		local tmp:1 = *[ram]:1 EA;
		tmp = tmp - imm_0_4u;
		*[ram]:1 EA = tmp;
	    }
	    :"memb("S5"+"val")=clrbit("imm_0_4u")" is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b10 & imm_0_4u & immext0 [ val = imm_7_12u | immext0; immext0used=1;]{
		local EA:4 = S5 + val;
		local tmp:1 = *[ram]:1 EA;
		tmp = tmp & (~(1 << imm_0_4u));
		*[ram]:1 EA = tmp;
	    }
	    :"memb("S5"+"val")=setbit("imm_0_4u")" is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b00 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b11 & imm_0_4u & immext0 [ val = imm_7_12u | immext0; immext0used=1;]{
		local EA:4 = S5 + val;
		local tmp:1 = *[ram]:1 EA;
		tmp = tmp & (1 << imm_0_4u);
		*[ram]:1 EA = tmp;
	    }
    }
}

# MEMOP/hw
with slot: iclass=0b0011 & mode=0 {
    :"memh("S5"+"u6")+="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b01 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b00 & D5  [ u6 = imm_7_12u << 1;] {
        local EA:4 = S5 + u6;
        local tmp:2 = *[ram]:2 EA;
        tmp = tmp + D5:2;
        *[ram]:2 EA = tmp;
    }
    :"memh("S5"+"u6")-="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b01 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b01 & D5 [ u6 = imm_7_12u << 1;] {
        local EA:4 = S5 + u6;
        local tmp:2 = *[ram]:2 EA;
        tmp = tmp - D5:2;
        *[ram]:2 EA = tmp;
    }
    :"memh("S5"+"u6")&="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b01 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b10 & D5 [ u6 = imm_7_12u << 1;] {
        local EA:4 = S5 + u6;
        local tmp:2 = *[ram]:2 EA;
        tmp = tmp & D5:2;
        *[ram]:2 EA = tmp;
    }
    :"memh("S5"+"u6")|="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b01 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b11 & D5 [ u6 = imm_7_12u << 1;] {
        local EA:4 = S5 + u6;
        local tmp:2 = *[ram]:2 EA;
        tmp = tmp | D5:2;
        *[ram]:2 EA = tmp;
    }

    :"memh("S5"+"u6")+="imm_0_4u is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b01 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b00 & imm_0_4u [ u6 = imm_7_12u << 1;]{
        local EA:4 = S5 + u6;
        local tmp:2 = *[ram]:2 EA;
        tmp = tmp + imm_0_4u;
        *[ram]:2 EA = tmp;
    }
    :"memh("S5"+"u6")-="imm_0_4u is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b01 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b01 & imm_0_4u [ u6 = imm_7_12u << 1;]{
        local EA:4 = S5 + u6;
        local tmp:2 = *[ram]:2 EA;
        tmp = tmp - imm_0_4u;
        *[ram]:2 EA = tmp;
    }
    :"memh("S5"+"u6")=clrbit("imm_0_4u")" is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b01 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b10 & imm_0_4u [ u6 = imm_7_12u << 1;]{
        local EA:4 = S5 + u6;
        local tmp:2 = *[ram]:2 EA;
        tmp = tmp & (~(1 << imm_0_4u));
        *[ram]:2 EA = tmp;
    }
    :"memh("S5"+"u6")=setbit("imm_0_4u")" is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b01 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b11 & imm_0_4u [ u6 = imm_7_12u << 1;]{
        local EA:4 = S5 + u6;
        local tmp:2 = *[ram]:2 EA;
        tmp = tmp & (1 << imm_0_4u);
        *[ram]:2 EA = tmp;
    }
}


# MEMOP/word
with slot: iclass=0b0011 & mode=0 {
    :"memw("S5"+"u6")+="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b10 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b00 & D5  [ u6 = imm_7_12u << 2;] {
        local EA:4 = S5 + u6;
        local tmp:4 = *[ram]:4 EA;
        tmp = tmp + D5:4;
        *[ram]:4 EA = tmp;
    }
    :"memw("S5"+"u6")-="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b10 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b01 & D5 [ u6 = imm_7_12u << 2;] {
        local EA:4 = S5 + u6;
        local tmp:4 = *[ram]:4 EA;
        tmp = tmp - D5:4;
        *[ram]:4 EA = tmp;
    }
    :"memw("S5"+"u6")&="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b10 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b10 & D5 [ u6 = imm_7_12u << 2;] {
        local EA:4 = S5 + u6;
        local tmp:4 = *[ram]:4 EA;
        tmp = tmp & D5:4;
        *[ram]:4 EA = tmp;
    }
    :"memw("S5"+"u6")|="D5 is imm_24_27=0b1110 & imm_23=0 & imm_21_22=0b10 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b11 & D5 [ u6 = imm_7_12u << 2;] {
        local EA:4 = S5 + u6;
        local tmp:4 = *[ram]:4 EA;
        tmp = tmp | D5:4;
        *[ram]:4 EA = tmp;
    }

    :"memw("S5"+"u6")+="imm_0_4u is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b10 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b00 & imm_0_4u [ u6 = imm_7_12u << 2;]{
        local EA:4 = S5 + u6;
        local tmp:4 = *[ram]:4 EA;
        tmp = tmp + imm_0_4u;
        *[ram]:4 EA = tmp;
    }
    :"memw("S5"+"u6")-="imm_0_4u is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b10 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b01 & imm_0_4u [ u6 = imm_7_12u << 2;]{
        local EA:4 = S5 + u6;
        local tmp:4 = *[ram]:4 EA;
        tmp = tmp - imm_0_4u;
        *[ram]:4 EA = tmp;
    }
    :"memw("S5"+"u6")=clrbit("imm_0_4u")" is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b10 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b10 & imm_0_4u [ u6 = imm_7_12u << 2;]{
        local EA:4 = S5 + u6;
        local tmp:4 = *[ram]:4 EA;
        tmp = tmp & (~(1 << imm_0_4u));
        *[ram]:4 EA = tmp;
    }
    :"memw("S5"+"u6")=setbit("imm_0_4u")" is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b10 & S5 & imm_13=0 & imm_7_12u & imm_5_6=0b11 & imm_0_4u [ u6 = imm_7_12u << 2;]{
        local EA:4 = S5 + u6;
        local tmp:4 = *[ram]:4 EA;
        tmp = tmp & (1 << imm_0_4u);
        *[ram]:4 EA = tmp;
    }

}

# NV/J
# TODO: this should be dotnew, for now this will work-ish

nv_j_r9: r9 is imm_1_7u & imm_20_21 & (hasext0=0 | immext0used=1) [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]  {
	export *[ram]:4 r9;
}
nv_j_r9: r9 is imm_1_7u & imm_20_21 & hasext0=1 & immext0used=0 & immext0 [ r9 = inst_start + (imm_1_7u | immext0); immext0used=1; ]  {
	export *[ram]:4 r9;
}
nv_j_r9: r9 is imm_1_7u & imm_20_21 & hasext0=1 & hasext1=1 & immext0used=1 & immext1 [ r9 = inst_start + (imm_1_7u | immext1); immext1used=1; ]  {
	export *[ram]:4 r9;
}

with slot: iclass=0b0010 & mode=0 {
    :"if(cmp.eq("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {}
    :"if(cmp.eq("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	
    }
    :"if(!cmp.eq("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	
    }
    :"if(!cmp.eq("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {

    }

    :"if(cmp.gt("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	
    }
    :"if(cmp.gt("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(!cmp.gt("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(!cmp.gt("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }

    :"if(cmp.gtu("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000100 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000100 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }

    :"if(!cmp.gtu("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000101 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
#np
    :"if(!cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000101 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }





    :"if(cmp.gt(" T5 "," S3_new_16_18 ") jmp:nt "nv_j_r9 is imm_22_27=0b000110 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(cmp.gt("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000110 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(cmp.gt(" T5 "," S3_new_16_18 ") jmp:nt "nv_j_r9 is imm_22_27=0b000111 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(cmp.gt("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000111 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b001000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b001000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(!cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b001001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(!cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b001001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
    }

#ns
    :"if(cmp.eq(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9{
    }
    :"if(cmp.eq(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9{
    }
    :"if(!cmp.eq(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9{
    }
        
    :"if(!cmp.eq(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9{
    }

    :"if(cmp.gt(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(cmp.gt(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(!cmp.gt(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(!cmp.gt(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
    }

    :"if(cmp.gtu(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010100 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(cmp.gtu(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010100 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(!cmp.gtu(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010101 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
    }
    :"if(!cmp.gtu(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010101 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
    }

    :"if(tstbit(" S3_new_16_18 ",0) jump:nt" r9  is imm_22_27=0b010110 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }
    :"if(tstbit(" S3_new_16_18 ",0) jump:t" r9  is imm_22_27=0b010110 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }
    :"if(!tstbit(" S3_new_16_18 ",0) jump:nt" r9  is imm_22_27=0b010111 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
}
    :"if(!tstbit(" S3_new_16_18 ",0) jump:t" r9  is imm_22_27=0b010111 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
}
    :"if(cmp.eq(" S3_new_16_18 ",-1) jump:nt" r9  is imm_22_27=0b011000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }
    :"if(cmp.eq(" S3_new_16_18 ",-1) jump:t" r9  is imm_22_27=0b011000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }
    :"if(!cmp.eq(" S3_new_16_18 ",-1) jump:nt" r9  is imm_22_27=0b011001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }
    :"if(!cmp.eq(" S3_new_16_18 ",-1) jump:t" r9  is imm_22_27=0b011001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }

    :"if(cmp.gt(" S3_new_16_18 ",-1) jump:nt" r9  is imm_22_27=0b011010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }
    :"if(cmp.gt(" S3_new_16_18 ",-1) jump:t" r9  is imm_22_27=0b011010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }
    :"if(!cmp.gt(" S3_new_16_18 ",-1) jump:nt" r9  is imm_22_27=0b011011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }
    :"if(!cmp.gt(" S3_new_16_18 ",-1) jump:t" r9  is imm_22_27=0b011011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 [ r9 = inst_start + ((imm_1_7u | (imm_20_21 << 7)) << 2); ]{
    }
}
with slot: iclass=0b0010 & mode=1100 {
    :"if(cmp.eq("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 != T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.eq("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 != T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.eq("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 == T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.eq("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 == T5) goto <end>;
	goto nv_j_r9;
	<end>
    }

    :"if(cmp.gt("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 s<= T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gt("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 s<= T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gt("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 s> T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gt("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 s> T5) goto <end>;
	goto nv_j_r9;
	<end>
    }

    :"if(cmp.gtu("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000100 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 s<= T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000100 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 <= T5) goto <end>;
	goto nv_j_r9;
	<end>
    }

    :"if(!cmp.gtu("S3_new_16_18","T5") jmp:nt "nv_j_r9 is imm_22_27=0b000101 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 > T5) goto <end>;
		goto nv_j_r9;

	<end>
    }
#np
    :"if(!cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000101 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 > T5) goto <end>;
	goto nv_j_r9;
	<end>
    }





    :"if(cmp.gt(" T5 "," S3_new_16_18 ") jmp:nt "nv_j_r9 is imm_22_27=0b000110 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(T5 s<= S3_new_16_18) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gt("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000110 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(T5 s<= S3_new_16_18) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gt(" T5 "," S3_new_16_18 ") jmp:nt "nv_j_r9 is imm_22_27=0b000111 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(T5 s> S3_new_16_18) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gt("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b000111 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(T5 s> S3_new_16_18) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b001000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 <= T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b001000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 <= T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b001001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 > T5) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gtu("S3_new_16_18","T5") jmp:t "nv_j_r9 is imm_22_27=0b001001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & T5 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 > T5) goto <end>;
	goto nv_j_r9;
	<end>
    }

#ns
    :"if(cmp.eq(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9{
    if(S3_new_16_18 != imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.eq(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9{
	if(S3_new_16_18 != imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.eq(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9{
	if(S3_new_16_18 == imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }
        
    :"if(!cmp.eq(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9{
	if(S3_new_16_18 == imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }

    :"if(cmp.gt(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 <= imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gt(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 <= imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gt(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 > imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gt(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 > imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }

    :"if(cmp.gtu(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010100 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 <= imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gtu(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010100 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 <= imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gtu(" S3_new_16_18 "," imm_8_12u ") jump:nt" nv_j_r9  is imm_22_27=0b010101 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 > imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gtu(" S3_new_16_18 "," imm_8_12u ") jump:t" nv_j_r9  is imm_22_27=0b010101 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12u & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 > imm_8_12u) goto <end>;
	goto nv_j_r9;
	<end>
    }

    :"if(tstbit(" S3_new_16_18 ",0) jump:nt" nv_j_r9  is imm_22_27=0b010110 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
    	local tmp:1 = (S3_new_16_18 & 1) != 0;
	if(!tmp) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(tstbit(" S3_new_16_18 ",0) jump:t" nv_j_r9  is imm_22_27=0b010110 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
    	local tmp:1 = (S3_new_16_18 & 1) != 0;
	if(!tmp) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!tstbit(" S3_new_16_18 ",0) jump:nt" nv_j_r9  is imm_22_27=0b010111 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
    	local tmp:1 = (S3_new_16_18 & 1) != 0;
	if(tmp) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!tstbit(" S3_new_16_18 ",0) jump:t" nv_j_r9  is imm_22_27=0b010111 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
    	local tmp:1 = (S3_new_16_18 & 1) != 0;
	if(tmp) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.eq(" S3_new_16_18 ",-1) jump:nt" nv_j_r9  is imm_22_27=0b011000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 != -1) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.eq(" S3_new_16_18 ",-1) jump:t" nv_j_r9  is imm_22_27=0b011000 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 != -1) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.eq(" S3_new_16_18 ",-1) jump:nt" nv_j_r9  is imm_22_27=0b011001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 == -1) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.eq(" S3_new_16_18 ",-1) jump:t" nv_j_r9  is imm_22_27=0b011001 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 == -1) goto <end>;
	goto nv_j_r9;
	<end>
    }

    :"if(cmp.gt(" S3_new_16_18 ",-1) jump:nt" nv_j_r9  is imm_22_27=0b011010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 s<= -1) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(cmp.gt(" S3_new_16_18 ",-1) jump:t" nv_j_r9  is imm_22_27=0b011010 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 s<= -1) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gt(" S3_new_16_18 ",-1) jump:nt" nv_j_r9  is imm_22_27=0b011011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=0 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 s> -1) goto <end>;
	goto nv_j_r9;
	<end>
    }
    :"if(!cmp.gt(" S3_new_16_18 ",-1) jump:t" nv_j_r9  is imm_22_27=0b011011 & imm_20_21 & imm_19=0 & S3_new_16_18 & imm_13=1 & imm_8_12=0 & imm_1_7u & imm_0=0 & nv_j_r9 {
	if(S3_new_16_18 s> -1) goto <end>;
	goto nv_j_r9;
	<end>
    }
}

# NV/ST:ST new-value byte
with slot: iclass=0b0011 & mode=0 {
    :"memb(" S5 "+" T5 "<<" u2 ")=" T3_0_2_new is imm_21_27=0b1011101 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & imm_3_4=0b00 & T3_0_2_new [ u2 = imm_7u | (imm_13u << 1);] {
        local EA:4 = S5 + (T5 << u2);
        *[ram]:1 EA = T3_0_2_new;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"memb(" val ")=" T3_new_8_10 is imm_27=1 & imm_25_26 & imm_21_24=0b0101 & imm_16_20u & imm_13u & imm_11_12=0b00 & T3_new_8_10 & imm_0_7u & (hasext0=0 | immext0used=1) [val = imm_0_7u | (imm_13u << 8) | (imm_25_26 << 9);] {
    	local EA:4 = val;
        *[ram]:1 EA = T3_new_8_10;
    }
    :"memb(" val ")=" T3_new_8_10 is imm_27=1 & imm_25_26u & imm_21_24=0b0101 & imm_16_20u & imm_13u & imm_11_12=0b00 & T3_new_8_10 & imm_0_7u & hasext0=1 & immext0used=0 & immext0 [ val = immext0 | imm_0_7u; immext0used=1;] {
    	local EA:4 = val;
        *[ram]:1 EA = T3_new_8_10;
    }
    :"memb(" val ")=" T3_new_8_10 is imm_27=1 & imm_25_26u & imm_21_24=0b0101 & imm_16_20u & imm_13u & imm_11_12=0b00 & T3_new_8_10 & imm_0_7u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 [ val = immext1 | imm_0_7u; immext1used=1;] {
    	local EA:4 = val;
        *[ram]:1 EA = T3_new_8_10;
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"memb(" S5 "+" s11 ")=" T3_new_8_10 is imm_27=0 & imm_25_26 & imm_21_24=0b1101 & S5 & imm_13u & imm_11_12=0b00 & T3_new_8_10 & imm_0_7u [s11 = imm_0_7u | (imm_13u<<8) | (imm_25_26 << 9);]{
    	local EA:4 = S5 + s11;
	*[ram]:1 EA = T3_new_8_10;
    }
    :"membnew4" is imm_21_27=0b1001101 & S5 & imm_13 & imm_11_12=0b00 & imm_8_10 & imm_7=0 & imm_2_6=0 & imm_1=1 & imm_0=0 {
    _stub();
    }
    :"membnew5" is imm_21_27=0b1001101 & S5 & imm_13 & imm_11_12=0b00 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 {
    _stub();
    }
    :"membnew6" is imm_21_27=0b1011101 & S5 & imm_11_13=0b000 & imm_8_10 & imm_7=1 & imm_6=0 & imm_0_5 {
    _stub();
    }
    :"memb(" S5 "++" imm_3_6 ")=" T3_new_8_10 is imm_21_27=0b1011101 & S5 & imm_11_13=0b000 & T3_new_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 {
    	local EA:4 = S5;
	S5 = S5 + imm_3_6;
	*[ram]:1 EA = T3_new_8_10;
    }
    :"memb(" S5 "<<" u2 "+" EXT_imm_0_5u ")=" T3_new_8_10 is imm_21_27=0b1101101 & S5 & imm_13u & imm_11_12=0b00 & T3_new_8_10 & imm_7=1 & imm_6u & EXT_imm_0_5u [ u2 = imm_6u | (imm_13u << 1); ] {
        local EA:4 = (S5 << u2) + EXT_imm_0_5u;
        *[ram]:1 EA = T3_new_8_10;
    }
    :"membnew9" is imm_21_27=0b1101101 & S5 & imm_13 & imm_11_12=0b00 & imm_8_10 & imm_7=0 & imm_0_6 {
    _stub();
    }
    :"membnew10" is imm_21_27=0b1111101 & S5 & imm_13 & imm_11_12=0b00 & imm_8_10 & imm_7=0 & imm_0_6 {
    _stub();
    }
}

# NV/ST:ST new-value byte cond
with slot: iclass=0b0011 & mode=0 {
    :"stnvcond00()" is imm_21_27=0b0100101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b00 & T3_0_2  {
        _stub();
    }
    :"if(!" U2_5_6 ") memb(" S5 "," T5 "<<" u2 ")=" T3_0_2 is imm_21_27=0b0101101 & S5 & imm_13u & T5 & imm_7u & U2_5_6 & imm_3_4=0b00 & T3_0_2 [ u2 = imm_7u | (imm_13u << 1); ] {
    	if(U2_5_6 != 0) goto <end>;
		local EA:4 = (T5 << u2) + S5;
		*[ram]:1 EA = T3_0_2;
	<end>
    }
    :"stnvcond02()" is imm_21_27=0b0110101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b00 & T3_0_2  {
        _stub();
    }
    :"stnvcond03()" is imm_21_27=0b0111101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b00 & T3_0_2  {
        _stub();
    }
}
with slot: iclass=0b0100 & mode=0 {
	NVBC_1:u6 is imm_3_7u & imm_13u & (hasext0=0 | immext0used=1) [ u6 = (imm_3_7u | (imm_13u <<5) ) << 0;]{
		export *[const]:4 u6;
	}
	NVBC_1:val is hasext0=1 & immext0used=0 & immext0 & imm_3_7u & imm_13u [ val = immext0 | (imm_3_7u | (imm_13u <<5)); immext0used=1;] {
		export *[const]:4 val;
	}
	NVBC_1:val is hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_3_7u & imm_13u [ val = immext1 | (imm_3_7u | (imm_13u <<5)); immext1used=1;] {
		export *[const]:4 val;
	}
	
    :"if(" D2_pred ") memb(" S5 "+" NVBC_1 ")=" T3_new_8_10 is imm_21_27=0b0000101 & S5 & imm_13u & imm_11_12=0b00 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred & NVBC_1 {
    	if(D2_pred == 0) goto <end>;
		local EA:4 = S5 + NVBC_1;
		*[ram]:1 EA = T3_new_8_10;
	<end>
    }
    :"if(" D2_pred_new ") memb(" S5 "+" NVBC_1 ")=" T3_new_8_10 is imm_21_27=0b0010101 & S5 & imm_13u & imm_11_12=0b00 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred_new & NVBC_1 {
    	if(D2_pred_new == 0) goto <end>;
		local EA:4 = S5 + NVBC_1;
		*[ram]:1 EA = T3_new_8_10;
	<end>
    }
    :"if(!" D2_pred ") memb(" S5 "+" NVBC_1 ")=" T3_new_8_10 is imm_21_27=0b0100101 & S5 & imm_13u & imm_11_12=0b00 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred & NVBC_1 {
    	if(D2_pred != 0) goto <end>;
		local EA:4 = S5 + NVBC_1;
		*[ram]:1 EA = T3_new_8_10;
	<end>
    }
    :"if(!" D2_pred_new ") memb(" S5 "+" NVBC_1 ")=" T3_new_8_10 is imm_21_27=0b0110101 & S5 & imm_13u & imm_11_12=0b00 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred_new & NVBC_1 {
    	if(D2_pred_new != 0) goto <end>;
		local EA:4 = S5 + NVBC_1;
		*[ram]:1 EA = T3_new_8_10;
	<end>
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"if(pv)memb" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b00 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"if(pv.new)memb" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b00 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"if(!pv)memb" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b00 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"if(!pv.new)memb" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b00 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }

    :"if(pv)memb" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b000 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"if(!pv)memb" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b000 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"if(pv.new)memb" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b100 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"if(!pv.new)memb" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b100 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
}

# NV/ST:ST new-value half word
with slot: iclass=0b0011 & mode=0 {
# TODO: shift
    :"memh(" S5 "+" T5 "<<" u2 ")=" T3_0_2_new is imm_21_27=0b1011101 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & imm_3_4=0b01 & T3_0_2_new[ u2 = imm_7u | (imm_13u << 1);] {
        local EA:4 = S5 + (T5 << u2);
        *[ram]:2 EA = T3_0_2_new;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"memhnew2" is imm_27=1 & imm_25_26 & imm_21_24=0b0101 & imm_16_20 & imm_13 & imm_11_12=0b01 & imm_8_10 & imm_0_7 {
    _stub();
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"memh(" S5 "+" s11 ")=" T3_new_8_10 is imm_27=0 & imm_25_26 & imm_21_24=0b1101 & S5 & imm_13u & imm_11_12=0b01 & T3_new_8_10 & imm_0_7u [ s11 = imm_0_7u | (imm_13u << 8) | (imm_25_26 << 9); ] {
        local EA:4 = S5 + s11;
        *[ram]:2 EA = T3_new_8_10;
    }
    :"memhnew4" is imm_21_27=0b1001101 & S5 & imm_13 & imm_11_12=0b01 & imm_8_10 & imm_7=0 & imm_2_6=0 & imm_1=1 & imm_0=0 {
    _stub();
    }
    :"memhnew5" is imm_21_27=0b1001101 & S5 & imm_13 & imm_11_12=0b01 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 {
    _stub();
    }
    :"memhnew6" is imm_21_27=0b1011101 & S5 & imm_11_13=0b001 & imm_8_10 & imm_7=1 & imm_6=0 & imm_0_5 {
    _stub();
    }
    :"memh(" S5 "++" s4 ")=" T3_new_8_10 is imm_21_27=0b1011101 & S5 & imm_11_13=0b001 & T3_new_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 [ s4 = imm_3_6 << 1;] {
        local EA:4 = S5;
        S5 = S5 + s4;
        *[ram]:2 EA = T3_new_8_10;
    }
    :"memhnew8" is imm_21_27=0b1101101 & S5 & imm_13 & imm_11_12=0b01 & imm_8_10 & imm_7=1 & imm_6 & imm_0_5 {
    _stub();
    }
    :"memhnew9" is imm_21_27=0b1101101 & S5 & imm_13 & imm_11_12=0b01 & imm_8_10 & imm_7=0 & imm_0_6 {
    _stub();
    }
    :"memhnew10" is imm_21_27=0b1111101 & S5 & imm_13 & imm_11_12=0b01 & imm_8_10 & imm_7=0 & imm_0_6 {
    _stub();
    }
}
# NV/ST:ST new-value half word cond
with slot: iclass=0b0011 & mode=0 {
    :"stnvcondh00()" is imm_21_27=0b0100101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b01 & T3_0_2  {
        _stub();
    }
    :"stnvcondh01()" is imm_21_27=0b0101101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b01 & T3_0_2  {
        _stub();
    }
    :"stnvcondh02()" is imm_21_27=0b0110101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b01 & T3_0_2  {
        _stub();
    }
    :"stnvcondh03()" is imm_21_27=0b0111101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b01 & T3_0_2  {
        _stub();
    }
}
with slot: iclass=0b0100 & mode=0 {
	NVHC_1:u6 is imm_3_7u & imm_13u & (hasext0=0 | immext0used=1) [ u6 = (imm_3_7u | (imm_13u <<5) ) << 1;]{
		export *[const]:4 u6;
	}
	NVHC_1:val is hasext0=1 & immext0used=0 & immext0 & imm_3_7u & imm_13u [ val = immext0 | (imm_3_7u | (imm_13u <<5)); immext0used=1;] {
		export *[const]:4 val;
	}
	NVHC_1:val is hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_3_7u & imm_13u [ val = immext1 | (imm_3_7u | (imm_13u <<5)); immext1used=1;] {
		export *[const]:4 val;
	}
    :"if(" D2_pred ") memh(" S5 "+" NVHC_1 ")=" T3_new_8_10 is imm_21_27=0b0000101 & S5 & imm_13u & imm_11_12=0b01 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred & NVHC_1 {
    	if(D2_pred == 0) goto <end>;
		local EA:4 = S5 + NVHC_1;
		*[ram]:2 EA = T3_new_8_10;
	<end>
    }
    :"if(" D2_pred_new ") memh(" S5 "+" NVHC_1 ")=" T3_new_8_10 is imm_21_27=0b0010101 & S5 & imm_13u & imm_11_12=0b01 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred_new & NVHC_1 {
    	if(D2_pred_new == 0) goto <end>;
		local EA:4 = S5 + NVHC_1;
		*[ram]:2 EA = T3_new_8_10;
	<end>
    }
    :"if(!" D2_pred ") memh(" S5 "+" NVHC_1 ")=" T3_new_8_10 is imm_21_27=0b0100101 & S5 & imm_13u & imm_11_12=0b01 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred & NVHC_1 {
    	if(D2_pred != 0) goto <end>;
		local EA:4 = S5 + NVHC_1;
		*[ram]:2 EA = T3_new_8_10;
	<end>
    }
    :"if(!" D2_pred_new ") memh(" S5 "+" NVHC_1 ")=" T3_new_8_10 is imm_21_27=0b0110101 & S5 & imm_13u & imm_11_12=0b01 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred_new & NVHC_1 {
    	if(D2_pred_new != 0) goto <end>;
		local EA:4 = S5 + NVHC_1;
		*[ram]:2 EA = T3_new_8_10;
	<end>
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"stnvcondh08()" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b01 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stnvcondh09()" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b01 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"stnvcondh10()" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b01 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stnvcondh11()" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b01 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }

    :"stnvcondh12()" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b001 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stnvcondh13()" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b001 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"stnvcondh14()" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b101 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stnvcondh15()" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b101 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
}

# NV/ST:ST new-value word
with slot: iclass=0b0011 & mode=0 {
    :"memw(" S5 "+" T5 "<<" u2 ")=" T3_0_2_new is imm_21_27=0b1011101 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & imm_3_4=0b10 & T3_0_2_new[ u2 = imm_7u | (imm_13u << 1);] {
        local EA:4 = S5 + (T5 << u2);
        *[ram]:4 EA = T3_0_2_new;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"memw(GP+"u16")="T3_new_8_10 is imm_27=1 & imm_25_26u & imm_21_24=0b0101 & imm_16_20u & imm_13u & imm_11_12=0b10 & T3_new_8_10 & imm_0_7u & (hasext0=0 | immext0used=1) [u16 = imm_0_7u | imm_13u << 8 | imm_16_20u<<9 | imm_25_26u <<14;] {
    	local EA:4 = GP + u16;
	*[ram]:4 EA = T3_new_8_10;
    }
    :"memw("v")="T3_new_8_10 is imm_27=1 & imm_25_26u & imm_21_24=0b0101 & imm_16_20u & imm_13u & imm_11_12=0b10 & T3_new_8_10 & imm_0_7u & hasext0=1 & immext0used=0 & immext0 & imm_0_5u [v = imm_0_5u | immext0; immext0used=1;] {
    	local EA:4 = v;
	*[ram]:4 EA = T3_new_8_10;
    }
    :"memw("v")="T3_new_8_10 is imm_27=1 & imm_25_26u & imm_21_24=0b0101 & imm_16_20u & imm_13u & imm_11_12=0b10 & T3_new_8_10 & imm_0_7u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_0_5u [v = imm_0_5u | immext1; immext1used=1;] {
    	local EA:4 = v;
	*[ram]:4 EA = T3_new_8_10;
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"memw(" S5 "+" s11 ")=" T3_new_8_10 is imm_27=0 & imm_25_26 & imm_21_24=0b1101 & S5 & imm_13u & imm_11_12=0b10 & T3_new_8_10 & imm_0_7u [s11 = (imm_0_7u | (imm_13u << 8) | (imm_25_26 << 9)) << 2; ]{
    	local EA:4 = S5 + s11;
	*[ram]:4 EA = T3_new_8_10;	
    }
    :"memwnew4" is imm_21_27=0b1001101 & S5 & imm_13 & imm_11_12=0b10 & imm_8_10 & imm_7=0 & imm_2_6=0 & imm_1=1 & imm_0=0 {
    _stub();
    }
    :"memwnew5" is imm_21_27=0b1001101 & S5 & imm_13 & imm_11_12=0b10 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 {
    _stub();
    }
    :"memwnew6" is imm_21_27=0b1011101 & S5 & imm_11_13=0b010 & imm_8_10 & imm_7=1 & imm_6=0 & imm_0_5 {
    _stub();
    }
    :"memw(" S5 "++" s4 ")=" T3_new_8_10 is imm_21_27=0b1011101 & S5 & imm_11_13=0b010 & T3_new_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 [ s4 = imm_3_6 << 1;] {
        local EA:4 = S5;
        S5 = S5 + s4;
        *[ram]:4 EA = T3_new_8_10;
    }
    :"memw(" S5 "<<" u2 "+" EXT_imm_0_5u ")=" T3_new_8_10 is imm_21_27=0b1101101 & S5 & imm_13u & imm_11_12=0b10 & T3_new_8_10 & imm_7=1 & imm_6u & EXT_imm_0_5u [ u2 = imm_6u | (imm_13u << 1); ] {
        local EA:4 = (S5 << u2) + EXT_imm_0_5u;
        *[ram]:4 EA = T3_new_8_10;
    }
    :"memwnew9" is imm_21_27=0b1101101 & S5 & imm_13 & imm_11_12=0b10 & imm_8_10 & imm_7=0 & imm_0_6 {
    _stub();
    }
    :"memwnew10" is imm_21_27=0b1111101 & S5 & imm_13 & imm_11_12=0b10 & imm_8_10 & imm_7=0 & imm_0_6 {
    _stub();
    }
}

# NV/ST:ST new-value word cond
with slot: iclass=0b0011 & mode=0 {
    :"stnvcondw00()" is imm_21_27=0b0100101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b10 & T3_0_2  {
        _stub();
    }
    :"stnvcondw01()" is imm_21_27=0b0101101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b10 & T3_0_2  {
        _stub();
    }
    :"stnvcondw02()" is imm_21_27=0b0110101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b10 & T3_0_2  {
        _stub();
    }
    :"stnvcondw03()" is imm_21_27=0b0111101 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & imm_3_4=0b10 & T3_0_2  {
        _stub();
    }
}
st_nvw_cond_u6_1: val is imm_3_7u & imm_13u & (hasext0=0 | immext0used=1) [val = (imm_3_7u | (imm_13u << 5)) << 2;] {
	export *[const]:4 val;
}
st_nvw_cond_u6_1: val is imm_3_7u & imm_13u & hasext0=1 & immext0used=0 & immext0 [val = imm_3_7u | (imm_13u << 5) | immext0; immext0used=1;] {
	export *[const]:4 val;
}
with slot: iclass=0b0100 & mode=0 {
    :"if(" D2_pred ") memw(" S5 "+" st_nvw_cond_u6_1 ")=" T3_new_8_10 is imm_21_27=0b0000101 & S5 & imm_13u & imm_11_12=0b10 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred & st_nvw_cond_u6_1 {
    	if(D2_pred == 0) goto <end>;
		local EA:4 = S5 + st_nvw_cond_u6_1;
		*[ram]:4 EA = T3_new_8_10;
	<end>
    }
    :"if(" D2_pred_new ") memw(" S5 "+" st_nvw_cond_u6_1 ")=" T3_new_8_10 is imm_21_27=0b0010101 & S5 & imm_13u & imm_11_12=0b10 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred_new & st_nvw_cond_u6_1 {
    	if(D2_pred_new == 0) goto <end>;
		local EA:4 = S5 + st_nvw_cond_u6_1;
		*[ram]:4 EA = T3_new_8_10;
	<end>
    }
    :"if(!" D2_pred ") memw(" S5 "+" st_nvw_cond_u6_1 ")=" T3_new_8_10 is imm_21_27=0b0100101 & S5 & imm_13u & imm_11_12=0b10 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred & st_nvw_cond_u6_1 {
    	if(D2_pred != 0) goto <end>;
		local EA:4 = S5 + st_nvw_cond_u6_1;
		*[ram]:4 EA = T3_new_8_10;
	<end>
    }
    :"if(!" D2_pred_new ") memw(" S5 "+" st_nvw_cond_u6_1 ")=" T3_new_8_10 is imm_21_27=0b0110101 & S5 & imm_13u & imm_11_12=0b10 & T3_new_8_10 & imm_3_7u & imm_2=0 & D2_pred_new & st_nvw_cond_u6_1 {
    	if(D2_pred_new != 0) goto <end>;
		local EA:4 = S5 + st_nvw_cond_u6_1;
		*[ram]:4 EA = T3_new_8_10;
	<end>
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"stnvcondw08()" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b10 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stnvcondw09()" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b10 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"stnvcondw10()" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b10 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stnvcondw11()" is imm_21_27=0b1011101 & S5 & imm_13=1 & imm_11_12=0b10 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }

    :"stnvcondw12()" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b010 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stnvcondw13()" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b010 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"stnvcondw14()" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b110 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stnvcondw15()" is imm_21_27=0b1111101 & imm_18_20=0 & imm_16_17 & imm_11_13=0b110 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
}



#with slot: iclass=0b0011 {
#    :"memw()=setbit" is imm_24_27=0b1111 & imm_23=0 & imm_21_22=0b01 & S5 & imm_13=0 & imm_7_12 & imm_5_6=0b11 & T5 {
#    _stub();
#    }
#}


# ST:Store dword
with slot: iclass=0b0011 & mode=0 {
    :"memd(" S5 "+" T5 "<<" u2 ")=" D5_pair is imm_21_27=0b1011110 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & D5_pair [u2 = (imm_7u | (imm_13u << 1)) << 3; ]  {
    	local EA:4 = (S5 + T5) << u2;
    	*[ram]:8 EA = D5_pair;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"memd(GP + "s11")="T5_pair is imm_27=1 & imm_25_26 & imm_21_24=0b0110 & imm_16_20u & imm_13u & T5_pair & imm_0_7u & (hasext0=0 | immext0used=1) [s11 = (imm_0_7u | (imm_13u << 8) | (imm_16_20u << 9) | (imm_25_26 << 14)) << 2;] {
        local EA:4 = GP + s11;
        *[ram]:8 EA = T5_pair;
    }
    :"memw("v")="T5_pair is imm_27=1 & imm_25_26 & imm_21_24=0b0110 & imm_16_20u & imm_13u & T5_pair & imm_0_7u & hasext0=1 & immext0used=0 & immext0 & imm_0_5u [v = (imm_0_5u) | immext0; immext0used=1; ] {
        local EA:4 = v;
        *[ram]:8 EA = T5_pair;
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"memd("S5"+#"s11")="T5_pair is imm_27=0 & imm_25_26 & imm_21_24=0b1110 & S5 & imm_13u & T5_pair & imm_0_7u [ s11 = ((imm_0_7u) | (imm_13u << 8) | (imm_25_26 << 9)) << 3;] {
        local EA:4 = S5 + s11;
        *[ram]:8 EA = T5_pair;
    }

     :"memd3" is imm_21_27=0b1001110 & S5 & imm_13 & T5 & imm_7=0 & imm_2_6=0 & imm_1=1 & imm_0=0 {
	    _stub();
     }
     :"memd4" is imm_21_27=0b1001110 & S5 & imm_13 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 {
	    _stub();
     }
     :"memd(" S5 "=" imm_0_5u ")=" T5_pair is imm_21_27=0b1011110 & S5 & imm_13=0 & T5_pair & imm_7=1 & imm_6=0 & imm_0_5u {
        local EA:4 = S5;
        *[ram]:8 EA = T5_pair;
        S5 = S5 + imm_0_5u;
     }
     :"memd("S5"++"s4")="T5_pair is imm_21_27=0b1011110 & S5 & imm_13=0 & T5_pair & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 [ s4 = imm_3_6 << 3;] {
        local EA:4 = S5;
        S5 = S5 + s4;
        *[ram]:8 EA = T5_pair;
     }
     :"memd(" S5 "<<" u2 "+" EXT_imm_0_5u ")=" T5_pair is imm_21_27=0b1101110 & S5 & imm_13u & T5_pair & imm_7=1 & imm_6u & EXT_imm_0_5u [u2 = imm_6u | (imm_13u << 1); ] {
        local EA:4 = (S5 << u2) + EXT_imm_0_5u;
	*[ram]:8 EA = T5_pair;
     }
     :"memd8" is imm_21_27=0b1101110 & S5 & imm_13 & T5 & imm_7=0 & imm_0_6=0 {
	    _stub();
     }
     :"memd9" is imm_21_27=0b1111110 & S5 & imm_13 & T5 & imm_7=0 & imm_0_6=0 {
	    _stub();
     }
}

# ST:Store rel dw
with slot: iclass=0b0101 & mode=0 {
    :"memdrl0" is imm_21_27=0b0000111 & S5 & imm_13=0 & T5 & imm_6_7=0 & imm_2_5=0b0010 & imm_0_1  {
    _stub();
    }
    :"memdrl1" is imm_21_27=0b0000111 & S5 & imm_13=0 & T5 & imm_6_7=0 & imm_2_5=0b1010 & imm_0_1  {
    _stub();
    }
}

# ST:Store dw cond
with slot: iclass=0b0011 & mode=0 {
    :"stcondd00" is imm_21_27=0b0100110 & S5 & imm_13 & imm_8_12 & imm_7 & imm_5_6 & D5  {
    _stub();
    }
    :"stcondd01" is imm_21_27=0b0101110 & S5 & imm_13 & imm_8_12 & imm_7 & imm_5_6 & D5  {
    _stub();
    }
    :"stcondd02" is imm_21_27=0b0110110 & S5 & imm_13 & imm_8_12 & imm_7 & imm_5_6 & D5  {
    _stub();
    }
    :"stcondd03" is imm_21_27=0b0111110 & S5 & imm_13 & imm_8_12 & imm_7 & imm_5_6 & D5  {
    _stub();
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"if("D2_pred") memd("S5"+#"u6")="T5_pair is imm_21_27=0b0000110 & S5 & imm_13 & T5_pair & imm_3_7 & imm_2=0 & D2_pred [u6 =(imm_3_7 | (imm_13 << 5)) << 3;] {
        if(D2_pred == 0) goto <end>;
        local EA:4 = S5 + u6;
        *[ram]:8 EA = T5_pair;
        <end>
    }
    :"if("D2_pred_new") memd("S5"+#"u6")="T5_pair is imm_21_27=0b0010110 & S5 & imm_13 & T5_pair & imm_3_7 & imm_2=0 & D2_pred_new [u6 =(imm_3_7 | (imm_13 << 5)) << 3;] {
        if(D2_pred_new == 0) goto <end>;
        local EA:4 = S5 + u6;
        *[ram]:8 EA = T5_pair;
        <end>
    }
    :"if(!"D2_pred") memd("S5"+#"u6")="T5_pair is imm_21_27=0b0100110 & S5 & imm_13 & T5_pair & imm_3_7 & imm_2=0 & D2_pred [u6 =(imm_3_7 | (imm_13 << 5)) << 3;] {
        if(D2_pred != 0) goto <end>;
        local EA:4 = S5 + u6;
        *[ram]:8 EA = T5_pair;
        <end>
    }
    :"if(!"D2_pred_new") memd("S5"+#"u6")="T5_pair is imm_21_27=0b0110110 & S5 & imm_13 & T5_pair & imm_3_7 & imm_2=0 & D2_pred_new [u6 =(imm_3_7 | (imm_13 << 5)) << 3;] {
        if(D2_pred_new != 0) goto <end>;
        local EA:4 = S5 + u6;
        *[ram]:8 EA = T5_pair;
        <end>
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"stcondd08()" is imm_21_27=0b1011110 & S5 & imm_13=1 & imm_11_12=0b10 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stcondd09()" is imm_21_27=0b1011110 & S5 & imm_13=1 & imm_11_12=0b10 & imm_8_10 & imm_7=0 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"stcondd10()" is imm_21_27=0b1011110 & S5 & imm_13=1 & imm_11_12=0b10 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stcondd11()" is imm_21_27=0b1011110 & S5 & imm_13=1 & imm_11_12=0b10 & imm_8_10 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }

    :"if(" D2_pred ") memd(" u6 ")=" T5_pair is imm_21_27=0b1111110 & imm_18_20=0 & imm_16_17u & imm_11_13=0b010 & T5_pair & imm_7=1 & imm_3_6u & imm_2=0 & D2_pred [u6 = imm_3_6u | (imm_16_17u << 4);] {
    	if(D2_pred == 0) goto <end>;
	local EA:4 = u6;
        *[ram]:8 EA = T5_pair;
	<end>
    }
    :"if(" D2_pred_new ") memd(" u6 ")=" T5_pair is imm_21_27=0b1111110 & imm_18_20=0 & imm_16_17u & imm_11_13=0b010 & T5_pair & imm_7=1 & imm_3_6u & imm_2=1 & D2_pred_new [u6 = imm_3_6u | (imm_16_17u << 4);] {
    	if(D2_pred_new == 0) goto <end>;
	local EA:4 = u6;
        *[ram]:8 EA = T5_pair;
	<end>
    }
    :"if(!" D2_pred ") memd(" u6 ")=" T5_pair is imm_21_27=0b1111110 & imm_18_20=0 & imm_16_17u & imm_11_13=0b110 & T5_pair & imm_7=1 & imm_3_6u & imm_2=0 & D2_pred [u6 = imm_3_6u | (imm_16_17u << 4);] {
    	if(D2_pred != 0) goto <end>;
	local EA:4 = u6;
        *[ram]:8 EA = T5_pair;
	<end>
    }
    :"if(!" D2_pred_new ") memd(" u6 ")=" T5_pair is imm_21_27=0b1111110 & imm_18_20=0 & imm_16_17u & imm_11_13=0b110 & T5_pair & imm_7=1 & imm_3_6u & imm_2=1 & D2_pred_new [u6 = imm_3_6u | (imm_16_17u << 4);] {
    	if(D2_pred_new != 0) goto <end>;
	local EA:4 = u6;
        *[ram]:8 EA = T5_pair;
	<end>
    }
}


# ST:Store by
with slot: iclass=0b0011 & mode=0 {
    :"memb(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b1011000 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & D5 [u2 = imm_7u | (imm_13u << 1); ]  {
    	local EA:4 = (S5 + T5) << u2;
    	*[ram]:1 EA = D5;
    }
    :"memb("S5"+#"imm_7_12")=#"S8 is imm_25_27=0b110 & imm_23_24=0 & imm_21_22=0b00 & S5 & imm_13 & imm_7_12 & imm_0_6 [ S8 = (imm_0_6) | (imm_13 << 7);]{
        local EA:4 = S5 + imm_7_12;
        *[ram]:1 EA = S8;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"memb(GP+"u16")="T5 is imm_27=1 & imm_25_26u & imm_21_24=0b0000 & imm_16_20u & imm_13u & T5 & imm_0_7u & (hasext0=0 | immext0used=1) [u16 = imm_0_7u | imm_13u << 8 | imm_16_20u<<9 | imm_25_26u <<14;] {
    	local EA:4 = GP + u16;
	*[ram]:1 EA = T5;
    }
    :"memb("v")="T5 is imm_27=1 & imm_25_26u & imm_21_24=0b0000 & imm_16_20u & imm_13u & T5 & imm_0_7u & hasext0=1 & immext0 & immext0used=0 & imm_0_5u [v = imm_0_5u | immext0; immext0used=1; ] {
    	local EA:4 = GP + v;
	*[ram]:1 EA = T5;
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"memb("S5"+"s11")="T5 is imm_27=0 & imm_25_26 & imm_21_24=0b1000 & S5 & imm_13u & T5 & imm_0_7u & (hasext0=0 | immext0used=1) [ s11 = (imm_0_7u) | (imm_13u << 9) | (imm_25_26 << 10);]{
        local EA:4 = S5 + s11;
        *[ram]:1 EA = T5;
    }
    :"memb("S5"+"s11")="T5 is imm_27=0 & imm_25_26 & imm_21_24=0b1000 & S5 & imm_13 & T5 & imm_0_7 & hasext0=1 & immext0used=0 & immext0 & imm_0_5u [ s11 = (imm_0_5u) | immext0; immext0used=1;]{
        local EA:4 = S5 + s11;
        *[ram]:1 EA = T5;
    }
    :"stb5" is imm_21_27=0b1001000 & S5 & imm_13 & imm_8_12 & imm_7=0 & imm_2_6=0 & imm_1=1 & imm_0=0  {
    _stub();
    }
    :"stb6" is imm_21_27=0b1001000 & S5 & imm_13 & imm_8_12 & imm_7=0 & imm_2_6=0 & imm_1=0 & imm_0=0  {
    _stub();
    }
    :"stb7" is imm_21_27=0b1011000 & S5 & imm_13=0 & imm_8_12 & imm_7=1 & imm_2_6=0 & imm_0_5  {
    _stub();
    }
    :"memw(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011000 & S5 & imm_13=0 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0  [s4 = imm_3_6 << 2;] {
        local EA:4 = S5;
        S5 = S5+s4;
        *[ram]:1 EA = T5;
    }
    :"memb(" S5 "<<" u2 "+" U6 ")=" T5 is imm_21_27=0b1101000 & S5 & imm_13u & T5 & imm_12=1 & imm_8_11u & imm_7u & imm_5_6u & D5 & (hasext0=0 | immext0used=1) [ u2 = imm_7u | (imm_13u << 1); U6 = imm_5_6u | (imm_8_11u << 2);] {
        local EA:4 = (S5 << u2) + U6;
        *[ram]:1 EA = T5;
    }
    :"memb(" S5 "<<" u2 "+" U6 ")=" T5 is imm_21_27=0b1101000 & S5 & imm_13u & T5 & imm_12=1 & imm_8_11u & imm_7u & imm_5_6u & D5 & hasext0=1 & immext0used=0 & immext0 [ u2 = imm_7u | (imm_13u << 1); U6 = (imm_5_6u | (imm_8_11u << 2)) | immext0; immext0used=1;] {
        local EA:4 = (S5 << u2) + U6;
        *[ram]:1 EA = T5;
    }
    :"stb10" is imm_21_27=0b1101000 & S5 & imm_13 & imm_8_12 & imm_7=0 & imm_0_6=0 {
    _stub();
    }
    :"stb11" is imm_21_27=0b1111000 & S5 & imm_13 & imm_8_12 & imm_7=0 & imm_0_6=0 {
    _stub();
    }
}

# ST:Store by cond
with slot: iclass=0b0011 & mode=0 {
    :"if(" U2_5_6 ") memb(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b0100000 & S5 & imm_13u & T5 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if (U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		*[ram]:1 EA = D5;
	<end>
    }
    :"if(!" U2_5_6 ") memb(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b0101000 & S5 & imm_13u & T5 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if (U2_5_6 != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		*[ram]:1 EA = D5;
	<end>
    }
    :"if(" U2_5_6_pred_new ") memb(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b0110000 & S5 & imm_13u & T5 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if (U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		*[ram]:1 EA = D5;
	<end>
    }
    :"if(!" U2_5_6_pred_new ") memb(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b0111000 & S5 & imm_13u & T5 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if (U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		*[ram]:1 EA = D5;
	<end>
    }
}
st_by_cond_u6_1: val is imm_7_12u & (hasext0=0 | immext0used=1) [val = imm_7_12u << 0;] {
	export *[const]:4 val;
}
st_by_cond_u6_1: val is imm_7_12u & hasext0=1 & immext0used=0 & immext0 [val = imm_7_12u | immext0; immext0used=1;] {
	export *[const]:4 val;
}
with slot: iclass=0b0011 & mode=0 {
    :"if(" U2_5_6 ") memb(" S5 "+" st_by_cond_u6_1 ")=" s6 is imm_21_27=0b1000000 & S5 & imm_13 & imm_7_12u & U2_5_6 & imm_0_4u & st_by_cond_u6_1 [s6 = imm_0_4u | (imm_13 << 5);] {
    	if (U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + st_by_cond_u6_1;
		*[ram]:1 EA = s6;
	<end>
    }
    :"if(" U2_5_6_pred_new ") memb(" S5 "+" st_by_cond_u6_1 ")=" s6 is imm_21_27=0b1000100 & S5 & imm_13 & imm_7_12u & U2_5_6_pred_new & imm_0_4u & st_by_cond_u6_1 [s6 = imm_0_4u | (imm_13 << 5);] {
    	if (U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + st_by_cond_u6_1;
		*[ram]:1 EA = s6;
	<end>
    }
    :"if(!" U2_5_6 ") memb(" S5 "+" st_by_cond_u6_1 ")=" s6 is imm_21_27=0b1001000 & S5 & imm_13 & imm_7_12u & U2_5_6 & imm_0_4u & st_by_cond_u6_1 [s6 = imm_0_4u | (imm_13 << 5);] {
    	if (U2_5_6 != 0) goto <end>;
		local EA:4 = S5 + st_by_cond_u6_1;
		*[ram]:1 EA = s6;
	<end>
    }
    :"if(!" U2_5_6_pred_new ") memb(" S5 "+" st_by_cond_u6_1 ")=" s6 is imm_21_27=0b1001100 & S5 & imm_13 & imm_7_12u & U2_5_6_pred_new & imm_0_4u & st_by_cond_u6_1 [s6 = imm_0_4u | (imm_13 << 5);] {
    	if (U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + st_by_cond_u6_1;
		*[ram]:1 EA = s6;
	<end>
    }
}
st_by_cond_u6_2: val is imm_3_7u & imm_13u & (hasext0=0 | immext0used=1) [val = imm_3_7u | (imm_13u << 5);] {
	export *[const]:4 val;
}
st_by_cond_u6_2: val is imm_3_7u & imm_13u & hasext0=1 & immext0used=0 & immext0 [val = (imm_3_7u) | (imm_13u << 5) | immext0; immext0used=1;] {
	export *[const]:4 val;
}
with slot: iclass=0b0100 & mode=0 {
    :"if("D2_pred") memb("S5"+#"st_by_cond_u6_2")="T5 is imm_21_27=0b0000000 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & D2_pred & st_by_cond_u6_2 {
        if(D2_pred == 0) goto <bad>;
            local EA:4 = S5 + st_by_cond_u6_2;
            *[ram]:1 EA = T5;
        <bad>
    }
    :"if("D2_pred_new") memb("S5"+#"st_by_cond_u6_2")="T5 is imm_21_27=0b0010000 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & D2_pred_new & st_by_cond_u6_2 {
        if(D2_pred_new == 0) goto <bad>;
            local EA:4 = S5 + st_by_cond_u6_2;
            *[ram]:1 EA = T5;
        <bad>
    }
    :"if(!"D2_pred") memb("S5"+#"st_by_cond_u6_2")="T5 is imm_21_27=0b0100000 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & D2_pred & st_by_cond_u6_2 {
        if(D2_pred != 0) goto <bad>;
            local EA:4 = S5 + st_by_cond_u6_2;
            *[ram]:1 EA = T5;
        <bad>
    }
    :"if(!"D2_pred_new") memb("S5"+#"st_by_cond_u6_2")="T5 is imm_21_27=0b0110000 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & D2_pred_new & st_by_cond_u6_2 {
        if(D2_pred_new != 0) goto <bad>;
            local EA:4 = S5 + st_by_cond_u6_2;
            *[ram]:1 EA = T5;
        <bad>
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"if(" D2_pred ") memb(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011000 & S5 & imm_13=1 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & D2_pred [ s4 = imm_3_6 << 0;] {
    	if (D2_pred == 0) goto <end>;
		local EA:4 = S5;
		S5 = S5 + s4;
		*[ram]:1 EA = T5;
	<end>
    }
    :"if(" D2_pred_new ") memb(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011000 & S5 & imm_13=1 & T5 & imm_7=0 & imm_3_6 & imm_2=1 & D2_pred_new [ s4 = imm_3_6 << 0;] {
    	if (D2_pred_new == 0) goto <end>;
		local EA:4 = S5;
		S5 = S5 + s4;
		*[ram]:1 EA = T5;
	<end>
    }
    :"if(!" D2_pred ") memb(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011000 & S5 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & D2_pred [ s4 = imm_3_6 << 0;] {
    	if (D2_pred != 0) goto <end>;
		local EA:4 = S5;
		S5 = S5 + s4;
		*[ram]:1 EA = T5;
	<end>
    }
    :"if(!" D2_pred_new ") memb(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011000 & S5 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & D2_pred_new [ s4 = imm_3_6 << 0;] {
    	if (D2_pred_new != 0) goto <end>;
		local EA:4 = S5;
		S5 = S5 + s4;
		*[ram]:1 EA = T5;
	<end>
    }

    :"stcondb12()" is imm_21_27=0b1111000 & imm_18_20=0 & imm_16_17 & imm_13=0 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"stcondb13()" is imm_21_27=0b1111000 & imm_18_20=0 & imm_16_17 & imm_13=0 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"stcondb14()" is imm_21_27=0b1111000 & imm_18_20=0 & imm_16_17 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"if(" !D2_pred_new ") memb(" u6 ")=" T5 is imm_21_27=0b1111000 & imm_18_20=0 & imm_16_17u & imm_13=1 & T5 & imm_7=1 & imm_3_6u & imm_2=1 & D2_pred_new & hasext0=1 & immext0used=0 & immext0 [u6 = (imm_3_6u | (imm_16_17u << 4)) | immext0; immext0used=1; ] {
    	if(D2_pred_new != 0) goto <end>;
        local EA:4 = u6;
        *[ram]:1 EA = T5;
	<end>
    }
}

# ST:Store HW 
with slot: iclass=0b0011 & mode=0 {
    :"memh(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b1011010 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & D5 [u2 = (imm_7u | (imm_13u << 1)) << 0; ]  {
    	local EA:4 = (S5 + T5) << u2;
    	*[ram]:2 EA = D5;
    }
    :"memh1" is imm_21_27=0b1011011 & S5 & imm_13 & T5 & imm_7 & imm_5_6=0 & D5 {
        _stub();
    }
    :"memh(" S5 "+" u6 ")=" s8 is imm_25_27=0b110 & imm_23_24=0 & imm_21_22=0b01 & S5 & imm_13 & imm_7_12u & imm_0_6u & (hasext0=0 | immext0used=1) [ u6 = imm_7_12u << 1; s8 = imm_0_6u | (imm_13 << 7);] {
        local EA:4 = S5 + u6;
        *[ram]:2 EA = s8;
    }
    :"memh(" S5 "+" u6 ")=" s8 is imm_25_27=0b110 & imm_23_24=0 & imm_21_22=0b01 & S5 & imm_13 & imm_7_12u & imm_0_6u & hasext0=1 & immext0used=0 & immext0 [ u6 = immext0 | imm_7_12u; s8 = imm_0_6u | (imm_13 << 7); immext0used=1;] {
        local EA:4 = S5 + u6;
        *[ram]:2 EA = s8;
    }
    :"memh(" S5 "+" u6 ")=" s8 is imm_25_27=0b110 & imm_23_24=0 & imm_21_22=0b01 & S5 & imm_13 & imm_7_12u & imm_0_6u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 [ u6 = immext1 | imm_7_12u; s8 = imm_0_6u | (imm_13 << 7); immext1used=1;] {
        local EA:4 = S5 + u6;
        *[ram]:2 EA = s8;
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"memh(GP+"u16")="T5 is imm_27=1 & imm_25_26u & imm_21_24=0b0010 & imm_16_20u & imm_13u & T5 & imm_0_7u [u16 = (imm_0_7u | imm_13u << 8 | imm_16_20u<<9 | imm_25_26u <<14) << 1;] {
    	local EA:4 = GP + u16;
	*[ram]:2 EA = T5;
    }
    :"memh("v")="T5 is imm_27=1 & imm_25_26u & imm_21_24=0b0010 & imm_16_20u & imm_13u & T5 & imm_0_7u & hasext0=1 & immext0 & immext0used=0 & imm_0_5u [v = imm_0_5u | immext0; immext0used=1; ] {
    	local EA:4 = GP + v;
	*[ram]:2 EA = T5;
    }
    :"memh4" is imm_27=1 & imm_25_26 & imm_21_24=0b0011 & imm_16_20 & imm_13 & T5 & imm_0_7 {
        _stub();
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"memh("S5"+#"s11")="T5 is imm_27=0 & imm_25_26 & imm_21_24=0b1010 & S5 & imm_13 & T5 & imm_0_7 & (hasext0=0 | immext0used=1) [s11 = (imm_0_7 | (imm_13 << 8) | (imm_25_26 << 9)) << 1; ]{
        local EA:4 = S5 + s11;
        *[ram]:2 EA = T5:2;
    }
    :"memh("S5"+#"s11")="T5 is imm_27=0 & imm_25_26 & imm_21_24=0b1010 & S5 & imm_13 & T5 & imm_0_7 & hasext0=1 & immext0used=0 & immext0 & imm_0_5u [s11 = immext0 | imm_0_5u; immext0used=1; ]{
        local EA:4 = S5 + s11;
        *[ram]:2 EA = T5:2;
    }
    :"memh("S5"+#"s11")="T5 is imm_27=0 & imm_25_26 & imm_21_24=0b1011 & S5 & imm_13 & T5 & imm_0_7 [s11 = (imm_0_7 | (imm_13 << 8) | (imm_25_26 << 9)) << 1; ]{
        local EA:4 = S5 + s11;
        *[ram]:2 EA = T5(2);
    }

    :"memh7" is imm_21_27=0b1001010 & S5 & imm_13 & T5 & imm_7=0 & imm_2_6=0 & imm_1=1 & imm_0=0 {
        _stub();
    }
    :"memh8" is imm_21_27=0b1001010 & S5 & imm_13 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 {
        _stub();
    }
    :"memh9" is imm_21_27=0b1001011 & S5 & imm_13 & T5 & imm_7=0 & imm_2_6=0 & imm_1=1 & imm_0=0 {
        _stub();
    }
    :"memh10" is imm_21_27=0b1001011 & S5 & imm_13 & T5 & imm_7=0 & imm_3_6 & imm_1=0 & imm_0=0 {
        _stub();
    }

    :"memh11" is imm_21_27=0b1011010 & S5 & imm_13=0 & T5 & imm_7=1 & imm_6=0 & imm_0_5 {
        _stub();
    }

    :"memh(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011010 & S5 & imm_13=0 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0  [s4 = imm_3_6 << 1;] {
        local EA:4 = S5;
        S5 = S5+s4;
        *[ram]:2 EA = T5;
    }

    :"memh13" is imm_21_27=0b1011011 & S5 & imm_13=0 & T5 & imm_7=1 & imm_6=0 & imm_0_5 {
        _stub();
    }

    :"memh14" is imm_21_27=0b1011011 & S5 & imm_13=0 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0 {
        _stub();
    }

    :"memh(" S5 "<<" u2 "+" imm_0_5u ")=" T5 is imm_21_27=0b1101010 & S5 & imm_13u & T5 & imm_7=1 & imm_6u & imm_0_5u [ u2 = imm_6u | (imm_13u << 1); ]{
        local EA:4 = (S5 << u2) + imm_0_5u;
        *[ram]:2 EA = T5;
    }

    :"memh16" is imm_21_27=0b1101010 & S5 & imm_13 & T5 & imm_7=0 & imm_0_6=0 {
        _stub();
    }

    :"memh17" is imm_21_27=0b1101011 & S5 & imm_13 & T5 & imm_7=1 & imm_6 & imm_0_5 {
        _stub();
    }

    :"memh18" is imm_21_27=0b1101011 & S5 & imm_13 & T5 & imm_7=0 & imm_0_6 {
        _stub();
    }
    :"memh19" is imm_21_27=0b1111010 & S5 & imm_13 & T5 & imm_7=0 & imm_0_6 {
        _stub();
    }
    :"memh20" is imm_21_27=0b1111011 & S5 & imm_13 & T5 & imm_7=0 & imm_0_6 {
        _stub();
    }
}

ST_COND_1_s6: s6 is imm_0_4u & imm_13 & (hasext0=0 | immext0used=1) [s6 = imm_0_4u | (imm_13 << 5);] {
	export *[const]:4 s6;
}
ST_COND_1_s6: s6 is imm_0_4u & imm_13 & hasext0=1 & immext0used=0 & immext0 [s6 = (imm_0_4u | (imm_13 << 5)) | immext0; immext0used=1; ] {
	export *[const]:4 s6;
}
ST_COND_1_s6: s6 is imm_0_4u & imm_13 & hasext0=1 & hasext1=1 & immext0used=1 & immext1 [s6 = (imm_0_4u | (imm_13 << 5)) | immext1; immext1used=1; ] {
	export *[const]:4 s6;
}

# ST:Store HW cond
with slot: iclass=0b0011 & mode=0 {
    :"sthwcond00" is imm_21_27=0b0100010 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5 {
    _stub();
    }
    :"sthwcond01" is imm_21_27=0b0100011 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5 {
    _stub();
    }
    :"sthwcond02" is imm_21_27=0b0101010 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5 {
    _stub();
    }
    :"sthwcond03" is imm_21_27=0b0101011 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5 {
    _stub();
    }
    :"sthwcond04" is imm_21_27=0b0110010 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5 {
    _stub();
    }
    :"sthwcond05" is imm_21_27=0b0110011 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5 {
    _stub();
    }
    :"sthwcond06" is imm_21_27=0b0111010 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5 {
    _stub();
    }
    :"sthwcond07" is imm_21_27=0b0111011 & S5 & imm_13 & T5 & imm_7 & imm_5_6 & D5 {
    _stub();
    }

    :"if(" U2_5_6 ") memh(" S5 "+" u6 ")=" ST_COND_1_s6 is imm_21_27=0b1000001 & S5 & imm_13 & imm_7_12u & U2_5_6 & imm_0_4u & ST_COND_1_s6 [u6 = imm_7_12u << 1;] {
    	if (U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + u6;
		*[ram]:2 EA = ST_COND_1_s6;
	<end>
    }
    :"if(!" U2_5_6 ") memh(" S5 "+" u6 ")=" ST_COND_1_s6 is imm_21_27=0b1000101 & S5 & imm_13 & imm_7_12u & U2_5_6 & imm_0_4u & ST_COND_1_s6 [u6 = imm_7_12u << 1;] {
    	if (U2_5_6 != 0) goto <end>;
		local EA:4 = S5 + u6;
		*[ram]:2 EA = ST_COND_1_s6;
	<end>
    }
    :"if(" U2_5_6_pred_new ") memh(" S5 "+" u6 ")=" ST_COND_1_s6 is imm_21_27=0b1001001 & S5 & imm_13 & imm_7_12u & U2_5_6_pred_new & imm_0_4u & ST_COND_1_s6 [u6 = imm_7_12u << 1;] {
    	if (U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + u6;
		*[ram]:2 EA = ST_COND_1_s6;
	<end>
    }
    :"if(!" U2_5_6_pred_new ") memh(" S5 "+" u6 ")=" ST_COND_1_s6 is imm_21_27=0b1001101 & S5 & imm_13 & imm_7_12u & U2_5_6_pred_new & imm_0_4u & ST_COND_1_s6 [u6 = imm_7_12u << 1;] {
    	if (U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + u6;
		*[ram]:2 EA = ST_COND_1_s6;
	<end>
    }
}
with slot: iclass=0b0100 & mode=0 {
    :"if("D2_pred") memh("S5"+#"u6")="T5 is imm_21_27=0b0000010 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & D2_pred [u6 =(imm_3_7 | (imm_13 << 5)) << 1;] {
        if(D2_pred == 0) goto <bad>;
            local EA:4 = S5 + u6;
            *[ram]:2 EA = T5;
        <bad>
    }
    :"sthwcond13" is imm_21_27=0b0000011 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"if("D2_pred_new") memh("S5"+#"u6")="T5 is imm_21_27=0b0010010 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & D2_pred_new [u6 =(imm_3_7 | (imm_13 << 5)) << 1;] {
        if(D2_pred_new == 0) goto <bad>;
            local EA:4 = S5 + u6;
            *[ram]:2 EA = T5;
        <bad>
    }
    :"sthwcond15" is imm_21_27=0b0010011 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"if(!"D2_pred") memh("S5"+#"u6")="T5 is imm_21_27=0b0100010 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & D2_pred [u6 =(imm_3_7 | (imm_13 << 5)) << 1;] {
        if(D2_pred != 0) goto <bad>;
            local EA:4 = S5 + u6;
            *[ram]:2 EA = T5;
        <bad>
    }
    :"sthwcond17" is imm_21_27=0b0100011 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"if(!"D2_pred_new") memh("S5"+#"u6")="T5 is imm_21_27=0b0110010 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & D2_pred_new [u6 =(imm_3_7 | (imm_13 << 5)) << 1;] {
        if(D2_pred_new != 0) goto <bad>;
            local EA:4 = S5 + u6;
            *[ram]:2 EA = T5;
        <bad>
    }
    :"sthwcond19" is imm_21_27=0b0110011 & S5 & imm_13 & T5 & imm_3_7 & imm_2=0 & imm_0_1 {
    _stub();
    }
}
with slot: iclass=0b1010 & mode=0 {
    :"if(" D2_pred ") memh(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011010 & S5 & imm_13=1 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & D2_pred [s4 = imm_3_6 << 1;] {
    	if(D2_pred == 0) goto <end>;
	local EA:4 = S5;
	S5 = S5 + s4;
	*[ram] EA = T5;
	<end>
    }
    :"if(" D2_pred_new ") memh(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011010 & S5 & imm_13=1 & T5 & imm_7=0 & imm_3_6 & imm_2=1 & D2_pred_new [s4 = imm_3_6 << 1;] {
    	if(D2_pred_new == 0) goto <end>;
	local EA:4 = S5;
	S5 = S5 + s4;
	*[ram] EA = T5;
	<end>
    }
    :"if(!" D2_pred ") memh(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011010 & S5 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & D2_pred [s4 = imm_3_6 << 1;] {
    	if(D2_pred != 0) goto <end>;
	local EA:4 = S5;
	S5 = S5 + s4;
	*[ram] EA = T5;
	<end>
    }
    :"if(!" D2_pred_new ") memh(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011010 & S5 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & D2_pred_new [s4 = imm_3_6 << 1;] {
    	if(D2_pred_new != 0) goto <end>;
	local EA:4 = S5;
	S5 = S5 + s4;
	*[ram] EA = T5;
	<end>
    }
    :"sthwcond24" is imm_21_27=0b1011011 & S5 & imm_13=1 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"sthwcond25" is imm_21_27=0b1011011 & S5 & imm_13=1 & T5 & imm_7=0 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"sthwcond26" is imm_21_27=0b1011011 & S5 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"sthwcond27" is imm_21_27=0b1011011 & S5 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }

    :"sthwcond28" is imm_21_27=0b1111010 & imm_18_20=0 & imm_16_17 & imm_13=0 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"sthwcond29" is imm_21_27=0b1111010 & imm_18_20=0 & imm_16_17 & imm_13=0 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"sthwcond30" is imm_21_27=0b1111010 & imm_18_20=0 & imm_16_17 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"sthwcond31" is imm_21_27=0b1111010 & imm_18_20=0 & imm_16_17 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"sthwcond32" is imm_21_27=0b1111011 & imm_18_20=0 & imm_16_17 & imm_13=0 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"sthwcond33" is imm_21_27=0b1111011 & imm_18_20=0 & imm_16_17 & imm_13=0 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
    :"sthwcond34" is imm_21_27=0b1111011 & imm_18_20=0 & imm_16_17 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
    _stub();
    }
    :"sthwcond35" is imm_21_27=0b1111011 & imm_18_20=0 & imm_16_17 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
    _stub();
    }
}

# ST:Release
with slot: iclass=0b1010 & mode=0 {
    :"rel0" is imm_21_27=0b0000111 & S5 & imm_13=0 & T5 & imm_6_7=0 & imm_2_5=0b0011 & imm_0_1  {
    _stub();
    }
    :"rel1" is imm_21_27=0b0000111 & S5 & imm_13=0 & T5 & imm_6_7=0 & imm_2_5=0b1011 & imm_0_1  {
    _stub();
    }
}

# ST:Store word
with slot: iclass=0b0011 & mode=0 {
    :"memw("S5"+"T5"<<"u2")=" D5 is imm_21_27=0b1011100 & S5 & imm_13u & T5 & imm_7u & imm_5_6=0 & D5 [ u2 = imm_7u | (imm_13u << 1);] { 
        local EA:4 = S5 + (T5 << u2);
        *[ram]:4 EA = D5;
    }
    :"memw("S5"+"U6")="S8 is imm_25_27=0b110 & imm_23_24=0 & imm_21_22=0b10 & S5 & imm_7_12u & imm_0_6u & imm_13 & (hasext0=0 | immext0used=1) [ U6 = imm_7_12u << 2; S8=imm_0_6u | (imm_13 << 8);] {
        local EA:4 = S5 + U6;
        *[ram]:4 EA = S8;
    }
    :"memw("S5"+"U6")="S8 is imm_25_27=0b110 & imm_23_24=0 & imm_21_22=0b10 & S5 & imm_7_12u & imm_0_6u & imm_13 & hasext0=1 & immext0used=0 & immext0 & imm_0_5u [ U6 = imm_7_12u << 2; S8=imm_0_5u | immext0; immext0used=1; ] {
        local EA:4 = S5 + U6;
        *[ram]:4 EA = S8;
    }
    :"memw("S5"+"U6")="S8 is imm_25_27=0b110 & imm_23_24=0 & imm_21_22=0b10 & S5 & imm_7_12u & imm_0_6u & imm_13 & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_0_5u [ U6 = imm_7_12u << 2; S8=imm_0_5u | immext1; immext1used=1; ] {
        local EA:4 = S5 + U6;
        *[ram]:4 EA = S8;
    }
}

with slot: iclass=0b0100 & mode=0 {
    :"memw(GP + "s11")="T5 is imm_27=1 & imm_25_26 & imm_21_24=0b0100 & imm_16_20u & imm_13u & T5 & imm_0_7u & (hasext0=0 | immext0used=1) [s11 = (imm_0_7u | (imm_13u << 8) | (imm_16_20u << 9) | (imm_25_26 << 14)) << 2;] {
        local EA:4 = GP + s11;
        *[ram]:4 EA = T5;
    }
    :"memw("v")="T5 is imm_27=1 & imm_25_26 & imm_21_24=0b0100 & imm_16_20u & imm_13u & T5 & imm_0_7u & hasext0=1 & immext0used=0 & immext0 & imm_0_5u [v = (imm_0_5u) | immext0; immext0used=1; ] {
        local EA:4 = v;
        *[ram]:4 EA = T5;
    }
    :"memw("v")="T5 is imm_27=1 & imm_25_26 & imm_21_24=0b0100 & imm_16_20u & imm_13u & T5 & imm_0_7u & hasext0=1 & hasext1=1 & immext0used=1 & immext1 & imm_0_5u [v = (imm_0_5u) | immext1; immext1used=1; ] {
        local EA:4 = v;
        *[ram]:4 EA = T5;
    }
}

with slot: iclass=0b1010 & mode=0 {
    :"memw("S5" + "s11")="T5 is imm_27=0 & imm_25_26 & imm_21_24=0b1100 & S5 & imm_13u & T5 & imm_0_7u [s11 = (imm_0_7u | (imm_13u << 8) | (imm_25_26 << 9)) << 2;] {
        local EA:4 = S5 + s11;
        *[ram]:4 EA = T5;
    }
    :"memw(X5 ++ I:circ(Mu))=" is imm_21_27=0b1001100 & S5 & imm_13 & T5 & imm_7=0 & imm_2_6=0 & imm_1=1 & imm_0=0 {
        _stub();
    }
    :"memw(X5 ++ s4:2:circ(Mu))=" is imm_21_27=0b1001100 & S5 & imm_13 & T5 & imm_7=0 & imm_2_6=0 & imm_1=0 & imm_0=0 {
        _stub();
    }
     :"memw(" S5 "=" EXT_imm_0_5u ")=" T5 is imm_21_27=0b1011100 & S5 & imm_13=0 & T5 & imm_7=1 & imm_6=0 & EXT_imm_0_5u {
        local EA:4 = S5;
        *[ram]:4 EA = T5;
        S5 = S5 + EXT_imm_0_5u;
     }
    :"memw(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011100 & S5 & imm_13=0 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & imm_1=0 & imm_0=0  [s4 = imm_3_6 << 2;] {
        local EA:4 = S5;
        S5 = S5+s4;
        *[ram]:4 EA = T5;
    }

    :"memw(" S5 "<<" u2 "+" EXT_imm_0_5u ")=" T5 is imm_21_27=0b1101100 & S5 & imm_13u & T5 & imm_7=1 & imm_6u & EXT_imm_0_5u [u2 = imm_6u | (imm_13u << 1); ] {
        local EA:4 = (S5 << u2) + EXT_imm_0_5u;
	*[ram]:4 EA = T5;
    }
    :"memw(Rx++Mu)=" is imm_21_27=0b1101100 & S5 & imm_13 & T5 & imm_7=0 & imm_0_6=0 {
        _stub();
    }
    :"memw(Rx++Mu:brev)=" is imm_21_27=0b1111100 & S5 & imm_13 & T5 & imm_7=0 & imm_0_6=0 {
        _stub();
    }
}

# ST:Store-release word
with slot: iclass=0b1010 & mode=0 {
    :"memwrl0" is imm_21_27=0b0000101 & S5 & imm_13=0 & T5 & imm_6_7=0 & imm_2_5=0b0010 & imm_0_1  {
    _stub();
    }
    :"memwrl1" is imm_21_27=0b0000101 & S5 & imm_13=0 & T5 & imm_6_7=0 & imm_2_5=0b1010 & imm_0_1  {
    _stub();
    }
}

# ST:Store word cond

with slot: iclass=0b0011 & mode=0 {
    :"if(" U2_5_6 ") memw(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b0100100 & S5 & imm_13u & T5 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if (U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		*[ram]:4 EA = D5;
	<end>
    }
    :"if(!" U2_5_6 ") memw(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b0101100 & S5 & imm_13u & T5 & imm_7u & U2_5_6 & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if (U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		*[ram]:4 EA = D5;
	<end>
    }
    :"if(" U2_5_6_pred_new ") memw(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b0110100 & S5 & imm_13u & T5 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if (U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		*[ram]:4 EA = D5;
	<end>
    }
    :"if(!" U2_5_6_pred_new ") memw(" S5 "+" T5 "<<" u2 ")=" D5 is imm_21_27=0b0111100 & S5 & imm_13u & T5 & imm_7u & U2_5_6_pred_new & D5 [u2 = imm_7u | (imm_13u << 1);] {
    	if (U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + (T5 << u2);
		*[ram]:4 EA = D5;
	<end>
    }

    :"if(" U2_5_6 ") memw(" S5 "+" u6 ")=" ST_COND_1_s6 is imm_21_27=0b1000010 & S5 & imm_13 & imm_7_12u & U2_5_6 & imm_0_4u & ST_COND_1_s6 [u6 = imm_7_12u << 2;] {
    	if (U2_5_6 == 0) goto <end>;
		local EA:4 = S5 + u6;
		*[ram]:4 EA = ST_COND_1_s6;
	<end>
    }
    :"if(!" U2_5_6 ") memw(" S5 "+" u6 ")=" ST_COND_1_s6 is imm_21_27=0b1000110 & S5 & imm_13 & imm_7_12u & U2_5_6 & imm_0_4u & ST_COND_1_s6 [u6 = imm_7_12u << 2;] {
    	if (U2_5_6 != 0) goto <end>;
		local EA:4 = S5 + u6;
		*[ram]:4 EA = ST_COND_1_s6;
	<end>
    }
    :"if(" U2_5_6_pred_new ") memw(" S5 "+" u6 ")=" ST_COND_1_s6 is imm_21_27=0b1001010 & S5 & imm_13 & imm_7_12u & U2_5_6_pred_new & imm_0_4u & ST_COND_1_s6 [u6 = imm_7_12u << 2;] {
    	if (U2_5_6_pred_new == 0) goto <end>;
		local EA:4 = S5 + u6;
		*[ram]:4 EA = ST_COND_1_s6;
	<end>
    }
    :"if(!" U2_5_6_pred_new ") memw(" S5 "+" u6 ")=" ST_COND_1_s6 is imm_21_27=0b1001110 & S5 & imm_13 & imm_7_12u & U2_5_6_pred_new & imm_0_4u & ST_COND_1_s6 [u6 = imm_7_12u << 2;] {
    	if (U2_5_6_pred_new != 0) goto <end>;
		local EA:4 = S5 + u6;
		*[ram]:4 EA = ST_COND_1_s6;
	<end>
    }
}
ST_W_COND_0_u6: s6 is imm_3_7u & imm_13u & (hasext0=0 | immext0used=1) [s6 = (imm_3_7u | (imm_13u << 5)) << 2;] {
	export *[const]:4 s6;
}
ST_W_COND_0_u6: s6 is imm_3_7u & imm_13u & hasext0=1 & immext0used=0 & immext0 [s6 = (imm_3_7u | (imm_13u << 5)) | immext0; immext0used=1; ] {
	export *[const]:4 s6;
}
with slot: iclass=0b0100 & mode=0 {
    :"if(" D2_pred ") memw(" S5 "+" ST_W_COND_0_u6 ")=" T5 is imm_21_27=0b0000100 & S5 & imm_13u & T5 & imm_3_7u & imm_2=0 & D2_pred & ST_W_COND_0_u6 {
    	if (D2_pred == 0) goto <end>;
		local EA:4 = S5 + ST_W_COND_0_u6;
		*[ram]:4 EA = T5;
	<end>
    }
    :"if(" D2_pred_new ") memw(" S5 "+" ST_W_COND_0_u6 ")=" T5 is imm_21_27=0b0010100 & S5 & imm_13u & T5 & imm_3_7u & imm_2=0 & D2_pred_new & ST_W_COND_0_u6 {
    	if (D2_pred_new == 0) goto <end>;
		local EA:4 = S5 + ST_W_COND_0_u6;
		*[ram]:4 EA = T5;
	<end>
    }
    :"if(!" D2_pred ") memw(" S5 "+" ST_W_COND_0_u6 ")=" T5 is imm_21_27=0b0100100 & S5 & imm_13u & T5 & imm_3_7u & imm_2=0 & D2_pred & ST_W_COND_0_u6 {
    	if (D2_pred != 0) goto <end>;
		local EA:4 = S5 + ST_W_COND_0_u6;
		*[ram]:4 EA = T5;
	<end>
    }
    :"if(!" D2_pred_new ") memw(" S5 "+" ST_W_COND_0_u6 ")=" T5 is imm_21_27=0b0110100 & S5 & imm_13u & T5 & imm_3_7u & imm_2=0 & D2_pred_new & ST_W_COND_0_u6 {
    	if (D2_pred_new != 0) goto <end>;
		local EA:4 = S5 + ST_W_COND_0_u6;
		*[ram]:4 EA = T5;
	<end>
    }
}

with slot: iclass=0b1010 & mode=0 {
    :"if(" D2_pred ") memw(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011100 & S5 & imm_13=1 & T5 & imm_7=0 & imm_3_6 & imm_2=0 & D2_pred [ s4 = imm_3_6 << 2;] {
    	if (D2_pred == 0) goto <end>;
		local EA:4 = S5;
		S5 = S5 + s4;
		*[ram]:4 EA = T5;
	<end>
    }
    :"if(" D2_pred_new ") memw(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011100 & S5 & imm_13=1 & T5 & imm_7=0 & imm_3_6 & imm_2=1 & D2_pred_new [ s4 = imm_3_6 << 2;] {
    	if (D2_pred_new == 0) goto <end>;
		local EA:4 = S5;
		S5 = S5 + s4;
		*[ram]:4 EA = T5;
	<end>
    }
    :"if(!" D2_pred ") memw(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011100 & S5 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & D2_pred [ s4 = imm_3_6 << 2;] {
    	if (D2_pred != 0) goto <end>;
		local EA:4 = S5;
		S5 = S5 + s4;
		*[ram]:4 EA = T5;
	<end>
    }
    :"if(!" D2_pred_new ") memw(" S5 "++" s4 ")=" T5 is imm_21_27=0b1011100 & S5 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & D2_pred_new [ s4 = imm_3_6 << 2;] {
    	if (D2_pred_new != 0) goto <end>;
		local EA:4 = S5;
		S5 = S5 + s4;
		*[ram]:4 EA = T5;
	<end>
    }

    :"if(" D2_pred ") memw(" u6 ")=" T5 is imm_21_27=0b1111100 & imm_18_20=0 & imm_16_17u & imm_13=0 & T5 & imm_7=1 & imm_3_6u & imm_2=0 & D2_pred & (hasext0=0 | immext0used=1) [u6 = imm_3_6u | (imm_16_17u << 4);] {
    	if(D2_pred == 0) goto <end>;
        local EA:4 = u6;
        *[ram]:4 EA = T5;
	<end>
    }
    :"ST17" is imm_21_27=0b1111100 & imm_18_20 & imm_16_17 & imm_13=0 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
        _stub();
    }
    :"ST18" is imm_21_27=0b1111100 & imm_18_20 & imm_16_17 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=0 & imm_0_1 {
        _stub();
    }
    :"ST19" is imm_21_27=0b1111100 & imm_18_20 & imm_16_17 & imm_13=1 & T5 & imm_7=1 & imm_3_6 & imm_2=1 & imm_0_1 {
        _stub();
    }
    :"if(" !D2_pred_new ") memw(" u6 ")=" T5 is imm_21_27=0b1111100 & imm_18_20=0 & imm_16_17u & imm_13=1 & T5 & imm_7=1 & imm_3_6u & imm_2=1 & D2_pred_new & hasext0=1 & immext0used=0 & immext0 [u6 = (imm_3_6u | (imm_16_17u << 4)) | immext0; immext0used=1; ] {
    	if(D2_pred_new != 0) goto <end>;
        local EA:4 = u6;
        *[ram]:4 EA = T5;
	<end>
    }
}

# ST:Allocate stack frame
with slot: iclass=0b1010 & mode=0 {

    :"allocframe("S5","U11"):raw" is imm_21_27=0b0000100 & S5 & imm_11_13=0b000 & imm_0_10 [ U11 = imm_0_10 << 3; ] {
        local EA:4 = S5 - 8;
        *[ram]:8 EA = LRFP;
        FP = EA;
        S5 = EA - U11;
    }
}

#SYSTEM/GUEST:GCRT
with slot: iclass=0b0110 & mode=0 {
    :"gcrt0" is imm_21_27=0b0010000 & S5 & imm_5_13=0 & D5 {
   	_stub();
    }
    :"gcrt1" is imm_21_27=0b0011000 & S5 & imm_5_13=0 & D5 {
   	_stub();
    }
    :"gcrt3" is imm_21_27=0b1000001 & S5 & imm_5_13=0 & D5 {
   	_stub();
    }
    :"gcrt4" is imm_21_27=0b1010001 & S5 & imm_5_13=0 & D5 {
   	_stub();
    }
}


@include "system_monitor.sinc"

define pcodeop isync;
slot:"isync" is iclass=0b0101 & imm_16_27=0b011111000000 & imm_13=0 & imm_10_12=0 & imm_0_9=0b0000000010 & mode=0 {
	isync();
}





#SYSTEM/USER:Load locked
define pcodeop memw_locked;
define pcodeop memd_locked;
with slot: iclass=0b1001 & mode=0 {
    :D5"=memw_locked("S5")" is imm_21_27=0b0010000 & S5 & imm_12_13=0b00 & imm_5_11=0 & D5 {
        D5 = memw_locked(S5);
    }
    :D5_pair"=memd_locked("S5")" is imm_21_27=0b0010000 & S5 & imm_12_13=0b01 & imm_5_11=0 & D5_pair {
        D5_pair = memd_locked(S5);
    }
}

#SYSTEM/USER:Store locked
define pcodeop memw_locked_store;
define pcodeop memd_locked_store;
with slot: iclass=0b1010 & mode=0 {
    :"memw_locked("S5","D2_pred")="T5 is imm_21_27=0b0000101 & S5 & imm_13=0 & T5 & imm_2_7=0 & D2_pred {
        memw_locked_store(S5, D2_pred, T5);
    }
    :"memd_locked("S5","D2_pred")="T5_pair is imm_21_27=0b0000111 & S5 & imm_13=0 & T5_pair & imm_2_7=0 & D2_pred {
        memw_locked_store(S5, D2_pred, T5_pair);
    }
}

#SYSTEM/USER:Zero cache line
define pcodeop dcache_zero_addr;
with slot: iclass=0b1010 & mode=0 {
    slot:"dczeroa("S5")" is imm_21_27=0b0000110 & S5 & imm_13=0 & imm_0_12=0 {
dcache_zero_addr(S5);
    }
}

#SYSTEM/USER:barrier
define pcodeop barrier;
with slot: iclass=0b1010 & mode=0 {
    slot:"barrier" is imm_21_27=0b1000000 & imm_16_20=0 & imm_0_13=0 {
barrier();
    }
}

#SYSTEM/USER:Breakpoint
define pcodeop brkpt;
with slot: iclass=0b0110 & mode=0 {
    slot:"brkpt" is imm_21_27=0b1100001 & imm_16_20=0 & imm_8_13=0 & imm_5_7=0b000 & imm_0_4=0 {
        brkpt();
    }
}

#SYSTEM/USER:Data cache prefetch
define pcodeop dcache_fetch;
with slot: iclass=0b0110 & mode=0 {
    :"dcfetch("S5"+"u11")" is imm_21_27=0b0100000 & S5 & imm_13=0 & imm_11_12=0 & imm_0_10 [u11 = imm_0_10 << 3; ] {
        dcache_fetch();
    }
}

#SYSTEM/USER:Data cache maintain
define pcodeop dcache_clean_addr;
define pcodeop dcache_cleaninv_addr;
define pcodeop dcache_inv_addr;
with slot: iclass=0b1010 & mode=0 {
    :"dccleana("S5")" is imm_21_27=0b0000000 & S5 & imm_0_13=0  {
        dcache_clean_addr(S5);
    }
    :"dccleaninva("S5")" is imm_21_27=0b0000001 & S5 & imm_0_13=0  {
        dcache_cleaninv_addr(S5);
    }
    :"dcinva("S5")" is imm_21_27=0b0000010 & S5 & imm_0_13=0  {
        dcache_inv_addr(S5);
    }
}

#SYSTEM/USER:diag
define pcodeop diag;
define pcodeop diag0;
define pcodeop diag1;
with slot: iclass=0b01100 & mode=0 {
    :"diag("S5")" is imm_21_27=0b0010010 & S5 & imm_8_13=0 & imm_5_7=0b001 &  imm_0_4=0  {
        diag(S5);
    }

    :"diag0("S5","T5")" is imm_21_27=0b0010010 & S5 & imm_13=0 & T5 & imm_5_7=0b010 & imm_0_4=0  {
        diag0(S5, T5);
    }
    :"diag1("S5","T5")" is imm_21_27=0b0010010 & S5 & imm_13=0 & T5 & imm_5_7=0b011 & imm_0_4=0  {
        diag1(S5, T5);
    }
}

#SYSTEM/USER:Icache maintain
define pcodeop icache_inv_addr;
with slot: iclass=0b1010 & mode=0 {
    :"icinva("S5")" is imm_21_27=0b0110110 & S5 & imm_11_13=0b000 & imm_0_10=0  {
        icache_inv_addr(S5);
    }
}


#SYSTEM/USER:Isync
define pcodeop memory_synch;
with slot: iclass=0b0101 & mode=0 {
    :"isync" is imm_17_27=0b011111000000 & S5 & imm_13=0 & imm_10_12=0 & imm_0_9=0b0000000010  {
        memory_synch(S5);
    }
}

#SYSTEM/USER:L2 fetch todo
define pcodeop l2fetch;
with slot: iclass=0b1010 & mode=0 {
    :"l2fetch("S5","T5")" is imm_21_27=0b0110000 & S5 & imm_13=0 & T5 & imm_0_7=0 {
        l2fetch(S5, T5);
    }
    :"l2fetch("S5","T5_pair")" is imm_21_27=0b0110100 & S5 & imm_13=0 & T5_pair & imm_0_7=0 {
        l2fetch(S5, T5_pair);
    }
}


#SYSTEM/USER:pause
define pcodeop pause;
with slot: iclass=0b0101 & mode=0 {
    :"pause" is imm_22_27=0b010001 & imm_16_21=0 & imm_13=0 & imm_8_12 & imm_5_7=0 & imm_2_4 & imm_0_1=0  {
        pause();
    }
}

#SYSTEM/USER:mem thread sync
define pcodeop syncht;
with slot: iclass=0b1010 & mode=0 {
    :"Rd=dmsyncht" is imm_21_27=0b1000000 & imm_16_20=0 & imm_9_13=0 & imm_5_8=0b0111 & D5 {
	    _stub();
    }

    :"syncht" is imm_21_27=0b1000010 & imm_16_20=0 & imm_0_13=0 {
        syncht();
    }
}

#SYSTEM/USER:trace
define pcodeop trace;
with slot: iclass=0b0110 & mode=0 {
    :"trace" is imm_21_27=0b0010010 & S5 & imm_0_13=0 {
        trace(S5);
    }
}

#SYSTEM/USER:Trap
define pcodeop trap0;
define pcodeop trap1;
with slot: iclass=0b0101 & mode=0 & mode=0 {
    slot:"trap0" is imm_22_27=0b010000 & imm_16_21=0 & imm_13=0 & imm_8_12 & imm_5_7 & imm_2_4 & imm_0_1 {
        trap0();
    }
    slot:"trap1" is imm_22_27=0b010010 & imm_21=0 & S5 & imm_13=0 & imm_8_12 & imm_5_7 & imm_2_4 & imm_0_1 {
        trap1();
    }
}

#SYSTEM/USER:unpause
define pcodeop unpause;
with slot: iclass=0b0101 & mode=0 {
    :"unpause" is imm_21_27=0b0111111 & imm_16_20=0 & imm_12_13=0b01 & imm_8_11=0 & imm_5_7=0b000 & imm_0_4=0 {
        unpause();
    }
}


# XTYPE - pain starts here
@include "xtype_alu.sinc"
@include "xtype_bit.sinc"
@include "xtype_complex.sinc"
@include "xtype_fp.sinc"
@include "xtype_mpy.sinc"
@include "xtype_perm.sinc"
@include "xtype_shift.sinc"

### ---- end of normal ops ----

EXT_immdup1_8_11w: v is immdup1_8_11 & (hasext0=0 | immext0used=1) [ v = immdup1_8_11 << 2;] {
    export *[const]:4 v;
}
EXT_immdup1_8_11w: v is immdup1_8_11 & hasext0=1 & immext0used=0 & immext0 [ v = immdup1_8_11 | immext0; immext0used=1;] {
    export *[const]:4 v;
}

L1L:immdup0_D4 "=memw(" immdup0_S4 "+" v ")" is immdup0_12=0 & immdup0_8_11 & immdup0_S4 & immdup0_D4 & mode=0  [v = immdup0_8_11 << 2;]{
	local EA:4 = immdup0_S4 + v;
	immdup0_D4 = *[ram]:4 EA;
}
L1R:immdup1_D4 "=memw(" immdup1_S4 "+" EXT_immdup1_8_11w ")" is immdup1_12=0 & EXT_immdup1_8_11w & immdup1_S4 & immdup1_D4 & mode=0 {
	local EA:4 = immdup1_S4 + EXT_immdup1_8_11w;
	immdup1_D4 = *[ram]:4 EA;
}


L1L:immdup0_D4 "=memub(" immdup0_S4 "+" immdup0_8_11 ")" is immdup0_12=1 & immdup0_8_11 & immdup0_S4 & immdup0_D4 & mode=0 {
	local EA:4 = immdup0_S4 + immdup0_8_11;
	immdup0_D4 = *[ram]:1 EA;
}
L1R:immdup1_D4 "=memub(" immdup1_S4 "+" immdup1_8_11 ")" is immdup1_12=1 & immdup1_8_11 & immdup1_S4 & immdup1_D4 & mode=0 {
	local EA:4 = immdup1_S4 + immdup1_8_11;
	immdup1_D4 = *[ram]:1 EA;
}

# Duplex/S1

S1L:"memw(" immdup0_S4 "+" v ")=" immdup0_D4 is immdup0_12=0 & immdup0_8_11 & immdup0_S4 & immdup0_D4 & mode=0 [v = immdup0_8_11 << 2;]{
	local EA:4 = immdup0_S4 + v;
	*[ram]:4 EA = immdup0_D4;
}
S1R:"memw(" immdup1_S4 "+" EXT_immdup1_8_11w ")=" immdup1_D4 is immdup1_12=0 & EXT_immdup1_8_11w & immdup1_S4 & immdup1_D4 & mode=0 {
	local EA:4 = immdup1_S4 + EXT_immdup1_8_11w;
	*[ram]:4 EA = immdup1_D4;
}

S1L:"memb("immdup0_S4 "+" immdup0_8_11 ")=" immdup0_D4 is immdup0_12=1 & immdup0_8_11 & immdup0_S4 & immdup0_D4 & mode=0 {
	local EA:4 = immdup0_S4 + immdup0_8_11;
	*[ram]:1 EA = immdup0_D4;
}
S1R:"memb("immdup1_S4 "+" immdup1_8_11 ")=" immdup1_D4 is immdup1_12=1 & immdup1_8_11 & immdup1_S4 & immdup1_D4 & mode=0 {
	local EA:4 = immdup1_S4 + immdup1_8_11;
	*[ram]:1 EA = immdup1_D4;
}

 #Duplex/L2 
L2L:immdup0_D4 "=memh(" immdup0_S4 "+" v ")" is immdup0_11_12=0b00 & immdup0_8_10 & immdup0_S4 & immdup0_D4 & mode=0 [v = immdup0_8_10 << 1;] {
	local EA:4 = immdup0_S4 + v;
	immdup0_D4 = *[ram]:2 EA;
}
L2R:immdup1_D4 "=memh(" immdup1_S4 "+" v ")" is immdup1_11_12=0b00 & immdup1_8_10 & immdup1_S4 & immdup1_D4 & mode=0  [v = immdup1_8_10 << 1;]{
	local EA:4 = immdup1_S4 + v;
	immdup1_D4 = *[ram]:2 EA;
}

L2L:immdup0_D4 "=memuh(" immdup0_S4 "+" v ")" is immdup0_11_12=0b01 & immdup0_8_10 & immdup0_S4 & immdup0_D4 & mode=0 [v = immdup0_8_10 << 1;] {
	local EA:4 = immdup0_S4 + v;
	immdup0_D4 = *[ram]:2 EA;
}
L2R:immdup1_D4 "=memuh(" immdup1_S4 "+" v ")" is immdup1_11_12=0b01 & immdup1_8_10 & immdup1_S4 & immdup1_D4 & mode=0 [v = immdup1_8_10 << 1;]{
	local EA:4 = immdup1_S4 + v;
	immdup1_D4 = *[ram]:2 EA;
}


L2L:immdup0_D4 "=memb(" immdup0_S4 "+" v ")" is immdup0_11_12=0b10 & immdup0_8_10 & immdup0_S4 & immdup0_D4 & mode=0 [v = immdup0_8_10 << 1;] {
	local EA:4 = immdup0_S4 + v;
	immdup0_D4 = *[ram]:1 EA;
}
L2R:immdup1_D4 "=memb(" immdup1_S4 "+" v ")" is immdup1_11_12=0b10 & immdup1_8_10 & immdup1_S4 & immdup1_D4 & mode=0 [v = immdup1_8_10 << 1;]{
	local EA:4 = immdup1_S4 + v;
	immdup1_D4 = *[ram]:1 EA;
}

L2L:immdup0_D4 "=memw(SP+" v ")" is immdup0_9_12=0b1110 & immdup0_4_8 & immdup0_D4 & mode=0 [v = immdup0_4_8 << 2;]{
	local EA:4 = SP + v;
	immdup0_D4 = *[ram]:4 EA;
}
L2R:immdup1_D4 "=memw(SP+" v ")" is immdup1_9_12=0b1110 & immdup1_4_8 & immdup1_D4 & mode=0 [v = immdup1_4_8 << 2;] {
	local EA:4 = SP + v;
	immdup1_D4 = *[ram]:4 EA;
}

L2L:immdup0_D3_pair "=memd(SP+" v ")" is immdup0_8_12=0b11110 & immdup0_3_7 & immdup0_D3_pair & mode=0 [v = immdup0_3_7 << 3;] {
	local EA:4 = SP + v;
	immdup0_D3_pair = *[ram]:8 EA;
}
L2R:immdup1_D3_pair "=memd(SP+" v ")" is immdup1_8_12=0b11110 & immdup1_3_7 & immdup1_D3_pair & mode=0 [v = immdup1_3_7 << 3;] {
	local EA:4 = SP + v;
	immdup1_D3_pair = *[ram]:8 EA;
}

L2L:"deallocframe" is immdup0_6_12=0b1111100 & immdup0_3_5=0 & immdup0_2=0 & immdup0_0_1=0 & mode=0 {
	local EA:4 = FP;
        local tmp:8 = *[ram]:8 EA;
        LRFP = tmp;
        SP=EA+8;
}
L2R:"deallocframe" is immdup1_6_12=0b1111100 & immdup1_3_5=0 & immdup1_2=0 & immdup1_0_1=0 & mode=0 {
	local EA:4 = FP;
        local tmp:8 = *[ram]:8 EA;
        LRFP = tmp;
        SP=EA+8;
}

L2L:"dealloc_return" is immdup0_6_12=0b1111101 & immdup0_3_5=0 & immdup0_2=0 & immdup0_0_1=0 & mode=0 {
        local EA:4 = FP;
        local tmp:8 = *[ram]:8 EA;
        LRFP = tmp;

        local tmp2:8 = tmp>>32;
        local tmp3:4 = tmp2:4;

        SP = EA+8;
}
L2L:"dealloc_return" is immdup0_6_12=0b1111101 & immdup0_3_5=0 & immdup0_2=0 & immdup0_0_1=0 & mode=1100 {
        local EA:4 = FP;
        local tmp:8 = *[ram]:8 EA;

        local tmp2:8 = tmp>>32;
        local tmp3:4 = tmp2:4;

		return [tmp3];
}
L2R:"dealloc_return" is immdup1_6_12=0b1111101 & immdup1_3_5=0 & immdup1_2=0 & immdup1_0_1=0 & mode=0 {
        local EA:4 = FP;
        local tmp:8 = *[ram]:8 EA;
        LRFP = tmp;

        local tmp2:8 = tmp>>32;
        local tmp3:4 = tmp2:4;

        SP = EA+8;
}
L2R:"dealloc_return" is immdup1_6_12=0b1111101 & immdup1_3_5=0 & immdup1_2=0 & immdup1_0_1=0 & mode=1100 {
        local EA:4 = FP;
        local tmp:8 = *[ram]:8 EA;
        
        local tmp2:8 = tmp>>32;
        local tmp3:4 = tmp2:4;
        
        return [tmp3];
}

L2L:"ret_t" is immdup0_6_12=0b1111101 & immdup0_3_5=0 & immdup0_0_2=0b100 & mode=0 {
_stub();
}
L2R:"ret_t" is immdup1_6_12=0b1111101 & immdup1_3_5=0 & immdup1_0_2=0b100 & mode=0 {
_stub();
}

L2L:"ret_f" is immdup0_6_12=0b1111101 & immdup0_3_5=0 & immdup0_0_2=0b101 & mode=0 {
_stub();
}
L2R:"ret_f" is immdup1_6_12=0b1111101 & immdup1_3_5=0 & immdup1_0_2=0b101 & mode=0 {
_stub();
}

L2L:"ret_tnew" is immdup0_6_12=0b1111101 & immdup0_3_5=0 & immdup0_0_2=0b110 & mode=0 {
_stub();
}
L2R:"ret_tnew" is immdup1_6_12=0b1111101 & immdup1_3_5=0 & immdup1_0_2=0b110 & mode=0 {
_stub();
}

L2L:"ret_fnew" is immdup0_6_12=0b1111101 & immdup0_3_5=0 & immdup0_0_2=0b111 & mode=0 {
_stub();
}
L2R:"ret_fnew" is immdup1_6_12=0b1111101 & immdup1_3_5=0 & immdup1_0_2=0b111 & mode=0 {
_stub();
}

L2L:"jumpr LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_2=0 & immdup0_0_1=0 & mode=0 {}
L2L:"jumpr LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_2=0 & immdup0_0_1=0 & mode=1100 {
	return [LR];
}
L2R:"jumpr LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_2=0 & immdup1_0_1=0 & mode=0 {}
L2R:"jumpr LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_2=0 & immdup1_0_1=0 & mode=1100 {
	return [LR];
}
L2L:"if(p0) jumpr:nt LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_0_2=0b100 & mode=0 {}
L2L:"if(p0) jumpr:nt LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_0_2=0b100 & mode=1100 {
	if(P0 == 0) goto <end>;
	return [LR];
	<end>
}
L2R:"if(p0) jumpr:nt LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_0_2=0b100 & mode=0 {}
L2R:"if(p0) jumpr:nt LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_0_2=0b100 & mode=1100 {
	if(P0 == 0) goto <end>;
	return [LR];
	<end>
}
L2L:"if(!p0) jumpr:nt LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_0_2=0b101 & mode=0 {}
L2L:"if(!p0) jumpr:nt LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_0_2=0b101 & mode=1100 {
	if(P0 != 0) goto <end>;
	return [LR];
	<end>
}
L2R:"if(!p0) jumpr:nt LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_0_2=0b101 & mode=0 {}
L2R:"if(!p0) jumpr:nt LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_0_2=0b101 & mode=1100 {
	if(P0 != 0) goto <end>;
	return [LR];
	<end>
}

L2L:"if(p0.new) jumpr:nt LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_0_2=0b110 & mode=0 {}
L2L:"if(p0.new) jumpr:nt LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_0_2=0b110 & mode=1100 {
	if(P0.new == 0) goto <end>;
	return [LR];
	<end>
}
L2R:"if(p0.new) jumpr:nt LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_0_2=0b110 & mode=0 {}
L2R:"if(p0.new) jumpr:nt LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_0_2=0b110 & mode=1100 {
	if(P0.new == 0) goto <end>;
	return [LR];
	<end>
}
L2L:"if(!p0.new) jumpr:nt LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_0_2=0b111 & mode=0 {}
L2L:"if(!p0.new) jumpr:nt LR" is immdup0_6_12=0b1111111 & immdup0_3_5=0 & immdup0_0_2=0b111 & mode=1100 {
	if(P0.new != 0) goto <end>;
	return [LR];
	<end>
}
L2R:"if(!p0.new) jumpr:nt LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_0_2=0b111 & mode=0 {}
L2R:"if(!p0.new) jumpr:nt LR" is immdup1_6_12=0b1111111 & immdup1_3_5=0 & immdup1_0_2=0b111 & mode=1100 {
	if(P0.new != 0) goto <end>;
	return [LR];
	<end>
}

with : mode=0 {

# Duplex/S2
S2L:immdup0_D4 "=memh(" immdup0_S4 "+" v ")" is immdup0_11_12=0b00 & immdup0_8_10 & immdup0_S4 & immdup0_D4 [ v = immdup0_8_10 << 1; ] {
    local EA:4 = immdup0_S4 + v;
    immdup0_D4 = *[ram]:2 EA;
}
S2R:immdup1_D4 "=memh(" immdup1_S4 "+" v ")" is immdup1_11_12=0b00 & immdup1_8_10 & immdup1_S4 & immdup1_D4 [ v = immdup1_8_10 << 1; ] {
    local EA:4 = immdup1_S4 + v;
    immdup1_D4 = *[ram]:2 EA;
}

S2L:"memw(SP+" a ") =" immdup0_D4 is immdup0_9_12=0b0100 & immdup0_4_8 & immdup0_D4 [a = immdup0_4_8 << 2;]{
	local EA:4 = SP + a;
	*[ram]:4 EA = immdup0_D4;
}
S2R:"memw(SP+" a ") =" immdup1_D4 is immdup1_9_12=0b0100 & immdup1_4_8 & immdup1_D4 [a = immdup1_4_8 << 2;]{
	local EA:4 = SP + a;
	*[ram]:4 EA = immdup1_D4;
}

S2L:"memd(SP+" a ") =" immdup0_D3_pair is immdup0_9_12=0b0101 & immdup0_3_8 & immdup0_D3_pair [a = immdup0_3_8 << 3;]{
	local EA:4 = SP + a;
	*[ram]:8 EA = immdup0_D3_pair;
}
S2R:"memd(SP+" a ") =" immdup1_D3_pair is immdup1_9_12=0b0101 & immdup1_3_8 & immdup1_D3_pair [a = immdup1_3_8 << 3;]{
	local EA:4 = SP + a;
	*[ram]:8 EA = immdup1_D3_pair;
}

S2L:"memw(" immdup0_S4 "+"v ") = 0" is immdup0_8_12=0b10000 & immdup0_S4 & immdup0_0_3 [v = immdup0_0_3 << 2;] {
	local EA:4 = immdup0_S4 + v;
	*[ram]:4 EA = 0;
}
S2R:"memw(" immdup1_S4 "+"v ") = 0" is immdup1_8_12=0b10000 & immdup1_S4 & immdup1_0_3 [v = immdup1_0_3 << 2;] {
	local EA:4 = immdup1_S4 + v;
	*[ram]:4 EA = 0;
}

S2L:"memw(" immdup0_S4 "+"v ") = 1" is immdup0_8_12=0b10001 & immdup0_S4 & immdup0_0_3 [v = immdup0_0_3 << 2;] {
	local EA:4 = immdup0_S4 + v;
	*[ram]:4 EA = 1;
}
S2R:"memw(" immdup1_S4 "+"v ") = 1" is immdup1_8_12=0b10001 & immdup1_S4 & immdup1_0_3 [v = immdup1_0_3 << 2;] {
	local EA:4 = immdup1_S4 + v;
	*[ram]:4 EA = 1;
}

S2L:"memb(" immdup0_S4 "+" immdup0_0_3 ") = 0" is immdup0_8_12=0b10010 & immdup0_S4 & immdup0_0_3 {
	local EA:4 = immdup0_S4 +  immdup0_0_3;
	*[ram]:1 EA = 0;
}
S2R:"memb(" immdup1_S4 "+" immdup1_0_3 ") = 0" is immdup1_8_12=0b10010 & immdup1_S4 & immdup1_0_3  {
	local EA:4 = immdup1_S4 +  immdup1_0_3;
	*[ram]:1 EA = 0;
}

S2L:"memb(" immdup0_S4 "+" immdup0_0_3 ") = 1" is immdup0_8_12=0b10011 & immdup0_S4 & immdup0_0_3 {
	local EA:4 = immdup0_S4 + immdup0_0_3;
	*[ram]:1 EA = 1;
}
S2R:"memb(" immdup1_S4 "+" immdup1_0_3 ") = 1" is immdup1_8_12=0b10011 & immdup1_S4 & immdup1_0_3 {
	local EA:4 = immdup1_S4 + immdup1_0_3;
	*[ram]:1 EA = 1;
}

S2L:"allocframe("v")" is immdup0_9_12=0b1110 & immdup0_4_8 & immdup0_0_3=0 [v = immdup0_4_8 << 3;] {
        local EA:4 = SP - 8;
        *[ram]:8 EA = LRFP;
        FP = EA;
        SP = EA - v;
}
S2R:"allocframe("v")" is immdup1_9_12=0b1110 & immdup1_4_8 & immdup1_0_3=0 [v = immdup1_4_8 << 3;]{
        local EA:4 = SP - 8;
        *[ram]:8 EA = LRFP;
        FP = EA;
        SP = EA - v;
}


# Duplex/A
A1L:immdup0_D4 "=add(self," immdup0_4_10 ")" is immdup0_11_12=0b00 & immdup0_4_10 & immdup0_D4 {
	immdup0_D4 = immdup0_D4 + immdup0_4_10;
}
A1R:immdup1_D4 "=add(self," immdup1_4_10 ")" is immdup1_11_12=0b00 & immdup1_4_10 & immdup1_D4 {
	immdup1_D4 = immdup1_D4 + immdup1_4_10;
}

# seti
A1L:immdup0_D4"="immdup0_4_9 is immdup0_10_12=0b010 & immdup0_4_9 & immdup0_D4 {
    immdup0_D4 = immdup0_4_9;
}
A1R:immdup1_D4"="immdup1_4_9 is immdup1_10_12=0b010 & immdup1_4_9 & immdup1_D4 & (hasext0=0 | immext0used=1) {
    immdup1_D4 = immdup1_4_9;
}
A1R:immdup1_D4"="v is immdup1_10_12=0b010 & immdup1_4_9 & immdup1_D4 & hasext0=1 & immext0used=0 [v = immdup1_4_9 | immext0; immext0used=1;] {
    immdup1_D4 = v;
}

A1L:immdup0_D4"=add(SP, " v ")" is immdup0_10_12=0b011 & immdup0_4_9 & immdup0_D4 [v = immdup0_4_9 << 2; ]{
    immdup0_D4 = SP + v;
}
A1R:immdup1_D4"=add(SP, " v ")" is immdup1_10_12=0b011 & immdup1_4_9 & immdup1_D4 [v = immdup1_4_9 << 2; ]{
    immdup1_D4 = SP + v;
}

# tfr
A1L:immdup0_D4 "=" immdup0_S4 is immdup0_8_12=0b10000 & immdup0_S4 & immdup0_D4 {
    immdup0_D4 = immdup0_S4;
}
A1R:immdup1_D4 "=" immdup1_S4 is immdup1_8_12=0b10000 & immdup1_S4 & immdup1_D4 {
    immdup1_D4 = immdup1_S4;
}

#inc
A1L:immdup0_D4 "=add("immdup0_S4",1)"  is immdup0_8_12=0b10001 & immdup0_S4 & immdup0_D4 {
    immdup0_D4 = immdup0_S4 + 1;
}
A1R:immdup1_D4 "=add("immdup1_S4",1)"  is immdup1_8_12=0b10001 & immdup1_S4 & immdup1_D4 {
    immdup1_D4 = immdup1_S4 + 1;
}

A1L:immdup0_D4 "=and("immdup0_S4",1)"  is immdup0_8_12=0b10010 & immdup0_S4 & immdup0_D4 {
    immdup0_D4 = immdup0_S4 & 1;
}
A1R:immdup1_D4 "=and("immdup1_S4",1)"  is immdup1_8_12=0b10010 & immdup1_S4 & immdup1_D4 {
    immdup1_D4 = immdup1_S4 & 1;
}

A1L:immdup0_D4 "=sub(" immdup0_S4 ",1)" is immdup0_8_12=0b10011 & immdup0_S4 & immdup0_D4 {
	immdup0_D4 = immdup0_S4 - 1;
}
A1R:immdup1_D4 "=sub(" immdup1_S4 ",1)" is immdup1_8_12=0b10011 & immdup1_S4 & immdup1_D4 {
	immdup1_D4 = immdup1_S4 - 1;
}

A1L:immdup0_D4"=sxth(" immdup0_S4 ")" is immdup0_8_12=0b10100 & immdup0_S4 & immdup0_D4 {
	immdup0_D4 = sext(immdup0_S4:2);
}
A1R:immdup1_D4"=sxth(" immdup1_S4 ")" is immdup1_8_12=0b10100 & immdup1_S4 & immdup1_D4 {
	immdup1_D4 = sext(immdup1_S4:2);
}

A1L:immdup0_D4"=sxtb(" immdup0_S4 ")" is immdup0_8_12=0b10101 & immdup0_S4 & immdup0_D4 {
	immdup0_D4 = sext(immdup0_S4:1);
}
A1R:immdup1_D4"=sxtb(" immdup1_S4 ")" is immdup1_8_12=0b10101 & immdup1_S4 & immdup1_D4 {
	immdup1_D4 = sext(immdup1_S4:1);
}





A1L:immdup0_D4"=zxth(" immdup0_S4 ")" is immdup0_8_12=0b10110 & immdup0_S4 & immdup0_D4 {
	immdup0_D4 = zext(immdup0_S4:2);
}
A1R:immdup1_D4"=zxth(" immdup1_S4 ")" is immdup1_8_12=0b10110 & immdup1_S4 & immdup1_D4 {
	immdup1_D4 = zext(immdup1_S4:2);
}

A1L:immdup0_D4"=zxtb(" immdup0_S4 ")" is immdup0_8_12=0b10111 & immdup0_S4 & immdup0_D4 {
	immdup0_D4 = zext(immdup0_S4:1);
}
A1R:immdup1_D4"=zxtb(" immdup1_S4 ")" is immdup1_8_12=0b10111 & immdup1_S4 & immdup1_D4 {
	immdup1_D4 = zext(immdup1_S4:1);
}

A1L:immdup0_D4 "=add(self," immdup0_S4 ")" is immdup0_8_12=0b11000 & immdup0_S4 & immdup0_D4 {
	immdup0_D4 = immdup0_D4 + immdup0_S4;	
}
A1R:immdup1_D4 "=add(self," immdup1_S4 ")" is immdup1_8_12=0b11000 & immdup1_S4 & immdup1_D4 {
	immdup1_D4 = immdup1_D4 + immdup1_S4;	
}


A1L:"p0 = cmp.eq(" immdup0_S4 "," immdup0_0_1 ")" is immdup0_8_12=0b11001 & immdup0_S4 & immdup0_2_3=0 & immdup0_0_1 {
	if(immdup0_S4 != immdup0_0_1) goto <bad>;
	P0.new = PTRUE;
	goto <end>;
	<bad>
	P0.new = 0;
	<end>
}
A1R:"p0 = cmp.eq(" immdup1_S4 "," immdup1_0_1 ")" is immdup1_8_12=0b11001 & immdup1_S4 & immdup1_2_3=0 & immdup1_0_1 {
	if(immdup1_S4 != immdup1_0_1) goto <bad>;
	P0.new = PTRUE;
	goto <end>;
	<bad>
	P0.new = 0;
	<end>
}

A1L:immdup0_D4 "= -1" is immdup0_9_12=0b1101 & immdup0_7_8=0 & immdup0_6=0 & immdup0_4_5=0 & immdup0_D4 {
	immdup0_D4 = -1;
}
A1R:immdup1_D4 "= -1" is immdup1_9_12=0b1101 & immdup1_7_8=0 & immdup1_6=0 & immdup1_4_5=0 & immdup1_D4 {
	immdup1_D4 = -1;
}

A1L:"if(P0.new) " immdup0_D4 "= 0" is immdup0_9_12=0b1101 & immdup0_7_8=0 & immdup0_4_6=0b100 & immdup0_D4 {
	if(P0.new == 0) goto <end>;
		immdup0_D4 = 0;
	<end>
}
A1R:"if(P0.new) " immdup1_D4 "= 0" is immdup1_9_12=0b1101 & immdup1_7_8=0 & immdup1_4_6=0b100 & immdup1_D4 {
	if(P0.new == 0) goto <end>;
		immdup1_D4 = 0;
	<end>
}

A1L:"if(!P0.new) " immdup0_D4 "= 0" is immdup0_9_12=0b1101 & immdup0_7_8=0 & immdup0_4_6=0b101 & immdup0_D4 {
	if(P0.new != 0) goto <end>;
		immdup0_D4 = 0;
	<end>
}
A1R:"if(!P0.new) " immdup1_D4 "= 0" is immdup1_9_12=0b1101 & immdup1_7_8=0 & immdup1_4_6=0b101 & immdup1_D4 {
	if(P0.new != 0) goto <end>;
		immdup1_D4 = 0;
	<end>
}

A1L:"if(P0) " immdup0_D4 "= 0" is immdup0_9_12=0b1101 & immdup0_7_8=0 & immdup0_4_6=0b110 & immdup0_D4 {
	if(P0 == 0) goto <end>;
		immdup0_D4 = 0;
	<end>
}
A1R:"if(P0) " immdup1_D4 "= 0" is immdup1_9_12=0b1101 & immdup1_7_8=0 & immdup1_4_6=0b110 & immdup1_D4 {
	if(P0 == 0) goto <end>;
		immdup1_D4 = 0;
	<end>
}

A1L:"if(!P0) " immdup0_D4 "= 0" is immdup0_9_12=0b1101 & immdup0_7_8=0 & immdup0_4_6=0b111 & immdup0_D4 {
	if(P0 != 0) goto <end>;
		immdup0_D4 = 0;
	<end>
}
A1R:"if(!P0) " immdup1_D4 "= 0" is immdup1_9_12=0b1101 & immdup1_7_8=0 & immdup1_4_6=0b111 & immdup1_D4 {
	if(P0 != 0) goto <end>;
		immdup1_D4 = 0;
	<end>
}

A1L:immdup0_D4_pair "= combine(0," immdup0_5_6 ")" is immdup0_10_12=0b111 & immdup0_9=0 & immdup0_8=0 & immdup0_7=0 & immdup0_5_6 & immdup0_3_4=0b00 & immdup0_D4_pair {
        immdup0_D4_pair = (immdup0_5_6 << 32);
}
A1R:immdup1_D4_pair  "= combine(0," immdup1_5_6 ")" is immdup1_10_12=0b111 & immdup1_9=0 & immdup1_8=0 & immdup1_7=0 & immdup1_5_6 & immdup1_3_4=0b00 & immdup1_D4_pair {
        immdup1_D4_pair = (immdup1_5_6 << 32);
}

A1L:immdup0_D3_pair "=combine(1," immdup0_5_6 ")" is immdup0_10_12=0b111 & immdup0_9=0 & immdup0_8=0 & immdup0_7=0 & immdup0_5_6 & immdup0_3_4=0b01 & immdup0_D3_pair {
	immdup0_D3_pair = 1 | (immdup0_5_6 << 32);
}
A1R:immdup1_D3_pair "=combine(1," immdup1_5_6 ")" is immdup1_10_12=0b111 & immdup1_9=0 & immdup1_8=0 & immdup1_7=0 & immdup1_5_6 & immdup1_3_4=0b01 & immdup1_D3_pair {
	immdup1_D3_pair = 1 | (immdup1_5_6 << 32);
}

A1L:immdup0_D3_pair "=combine(2," immdup0_5_6 ")" is immdup0_10_12=0b111 & immdup0_9=0 & immdup0_8=0 & immdup0_7=0 & immdup0_5_6 & immdup0_3_4=0b10 & immdup0_D3_pair {
	immdup0_D3_pair = 2 | (immdup0_5_6 << 32);
}
A1R:immdup1_D3_pair "=combine(2," immdup1_5_6 ")" is immdup1_10_12=0b111 & immdup1_9=0 & immdup1_8=0 & immdup1_7=0 & immdup1_5_6 & immdup1_3_4=0b10 & immdup1_D3_pair {
	immdup1_D3_pair = 2 | (immdup1_5_6 << 32);
}

A1L:immdup0_D3_pair "=combine(3," immdup0_5_6 ")" is immdup0_10_12=0b111 & immdup0_9=0 & immdup0_8=0 & immdup0_7=0 & immdup0_5_6 & immdup0_3_4=0b11 & immdup0_D3_pair {
	immdup0_D3_pair = 3 | (immdup0_5_6 << 32);
}
A1R:immdup1_D3_pair "=combine(3," immdup1_5_6 ")" is immdup1_10_12=0b111 & immdup1_9=0 & immdup1_8=0 & immdup1_7=0 & immdup1_5_6 & immdup1_3_4=0b11 & immdup1_D3_pair {
	immdup1_D3_pair = 3 | (immdup1_5_6 << 32);
}

A1L:immdup0_D3_pair "=combine(0," immdup0_S4 ")" is immdup0_10_12=0b111 & immdup0_9=0 & immdup0_8=1 & immdup0_S4 & immdup0_3=0 & immdup0_D3_pair {
	immdup0_D3_pair = zext(immdup0_S4);
	immdup0_D3_pair = immdup0_D3_pair << 32;
}
A1R:immdup1_D3_pair "=combine(0," immdup1_S4 ")" is immdup1_10_12=0b111 & immdup1_9=0 & immdup1_8=1 & immdup1_S4 & immdup1_3=0 & immdup1_D3_pair {
	immdup1_D3_pair = zext(immdup1_S4);
	immdup1_D3_pair = immdup1_D3_pair << 32;
}

A1L:immdup0_D3_pair "=combine(" immdup0_S4 ", 0)" is immdup0_10_12=0b111 & immdup0_9=0 & immdup0_8=1 & immdup0_S4 & immdup0_3=1 & immdup0_D3_pair {
	immdup0_D3_pair = zext(immdup0_S4);
}
A1R:immdup1_D3_pair "=combine(" immdup1_S4 ", 0)" is immdup1_10_12=0b111 & immdup1_9=0 & immdup1_8=1 & immdup1_S4 & immdup1_3=1 & immdup1_D3_pair {
	immdup1_D3_pair = zext(immdup1_S4);
}

}


L1R:"" is mode=1100 {}
L1L:"" is mode=1100 {}

L2R:"" is mode=1100 {}
L2L:"" is mode=1100 {}

A1R:"" is mode=1100 {}
A1L:"" is mode=1100 {}

S1R:"" is mode=1100 {}
S1L:"" is mode=1100 {}

S2R:"" is mode=1100 {}
S2L:"" is mode=1100 {}


duplex:"{{"L1R", "L1L"}}" is imm_29_31=0b000 & imm_13=0  & L1L & L1R {
	build L1R;
	build L1L;
}
duplex:"{{"L1R", "L2L"}}" is imm_29_31=0b000 & imm_13=1 & L2L & L1R {
    build L1R;
    build L2L;
}
duplex:"{{"L2R", "L2L"}}" is imm_29_31=0b001 & imm_13=0 & L2L & L2R {
	build L2R;
	build L2L;
}
duplex:"{{"A1R", "A1L"}}" is imm_29_31=0b001 & imm_13=1 & A1L & A1R {
	build A1L;
	build A1R;
}
duplex:"{{"L1L "," A1R "}}" is imm_29_31=0b010 & imm_13=0 & A1R & L1L {
	build L1L;
	build A1R;
}
duplex:"{{"A1R", "L2L"}}" is imm_29_31=0b010 & imm_13=1 & A1R & L2L {
	build L2L;
	build A1R;
}
duplex:"{{"A1R", "S1L"}}" is imm_29_31=0b011 & imm_13=0 & A1R & S1L {
	build S1L;
	build A1R;
}
duplex:"{{"A1R", "S2L"}}" is imm_29_31=0b011 & imm_13=1 & A1R & S2L {
	build S2L;
	build A1R;
}
duplex:"{{"L1R", "S1L"}}" is imm_29_31=0b100 & imm_13=0 & L1R & S1L {
	build S1L;
	build L1R;
}
duplex:"{{"L2R", "S1L"}}" is imm_29_31=0b100 & imm_13=1 & L2R & S1L {
	build S1L;
	build L2R;
}
duplex:"{{"S1R", "S1L"}}" is imm_29_31=0b101 & imm_13=0 & S1R & S1L {
	build S1L;
	build S1R;
}
duplex:"{{"S1R", "S2L"}}" is imm_29_31=0b101 & imm_13=1 & S1R & S2L {
	build S2L;
	build S1R;
}
duplex:"{{"L1R", "S2L"}}" is imm_29_31=0b110 & imm_13=0 & L1R & S2L {
	build S2L;
	build L1R;
}
duplex:"{{"L2R", "S2L"}}" is imm_29_31=0b110 & imm_13=1 & L2R & S2L {
	build S2L;
	build L2R;
}
duplex:"{{"S2R", "S2L"}}" is imm_29_31=0b111 & imm_13=0 & S2R & S2L {
	build S2L;
	build S2R;
}
duplex:"duplex_0xf_reserved" is imm_29_31=0b111 & imm_13=1 {_stub();}


macro prelude() {

    # TODO: this is a readonly value
    PC = inst_start;

    #TODO: this is a HORRIFIC hack
    # when a predicate is set to true it should be = 0xFF but ghidra can't recognise that a condition is constant if the true condition isn't either 1 or a power of 2?????
    # When ghidra works, remove this and replace with constant FF everywhere
    PTRUE = 1;


    P0.new =P0;
    P1.new =P1;
    P2.new =P2;
    P3.new =P3;

}
macro prolude() {
    P0 =P0.new;
    P1 =P1.new;
    P2 =P2.new;
    P3 =P3.new;
    
    
}









define pcodeop missing_ext0;
define pcodeop missing_ext1;
missing_marker0:"" is disabled {
missing_ext0();
}
missing_marker1:"" is disabled {
missing_ext1();
}
terminator:"" is disabled {}

terminator:"" is disabled & hasext0=1 & immext0used=0 & missing_marker0{
build missing_marker0;
}
terminator:"" is disabled & hasext0=1 & immext0used=1 {}
terminator:"" is disabled & hasext0=1 & immext0used=1 & hasext1=1 & immext1used=0 & missing_marker1{
build missing_marker1;
}
terminator:"" is disabled & hasext0=1 & immext0used=1 & hasext1=1 & immext1used=1 {}

# Fallback for branch mode
slot:"" is mode=1100 {}

build_branches:"" is slot [mode=1100; ] {
	build slot;
}
build_branches_1:"" is build_branches { build build_branches; }
build_branches_2:"" is build_branches { build build_branches; }
build_branches_3:"" is build_branches { build build_branches; }
build_branches_4:"" is build_branches { build build_branches; }

build_duplex_branches:"" is duplex [mode=1100;] {
	build duplex;
}




slot0: slot is slot &  (parse=0b01 | parse=0b10) & iclass [mode=0;] { build slot; }
slot1: slot0 is slot0 [mode=0;]  {  build slot0; }
slot2: slot0 is slot0 [mode=0;]  { build slot0; }


slotX: slot is slot & parse=0b11 [mode=0;]  { 
	build slot;        
    prolude();
}



slotX: duplex is duplex & parse=0b00 & build_duplex_branches [mode=0;] { 
	build duplex;
	 prolude();
	 
	 build build_duplex_branches;
	 
	 
}

macro endloop0() {
	     if(LC0 <= 1) goto <endl0>;
        LC0 = LC0 - 1;
        goto [SA0];
        <endl0> 
}
macro endloop1() {
	     if(LC1 <= 1) goto <endl1>;
        LC1 = LC1 - 1;
        goto [SA1];
        <endl1> 
}
 # 2 ins packets
    :{ slot0 slotX "}:endloop0" is slot0 & parse=0b10 & build_branches_1; slotX & build_branches_2 & terminator [mode=0;]  {
        prelude();
        build slot0;
        build slotX;


        
        build build_branches_1;
       	build build_branches_2;
       	
       	endloop0();
       	
        
     
        build terminator; 
   }
   :{ slot0 slotX } is slot0 & parse=0b01 & build_branches_1; slotX & build_branches_2 & terminator [mode=0;] {
	
       prelude();
       build slot0;
       build slotX;
       
       build build_branches_1;
       build build_branches_2;
       
       
       build terminator; 
   }


# 3 ins packet

   
   :{ slot0 slot1 slotX } is slot0 & build_branches_1 & parse=0b01;slot1 & build_branches_2 & parse!=0b10;slotX & build_branches_3 & terminator[mode=0;]{
       prelude();
       build slot0;
       build slot1;
       build slotX;
       
       
        build build_branches_1;
       build build_branches_2;
       build build_branches_3;
       
       
       
		build terminator; 
   }
   
   
   
   
   :{ slot0 slot1 slotX "}:endloop0" is slot0 & build_branches_1 &parse=0b10 ; slot1 & build_branches_2 & parse=0b01 ; slotX & build_branches_3 & terminator[mode=0;]{
       prelude();
       build slot0;
       build slot1;
       build slotX;
       
       
        build build_branches_1;
       build build_branches_2;
       build build_branches_3;
       
       endloop0();
       
		build terminator; 
   }
   
   
   
   :{ slot0 slot1 slotX "}:endloop1" is slot0 & build_branches_1 &parse=0b01 ; slot1 & build_branches_2 & parse=0b10 ; slotX & build_branches_3 & terminator[mode=0;]{
       prelude();
       build slot0;
       build slot1;
       build slotX;
       
       
        build build_branches_1;
       build build_branches_2;
       build build_branches_3;
       
       endloop1();
       
		build terminator; 
   }
   :{ slot0 slot1 slotX "}:endloop0:endloop1" is slot0 & build_branches_1 &parse=0b10 ; slot1 & build_branches_2 & parse=0b10 ; slotX & build_branches_3 & terminator[mode=0;]{
       prelude();
       build slot0;
       build slot1;
       build slotX;
       
       
        build build_branches_1;
       build build_branches_2;
       build build_branches_3;
       
       endloop0();
       endloop1();
       
		build terminator; 
   }
   # 4 ins packets
   
   

   :{ slot0 slot1 slot2 slotX } is slot0 & build_branches_1 & parse=0b01;slot1 & build_branches_2 & parse!=0b10;slot2 & build_branches_3;slotX &  build_branches_4 & terminator[mode=0;]{
       prelude();
       build slot0;
       build slot1;
       build slot2;
       build slotX;
       
	   build build_branches_1;
       build build_branches_2;
       build build_branches_3;
       build build_branches_4;
       
       build terminator; 
    


   }
   
   :{ slot0 slot1 slot2 slotX "}:endloop0" is slot0 & build_branches_1 & parse=0b10 ;slot1 & build_branches_2 & parse=0b01;slot2 & build_branches_3;slotX &  build_branches_4 & terminator[mode=0;]{
       prelude();
       build slot0;
       build slot1;
       build slot2;
       build slotX;
       
       build build_branches_1;
       build build_branches_2;
       build build_branches_3;
       build build_branches_4;
       
       
       endloop0();
       
       
       build terminator; 
   }
   :{ slot0 slot1 slot2 slotX "}:endloop1" is slot0 & build_branches_1 & parse=0b01 ;slot1 & build_branches_2 & parse=0b10;slot2 & build_branches_3;slotX &  build_branches_4 & terminator[mode=0;]{
       prelude();
       build slot0;
       build slot1;
       build slot2;
       build slotX;
       
       build build_branches_1;
       build build_branches_2;
       build build_branches_3;
       build build_branches_4;
       
       
       endloop1();
       
       
       build terminator; 
   }
   :{ slot0 slot1 slot2 slotX "}:endloop0:endloop1" is slot0 & build_branches_1 & parse=0b10 ;slot1 & build_branches_2 & parse=0b10;slot2 & build_branches_3;slotX &  build_branches_4 & terminator[mode=0;]{
       prelude();
       build slot0;
       build slot1;
       build slot2;
       build slotX;
       
       build build_branches_1;
       build build_branches_2;
       build build_branches_3;
       build build_branches_4;
       
       endloop0();
       endloop1();
       
       
       build terminator; 
   }
   
   

   :{ slotX } is slotX & mode=0 & build_branches & terminator [mode=0;] {
       prelude();
       build slotX;
       
       	 

       build build_branches;
       
       
       build terminator; 
   } 

immext_marker:"" is disabled {}
slot:"immext0(" v ")" is iclass=0b0000 & imm_16_27 & imm_0_13u & hasext0=0 & parse!=0b11 & immext_marker [v= ((imm_0_13u) | (imm_16_27 << 14)) << 6; immext0 = ((imm_0_13u) | (imm_16_27 << 14)) << 6; hasext0=1;] { build immext_marker; } 
slot:"immext1(" v ")" is iclass=0b0000 & imm_16_27 & imm_0_13u & hasext0=1 & immext_marker  [v=((imm_0_13u) | (imm_16_27 << 14)) << 6; immext1 = ((imm_0_13u) | (imm_16_27 << 14)) << 6; hasext1=1;] { build immext_marker; } 


