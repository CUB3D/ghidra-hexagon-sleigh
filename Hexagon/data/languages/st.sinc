NR_ST_COND_1_s6: s6 is imm_0_4u & imm_13 & (hasext0=0 | immext0used=1) [s6 = imm_0_4u | (imm_13 << 5);] { export *[const]:4 s6; }
BR_ST_COND_1_s6: s6 is imm_0_4u & imm_13 [s6 = imm_0_4u | (imm_13 << 5); ] { export *[const]:4 s6; }
NR_ST_COND_1_s6: s6 is imm_0_4u & imm_13 & hasext0=1 & immext0used=0 & immext0 [s6 = (imm_0_4u | (imm_13 << 5)) | immext0; immext0used=1; immext0everused=1; immext0pos=pktid;] {export *[const]:4 s6; }
BR_ST_COND_1_s6: s6 is imm_0_4u & imm_13 & immext0 & immext0pos=pktid [s6 = (imm_0_4u | (imm_13 << 5)) | immext0; ] {export *[const]:4 s6; }
NR_ST_COND_1_s6: s6 is imm_0_4u & imm_13 & hasext0=1 & hasext1=1 & immext0used=1 & immext1 [s6 = (imm_0_4u | (imm_13 << 5)) | immext1; immext1used=1; immext1pos=pktid;] { export *[const]:4 s6;}
BR_ST_COND_1_s6: s6 is imm_0_4u & imm_13 & immext1pos=pktid & immext1 [s6 = (imm_0_4u | (imm_13 << 5)) | immext1; ] { export *[const]:4 s6;}

@include "st_dword.sinc"
@include "st_byte.sinc"
@include "st_halfword.sinc"




# ST:Release
define pcodeop release_at;
define pcodeop release_st;
with slot: iclass=0b1010 & mode=0 {
    :"release(" S5 "):at" is imm_21_27=0b0000111 & S5 & S5i & imm_13=0 & T5 & imm_6_7=0 & imm_2_5=0b0011 & imm_0_1  {
    	release_at(S5i);
    }
    :"release(" S5 "):st" is imm_21_27=0b0000111 & S5 & S5i & imm_13=0 & T5 & imm_6_7=0 & imm_2_5=0b1011 & imm_0_1  {
    	release_st(S5i);
    }
}

@include "st_word.sinc"

# ST:Allocate stack frame
with slot: iclass=0b1010 & mode=0 {
    :"allocframe("S5","U11"):raw" is imm_21_27=0b0000100 & S5 & S5i & imm_11_13=0b000 & imm_0_10 [ U11 = imm_0_10 << 3; ] {
        local EA:4 = S5i - 8;
        *[ram]:8 EA = LRFPc;
        FP = EA;
	    S5 = FPc - U11;
    }
    :"allocframe("U11")" is imm_21_27=0b0000100 & S5=29  & imm_11_13=0b000 & imm_0_10 [ U11 = imm_0_10 << 3; ] {
        local EA:4 = SPc - 8;
        *[ram]:8 EA = LRFPc;
        FP = EA;
	    SP = FPc - U11;
    }
}
